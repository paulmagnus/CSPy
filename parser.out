Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> file
Rule 1     file -> optdoc importblock declaration_suite nonempty_block
Rule 2     file -> optdoc importblock declaration_suite empty
Rule 3     empty -> <empty>
Rule 4     optdoc -> DOCSTRING NL
Rule 5     optdoc -> empty
Rule 6     importblock -> nonempty_importblock
Rule 7     importblock -> empty
Rule 8     nonempty_importblock -> singleimport
Rule 9     singleimport -> import_statement
Rule 10    singleimport -> pyimport_statement
Rule 11    nonempty_importblock -> nonempty_importblock singleimport
Rule 12    import_statement -> IMPORT IDENTIFIER NL
Rule 13    import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL
Rule 14    import_statement -> FROM IDENTIFIER IMPORT TIMES NL
Rule 15    import_statement -> FROM IDENTIFIER IMPORT importlist NL
Rule 16    importlist -> IDENTIFIER
Rule 17    importlist -> IDENTIFIER AS IDENTIFIER
Rule 18    importlist -> importlist COMMA importlist
Rule 19    pyimport_statement -> PYIMPORT IDENTIFIER NL
Rule 20    pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL
Rule 21    pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL
Rule 22    pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL
Rule 23    declaration_suite -> variableblock classblock methodblock
Rule 24    declaration_suite -> PASS NL
Rule 25    variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL
Rule 26    variableblock -> empty empty
Rule 27    nonempty_variableblock -> declaration
Rule 28    nonempty_variableblock -> nonempty_variableblock COMMA nonempty_variableblock
Rule 29    declaration -> IDENTIFIER COLON type
Rule 30    declaration -> IDENTIFIER COLON type EQUALS expression
Rule 31    classblock -> class_definition classblock
Rule 32    classblock -> empty
Rule 33    class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT
Rule 34    class_suite -> optdoc declaration_suite
Rule 35    opt_extends -> EXTENDS type
Rule 36    opt_extends -> empty empty
Rule 37    methodblock -> subroutine_definition methodblock
Rule 38    methodblock -> empty
Rule 39    subroutine_definition -> function_definition
Rule 40    subroutine_definition -> procedure_definition
Rule 41    function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite
Rule 42    procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite
Rule 43    argumentlist -> nonempty_argumentlist COMMA nonempty_defaultlist
Rule 44    argumentlist -> nonempty_argumentlist empty empty
Rule 45    argumentlist -> empty empty empty
Rule 46    argumentlist -> nonempty_defaultlist empty empty
Rule 47    nonempty_argumentlist -> IDENTIFIER COLON type
Rule 48    nonempty_argumentlist -> nonempty_argumentlist COMMA nonempty_argumentlist
Rule 49    nonempty_defaultlist -> nonempty_defaultlist COMMA nonempty_defaultlist
Rule 50    nonempty_defaultlist -> IDENTIFIER COLON type EQUALS expression
Rule 51    suite -> NL INDENT optdoc block DEDENT
Rule 52    suite -> statement_simple NL
Rule 53    block -> variableblock nonempty_block
Rule 54    nonempty_block -> statement_complex empty
Rule 55    nonempty_block -> statement_complex nonempty_block
Rule 56    statement_complex -> loop
Rule 57    statement_complex -> conditional
Rule 58    statement_complex -> try_except
Rule 59    statement_complex -> statement_multi NL
Rule 60    statement_complex -> statement_multi SEMICOLON NL
Rule 61    statement_multi -> statement_multi SEMICOLON statement_simple
Rule 62    statement_multi -> statement_simple
Rule 63    statement_simple -> assignment
Rule 64    statement_simple -> procedure_call
Rule 65    statement_simple -> return
Rule 66    statement_simple -> assert
Rule 67    statement_simple -> yield
Rule 68    statement_simple -> CONTINUE
Rule 69    statement_simple -> BREAK
Rule 70    statement_simple -> PASS
Rule 71    statement_simple -> raise
Rule 72    statement_simple -> delete
Rule 73    raise -> RAISE IDENTIFIER
Rule 74    raise -> RAISE function_call
Rule 75    raise -> RAISE empty
Rule 76    delete -> DEL expression
Rule 77    loop -> while_loop
Rule 78    loop -> for_loop
Rule 79    while_loop -> WHILE expression COLON suite
Rule 80    for_loop -> FOR IDENTIFIER IN expression COLON suite
Rule 81    for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite
Rule 82    conditional -> IF expression COLON suite conditional_extension
Rule 83    conditional_extension -> empty
Rule 84    conditional_extension -> ELIF expression COLON suite conditional_extension
Rule 85    conditional_extension -> ELSE COLON suite
Rule 86    try_except -> TRY COLON suite exceptlist_nonempty empty empty
Rule 87    try_except -> TRY COLON suite exceptlist_nonempty except_else empty
Rule 88    try_except -> TRY COLON suite exceptlist_nonempty empty except_finally
Rule 89    try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally
Rule 90    try_except -> TRY COLON suite empty empty except_finally
Rule 91    except_simple -> EXCEPT COLON suite
Rule 92    except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist
Rule 93    except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist
Rule 94    except_else -> ELSE COLON suite
Rule 95    except_finally -> FINALLY COLON suite
Rule 96    exceptlist_nonempty -> except_simple
Rule 97    exceptlist_nonempty -> except_alias
Rule 98    exceptlist_nonempty -> except_specific
Rule 99    exceptlist -> except_simple
Rule 100   exceptlist -> except_alias
Rule 101   exceptlist -> except_specific
Rule 102   exceptlist -> empty
Rule 103   assignment -> indexing assignment_operator expression
Rule 104   assignment -> slicing assignment_operator expression
Rule 105   assignment -> variable assignment_operator expression
Rule 106   assignment -> member assignment_operator expression
Rule 107   assignment_operator -> EQUALS
Rule 108   assignment_operator -> PLUSEQU
Rule 109   assignment_operator -> MINUSEQU
Rule 110   assignment_operator -> TIMESEQU
Rule 111   assignment_operator -> DIVEQU
Rule 112   assignment_operator -> MODEQU
Rule 113   assignment_operator -> BITANDEQU
Rule 114   assignment_operator -> BITOREQU
Rule 115   assignment_operator -> BITXOREQU
Rule 116   assignment_operator -> LSHIFTEQU
Rule 117   assignment_operator -> RSHIFTEQU
Rule 118   assignment_operator -> POWEQU
Rule 119   assignment_operator -> INTDIVEQU
Rule 120   indexing -> expression LBRACKET expression RBRACKET
Rule 121   slicing -> expression LBRACKET expression COLON expression optslice RBRACKET
Rule 122   slicing -> expression LBRACKET empty COLON expression optslice RBRACKET
Rule 123   slicing -> expression LBRACKET expression COLON empty optslice RBRACKET
Rule 124   slicing -> expression LBRACKET empty COLON empty optslice RBRACKET
Rule 125   optslice -> empty empty
Rule 126   optslice -> COLON empty
Rule 127   optslice -> COLON expression
Rule 128   procedure_call -> expression LPAREN expressionlist RPAREN
Rule 129   return -> RETURN empty
Rule 130   return -> RETURN expression
Rule 131   assert -> assertnomessage
Rule 132   assert -> assertmessage
Rule 133   assertnomessage -> ASSERT expression
Rule 134   assertmessage -> ASSERT expression COMMA literal
Rule 135   yield -> YIELD expression
Rule 136   type -> function_type
Rule 137   type -> procedure_type
Rule 138   type -> tuple_type
Rule 139   type -> list_type
Rule 140   type -> dictionary_type
Rule 141   type -> set_type
Rule 142   type -> frozenset_type
Rule 143   type -> generator_type
Rule 144   type -> member_type
Rule 145   type -> IDENTIFIER
Rule 146   member_type -> IDENTIFIER DOT IDENTIFIER
Rule 147   generator_type -> GENERATOR OF type
Rule 148   function_type -> FN LPAREN typelist RPAREN ARROW type
Rule 149   procedure_type -> PROC LPAREN typelist RPAREN
Rule 150   typelist -> nonempty_typelist COMMA nonempty_default_typelist
Rule 151   typelist -> nonempty_typelist empty empty
Rule 152   typelist -> empty empty nonempty_default_typelist
Rule 153   typelist -> empty empty empty
Rule 154   nonempty_typelist -> type
Rule 155   nonempty_typelist -> nonempty_typelist COMMA nonempty_typelist
Rule 156   nonempty_default_typelist -> QMARK type
Rule 157   nonempty_default_typelist -> nonempty_default_typelist COMMA nonempty_default_typelist
Rule 158   tuple_type -> tupleof
Rule 159   tuple_type -> tupleparens
Rule 160   tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN
Rule 161   tupleparens -> LPAREN tuple_typelist RPAREN
Rule 162   tuple_typelist -> nonempty_tuple_typelist
Rule 163   tuple_typelist -> empty
Rule 164   nonempty_tuple_typelist -> type
Rule 165   nonempty_tuple_typelist -> nonempty_tuple_typelist TIMES nonempty_tuple_typelist
Rule 166   list_type -> listof
Rule 167   list_type -> listbracket
Rule 168   listof -> LIST OF type
Rule 169   listbracket -> LBRACKET type RBRACKET
Rule 170   set_type -> SET OF type
Rule 171   frozenset_type -> FROZENSET OF type
Rule 172   dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET
Rule 173   expression -> calculation
Rule 174   expression -> function_call
Rule 175   expression -> grouping
Rule 176   expression -> literal
Rule 177   expression -> indexing
Rule 178   expression -> slicing
Rule 179   expression -> ternary
Rule 180   expression -> member
Rule 181   expression -> identity
Rule 182   expression -> membership
Rule 183   expression -> variable
Rule 184   calculation -> expression PLUS expression
Rule 185   calculation -> expression MINUS expression
Rule 186   calculation -> expression TIMES expression
Rule 187   calculation -> expression DIVIDE expression
Rule 188   calculation -> expression PERCENT expression
Rule 189   calculation -> expression INTDIV expression
Rule 190   calculation -> expression POW expression
Rule 191   calculation -> expression BITOR expression
Rule 192   calculation -> expression BITAND expression
Rule 193   calculation -> expression LSHIFT expression
Rule 194   calculation -> expression RSHIFT expression
Rule 195   calculation -> expression EQUALTO expression
Rule 196   calculation -> expression NEQUALTO expression
Rule 197   calculation -> expression LT expression
Rule 198   calculation -> expression LE expression
Rule 199   calculation -> expression GT expression
Rule 200   calculation -> expression GE expression
Rule 201   calculation -> expression REQUALTO expression
Rule 202   calculation -> expression BOOLOR expression
Rule 203   calculation -> expression BOOLAND expression
Rule 204   calculation -> expression OR expression
Rule 205   calculation -> expression AND expression
Rule 206   calculation -> expression CARET expression
Rule 207   expression -> MINUS expression
Rule 208   expression -> PLUS expression
Rule 209   expression -> TILDE expression
Rule 210   expression -> EXMARK expression
Rule 211   expression -> NOT expression
Rule 212   function_call -> expression LPAREN expressionlist RPAREN
Rule 213   expressionlist -> nonempty_expressionlist
Rule 214   expressionlist -> empty
Rule 215   nonempty_expressionlist -> expression
Rule 216   nonempty_expressionlist -> nonempty_expressionlist COMMA nonempty_expressionlist
Rule 217   grouping -> LPAREN expression RPAREN
Rule 218   literal -> INTLITERAL
Rule 219   literal -> FLOATLITERAL
Rule 220   literal -> BOOLLITERAL
Rule 221   literal -> STRINGLITERAL
Rule 222   literal -> DOCSTRING
Rule 223   literal -> NONE
Rule 224   literal -> function_literal
Rule 225   literal -> procedure_literal
Rule 226   literal -> tuple_literal
Rule 227   literal -> list_literal
Rule 228   literal -> dictionary_literal
Rule 229   literal -> set_literal
Rule 230   function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
Rule 231   tuple_literal -> LPAREN tuplelist RPAREN
Rule 232   tuplelist -> nonempty_tuple
Rule 233   tuplelist -> empty
Rule 234   nonempty_tuple -> singletontuple
Rule 235   nonempty_tuple -> crosstuple
Rule 236   singletontuple -> nonempty_expressionlist COMMA
Rule 237   crosstuple -> nonempty_expressionlist
Rule 238   list_literal -> LBRACKET expressionlist RBRACKET
Rule 239   dictionary_literal -> LCURLY dictionarylist RCURLY
Rule 240   dictionarylist -> nonempty_dictionarylist
Rule 241   dictionarylist -> empty
Rule 242   nonempty_dictionarylist -> expression COLON expression
Rule 243   nonempty_dictionarylist -> nonempty_dictionarylist COMMA nonempty_dictionarylist
Rule 244   set_literal -> LCURLY nonempty_expressionlist RCURLY
Rule 245   variable -> IDENTIFIER
Rule 246   ternary -> expression QMARK expression COLON expression
Rule 247   member -> expression DOT IDENTIFIER
Rule 248   identity -> expression IS expression
Rule 249   identity -> expression ISNOT expression
Rule 250   membership -> expression IN expression
Rule 251   membership -> expression NOTIN expression
Rule 252   variableblock -> COLONCOLON error COLONCOLON NL
Rule 253   declaration -> IDENTIFIER COLON error EQUALS expression
Rule 254   class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT
Rule 255   class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT
Rule 256   function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite
Rule 257   function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite
Rule 258   function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite
Rule 259   procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite
Rule 260   procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite
Rule 261   nonempty_argumentlist -> error COLON type
Rule 262   nonempty_defaultlist -> IDENTIFIER COLON error EQUALS expression
Rule 263   while_loop -> WHILE error COLON suite
Rule 264   for_loop -> FOR error IN expression COLON suite
Rule 265   for_loop -> FOR IDENTIFIER IN error COLON suite
Rule 266   for_loop -> FOR error IN expression DOTDOT expression COLON suite
Rule 267   for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite
Rule 268   for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite
Rule 269   conditional -> IF error COLON suite conditional_extension
Rule 270   conditional_extension -> ELIF error COLON suite conditional_extension
Rule 271   except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist
Rule 272   except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist
Rule 273   except_specific -> EXCEPT error COLON suite exceptlist
Rule 274   indexing -> expression LBRACKET error RBRACKET
Rule 275   slicing -> expression LBRACKET error COLON expression optslice RBRACKET
Rule 276   slicing -> expression LBRACKET expression COLON expression error RBRACKET
Rule 277   procedure_call -> expression LPAREN error RPAREN
Rule 278   function_type -> FN LPAREN error RPAREN ARROW type
Rule 279   procedure_type -> PROC LPAREN error RPAREN
Rule 280   dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET
Rule 281   dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET
Rule 282   dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET
Rule 283   tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN
Rule 284   tuple_type -> TUPLE OF LPAREN error RPAREN
Rule 285   function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
Rule 286   function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
Rule 287   function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
Rule 288   procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
Rule 289   procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
Rule 290   procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
Rule 291   list_literal -> LBRACKET error RBRACKET
Rule 292   dictionary_literal -> LCURLY error RCURLY

Terminals, with rules where they appear

AND                  : 205
ARROW                : 41 148 230 256 257 258 278 285 286 287
AS                   : 13 17 20 92 271 272
ASSERT               : 133 134
BITAND               : 192
BITANDEQU            : 113
BITOR                : 172 191 280 281 282
BITOREQU             : 114
BITXOREQU            : 115
BOOLAND              : 203
BOOLLITERAL          : 220
BOOLOR               : 202
BREAK                : 69
CARET                : 206
CLASS                : 33 254 255
COLON                : 29 30 33 41 42 47 50 79 80 81 82 84 85 86 87 88 89 90 91 92 93 94 95 121 122 123 124 126 127 230 242 246 253 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 275 276 285 286 287 288 290
COLONCOLON           : 25 25 252 252
COMMA                : 18 28 43 48 49 134 150 155 157 216 236 243
CONTINUE             : 68
DEDENT               : 33 51 254 255
DEF                  : 41 42 256 257 258 259 260
DEL                  : 76
DICT                 : 172 280 281 282
DIVEQU               : 111
DIVIDE               : 187
DOCSTRING            : 4 222
DOT                  : 146 247
DOTDOT               : 81 266 267 268
ELIF                 : 84 270
ELSE                 : 85 94
EQUALS               : 30 50 107 253 262
EQUALTO              : 195
EXCEPT               : 91 92 93 271 272 273
EXMARK               : 210
EXTENDS              : 35
FINALLY              : 95
FLOATLITERAL         : 219
FN                   : 148 278
FOR                  : 80 81 264 265 266 267 268
FROM                 : 14 15 21 22
FROZENSET            : 171
GE                   : 200
GENERATOR            : 147
GT                   : 199
IDENTIFIER           : 12 13 13 14 15 16 17 17 19 20 20 21 22 29 30 33 41 42 47 50 73 80 81 92 92 93 145 146 146 245 247 253 254 255 257 258 260 262 265 267 268 271 272
IF                   : 82 269
IMPORT               : 12 13 14 15
IN                   : 80 81 250 264 265 266 267 268
INDENT               : 33 51 254 255
INTDIV               : 189
INTDIVEQU            : 119
INTLITERAL           : 218
IS                   : 248
ISNOT                : 249
LAMBDA               : 230 285 286 287 288 289 290
LBRACKET             : 120 121 122 123 124 169 172 238 274 275 276 280 281 282 291
LCURLY               : 239 244 292
LE                   : 198
LIST                 : 168
LPAREN               : 41 42 128 148 149 160 161 212 217 230 230 231 256 257 258 259 260 277 278 279 283 284 285 285 286 286 287 287 288 288 289 289 290 290
LSHIFT               : 193
LSHIFTEQU            : 116
LT                   : 197
MINUS                : 185 207
MINUSEQU             : 109
MODEQU               : 112
NEQUALTO             : 196
NL                   : 4 12 13 14 15 19 20 21 22 24 25 33 51 52 59 60 252 254 255
NONE                 : 223
NOT                  : 211
NOTIN                : 251
OF                   : 147 160 168 170 171 172 281 282 284
OR                   : 204
PASS                 : 24 70
PERCENT              : 188
PLUS                 : 184 208
PLUSEQU              : 108
POW                  : 190
POWEQU               : 118
PROC                 : 149 279
PYIMPORT             : 19 20 21 22
QMARK                : 156 246
RAISE                : 73 74 75
RBRACKET             : 120 121 122 123 124 169 172 238 274 275 276 280 281 282 291
RCURLY               : 239 244 292
REQUALTO             : 201
RETURN               : 129 130
RPAREN               : 41 42 128 148 149 160 161 212 217 230 230 231 256 258 259 277 278 279 283 284 285 285 286 286 287 287 288 288 289 289 290 290
RSHIFT               : 194
RSHIFTEQU            : 117
SEMICOLON            : 60 61
SET                  : 170
STRINGLITERAL        : 221
TILDE                : 209
TIMES                : 14 21 165 186
TIMESEQU             : 110
TRY                  : 86 87 88 89 90
TUPLE                : 160 283 284
WHILE                : 79 263
YIELD                : 135
error                : 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292

Nonterminals, with rules where they appear

argumentlist         : 41 42 230 256 257 258 259 260 286 287 289 290
assert               : 66
assertmessage        : 132
assertnomessage      : 131
assignment           : 63
assignment_operator  : 103 104 105 106
block                : 51
calculation          : 173
class_definition     : 31
class_suite          : 33 254
classblock           : 23 31
conditional          : 57
conditional_extension : 82 84 269 270
crosstuple           : 235
declaration          : 27
declaration_suite    : 1 2 34
delete               : 72
dictionary_literal   : 228
dictionary_type      : 140
dictionarylist       : 239
empty                : 2 5 7 26 26 32 36 36 38 44 44 45 45 45 46 46 54 75 83 86 86 87 88 90 90 102 122 123 124 124 125 125 126 129 151 151 152 152 153 153 153 163 214 233 241
except_alias         : 97 100
except_else          : 87 89
except_finally       : 88 89 90
except_simple        : 96 99
except_specific      : 98 101
exceptlist           : 92 93 271 272 273
exceptlist_nonempty  : 86 87 88 89
expression           : 30 50 76 79 80 81 81 82 84 103 104 105 106 120 120 121 121 121 122 122 123 123 124 127 128 130 133 134 135 184 184 185 185 186 186 187 187 188 188 189 189 190 190 191 191 192 192 193 193 194 194 195 195 196 196 197 197 198 198 199 199 200 200 201 201 202 202 203 203 204 204 205 205 206 206 207 208 209 210 211 212 215 217 230 242 242 246 246 246 247 248 248 249 249 250 250 251 251 253 262 264 266 266 267 268 274 275 275 276 276 276 277 285 286
expressionlist       : 128 212 238
file                 : 0
for_loop             : 78
frozenset_type       : 142
function_call        : 74 174
function_definition  : 39
function_literal     : 224
function_type        : 136
generator_type       : 143
grouping             : 175
identity             : 181
import_statement     : 9
importblock          : 1 2
importlist           : 15 18 18 22
indexing             : 103 177
list_literal         : 227
list_type            : 139
listbracket          : 167
listof               : 166
literal              : 134 176
loop                 : 56
member               : 106 180
member_type          : 144
membership           : 182
methodblock          : 23 37
nonempty_argumentlist : 43 44 48 48
nonempty_block       : 1 53 55
nonempty_default_typelist : 150 152 157 157
nonempty_defaultlist : 43 46 49 49
nonempty_dictionarylist : 240 243 243
nonempty_expressionlist : 213 216 216 236 237 244
nonempty_importblock : 6 11
nonempty_tuple       : 232
nonempty_tuple_typelist : 162 165 165
nonempty_typelist    : 150 151 155 155
nonempty_variableblock : 25 28 28
opt_extends          : 33 254 255
optdoc               : 1 2 34 51
optslice             : 121 122 123 124 275
procedure_call       : 64
procedure_definition : 40
procedure_literal    : 225
procedure_type       : 137
pyimport_statement   : 10
raise                : 71
return               : 65
set_literal          : 229
set_type             : 141
singleimport         : 8 11
singletontuple       : 234
slicing              : 104 178
statement_complex    : 54 55
statement_multi      : 59 60 61
statement_simple     : 52 61 62 288 289
subroutine_definition : 37
suite                : 41 42 79 80 81 82 84 85 86 87 88 89 90 91 92 93 94 95 256 257 258 259 260 263 264 265 266 267 268 269 270 271 272 273
ternary              : 179
try_except           : 58
tuple_literal        : 226
tuple_type           : 138
tuple_typelist       : 160 161 283
tuplelist            : 231
tupleof              : 158
tupleparens          : 159
type                 : 29 30 35 41 47 50 147 148 154 156 164 168 169 170 171 172 172 230 256 257 261 278 280 280 281 282 285 287
typelist             : 148 149
variable             : 105 183
variableblock        : 23 53
while_loop           : 77
yield                : 67

Parsing method: LALR

state 0

    (0) S' -> . file
    (1) file -> . optdoc importblock declaration_suite nonempty_block
    (2) file -> . optdoc importblock declaration_suite empty
    (4) optdoc -> . DOCSTRING NL
    (5) optdoc -> . empty
    (3) empty -> .

  ! shift/reduce conflict for DOCSTRING resolved as shift
    DOCSTRING       shift and go to state 1
    IMPORT          reduce using rule 3 (empty -> .)
    FROM            reduce using rule 3 (empty -> .)
    PYIMPORT        reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    COLONCOLON      reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    CLASS           reduce using rule 3 (empty -> .)
    DEF             reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)

  ! DOCSTRING       [ reduce using rule 3 (empty -> .) ]

    file                           shift and go to state 2
    optdoc                         shift and go to state 3
    empty                          shift and go to state 4

state 1

    (4) optdoc -> DOCSTRING . NL

    NL              shift and go to state 5


state 2

    (0) S' -> file .



state 3

    (1) file -> optdoc . importblock declaration_suite nonempty_block
    (2) file -> optdoc . importblock declaration_suite empty
    (6) importblock -> . nonempty_importblock
    (7) importblock -> . empty
    (8) nonempty_importblock -> . singleimport
    (11) nonempty_importblock -> . nonempty_importblock singleimport
    (3) empty -> .
    (9) singleimport -> . import_statement
    (10) singleimport -> . pyimport_statement
    (12) import_statement -> . IMPORT IDENTIFIER NL
    (13) import_statement -> . IMPORT IDENTIFIER AS IDENTIFIER NL
    (14) import_statement -> . FROM IDENTIFIER IMPORT TIMES NL
    (15) import_statement -> . FROM IDENTIFIER IMPORT importlist NL
    (19) pyimport_statement -> . PYIMPORT IDENTIFIER NL
    (20) pyimport_statement -> . PYIMPORT IDENTIFIER AS IDENTIFIER NL
    (21) pyimport_statement -> . FROM IDENTIFIER PYIMPORT TIMES NL
    (22) pyimport_statement -> . FROM IDENTIFIER PYIMPORT importlist NL

    PASS            reduce using rule 3 (empty -> .)
    COLONCOLON      reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    CLASS           reduce using rule 3 (empty -> .)
    DEF             reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    IMPORT          shift and go to state 12
    FROM            shift and go to state 10
    PYIMPORT        shift and go to state 9

    importblock                    shift and go to state 6
    pyimport_statement             shift and go to state 7
    nonempty_importblock           shift and go to state 8
    singleimport                   shift and go to state 11
    empty                          shift and go to state 13
    import_statement               shift and go to state 14

state 4

    (5) optdoc -> empty .

    PASS            reduce using rule 5 (optdoc -> empty .)
    COLONCOLON      reduce using rule 5 (optdoc -> empty .)
    CLASS           reduce using rule 5 (optdoc -> empty .)
    DEF             reduce using rule 5 (optdoc -> empty .)
    DEDENT          reduce using rule 5 (optdoc -> empty .)
    IMPORT          reduce using rule 5 (optdoc -> empty .)
    FROM            reduce using rule 5 (optdoc -> empty .)
    PYIMPORT        reduce using rule 5 (optdoc -> empty .)
    IF              reduce using rule 5 (optdoc -> empty .)
    TRY             reduce using rule 5 (optdoc -> empty .)
    WHILE           reduce using rule 5 (optdoc -> empty .)
    FOR             reduce using rule 5 (optdoc -> empty .)
    CONTINUE        reduce using rule 5 (optdoc -> empty .)
    BREAK           reduce using rule 5 (optdoc -> empty .)
    RETURN          reduce using rule 5 (optdoc -> empty .)
    YIELD           reduce using rule 5 (optdoc -> empty .)
    RAISE           reduce using rule 5 (optdoc -> empty .)
    DEL             reduce using rule 5 (optdoc -> empty .)
    IDENTIFIER      reduce using rule 5 (optdoc -> empty .)
    MINUS           reduce using rule 5 (optdoc -> empty .)
    PLUS            reduce using rule 5 (optdoc -> empty .)
    TILDE           reduce using rule 5 (optdoc -> empty .)
    EXMARK          reduce using rule 5 (optdoc -> empty .)
    NOT             reduce using rule 5 (optdoc -> empty .)
    ASSERT          reduce using rule 5 (optdoc -> empty .)
    LPAREN          reduce using rule 5 (optdoc -> empty .)
    INTLITERAL      reduce using rule 5 (optdoc -> empty .)
    FLOATLITERAL    reduce using rule 5 (optdoc -> empty .)
    BOOLLITERAL     reduce using rule 5 (optdoc -> empty .)
    STRINGLITERAL   reduce using rule 5 (optdoc -> empty .)
    DOCSTRING       reduce using rule 5 (optdoc -> empty .)
    NONE            reduce using rule 5 (optdoc -> empty .)
    LAMBDA          reduce using rule 5 (optdoc -> empty .)
    LBRACKET        reduce using rule 5 (optdoc -> empty .)
    LCURLY          reduce using rule 5 (optdoc -> empty .)
    $end            reduce using rule 5 (optdoc -> empty .)


state 5

    (4) optdoc -> DOCSTRING NL .

    PASS            reduce using rule 4 (optdoc -> DOCSTRING NL .)
    COLONCOLON      reduce using rule 4 (optdoc -> DOCSTRING NL .)
    CLASS           reduce using rule 4 (optdoc -> DOCSTRING NL .)
    DEF             reduce using rule 4 (optdoc -> DOCSTRING NL .)
    DEDENT          reduce using rule 4 (optdoc -> DOCSTRING NL .)
    IMPORT          reduce using rule 4 (optdoc -> DOCSTRING NL .)
    FROM            reduce using rule 4 (optdoc -> DOCSTRING NL .)
    PYIMPORT        reduce using rule 4 (optdoc -> DOCSTRING NL .)
    IF              reduce using rule 4 (optdoc -> DOCSTRING NL .)
    TRY             reduce using rule 4 (optdoc -> DOCSTRING NL .)
    WHILE           reduce using rule 4 (optdoc -> DOCSTRING NL .)
    FOR             reduce using rule 4 (optdoc -> DOCSTRING NL .)
    CONTINUE        reduce using rule 4 (optdoc -> DOCSTRING NL .)
    BREAK           reduce using rule 4 (optdoc -> DOCSTRING NL .)
    RETURN          reduce using rule 4 (optdoc -> DOCSTRING NL .)
    YIELD           reduce using rule 4 (optdoc -> DOCSTRING NL .)
    RAISE           reduce using rule 4 (optdoc -> DOCSTRING NL .)
    DEL             reduce using rule 4 (optdoc -> DOCSTRING NL .)
    IDENTIFIER      reduce using rule 4 (optdoc -> DOCSTRING NL .)
    MINUS           reduce using rule 4 (optdoc -> DOCSTRING NL .)
    PLUS            reduce using rule 4 (optdoc -> DOCSTRING NL .)
    TILDE           reduce using rule 4 (optdoc -> DOCSTRING NL .)
    EXMARK          reduce using rule 4 (optdoc -> DOCSTRING NL .)
    NOT             reduce using rule 4 (optdoc -> DOCSTRING NL .)
    ASSERT          reduce using rule 4 (optdoc -> DOCSTRING NL .)
    LPAREN          reduce using rule 4 (optdoc -> DOCSTRING NL .)
    INTLITERAL      reduce using rule 4 (optdoc -> DOCSTRING NL .)
    FLOATLITERAL    reduce using rule 4 (optdoc -> DOCSTRING NL .)
    BOOLLITERAL     reduce using rule 4 (optdoc -> DOCSTRING NL .)
    STRINGLITERAL   reduce using rule 4 (optdoc -> DOCSTRING NL .)
    DOCSTRING       reduce using rule 4 (optdoc -> DOCSTRING NL .)
    NONE            reduce using rule 4 (optdoc -> DOCSTRING NL .)
    LAMBDA          reduce using rule 4 (optdoc -> DOCSTRING NL .)
    LBRACKET        reduce using rule 4 (optdoc -> DOCSTRING NL .)
    LCURLY          reduce using rule 4 (optdoc -> DOCSTRING NL .)
    $end            reduce using rule 4 (optdoc -> DOCSTRING NL .)


state 6

    (1) file -> optdoc importblock . declaration_suite nonempty_block
    (2) file -> optdoc importblock . declaration_suite empty
    (23) declaration_suite -> . variableblock classblock methodblock
    (24) declaration_suite -> . PASS NL
    (25) variableblock -> . COLONCOLON nonempty_variableblock COLONCOLON NL
    (26) variableblock -> . empty empty
    (252) variableblock -> . COLONCOLON error COLONCOLON NL
    (3) empty -> .

  ! shift/reduce conflict for PASS resolved as shift
    PASS            shift and go to state 17
    COLONCOLON      shift and go to state 18
    CLASS           reduce using rule 3 (empty -> .)
    DEF             reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)

  ! PASS            [ reduce using rule 3 (empty -> .) ]

    variableblock                  shift and go to state 15
    declaration_suite              shift and go to state 16
    empty                          shift and go to state 19

state 7

    (10) singleimport -> pyimport_statement .

    IMPORT          reduce using rule 10 (singleimport -> pyimport_statement .)
    FROM            reduce using rule 10 (singleimport -> pyimport_statement .)
    PYIMPORT        reduce using rule 10 (singleimport -> pyimport_statement .)
    PASS            reduce using rule 10 (singleimport -> pyimport_statement .)
    COLONCOLON      reduce using rule 10 (singleimport -> pyimport_statement .)
    IF              reduce using rule 10 (singleimport -> pyimport_statement .)
    TRY             reduce using rule 10 (singleimport -> pyimport_statement .)
    WHILE           reduce using rule 10 (singleimport -> pyimport_statement .)
    FOR             reduce using rule 10 (singleimport -> pyimport_statement .)
    CONTINUE        reduce using rule 10 (singleimport -> pyimport_statement .)
    BREAK           reduce using rule 10 (singleimport -> pyimport_statement .)
    RETURN          reduce using rule 10 (singleimport -> pyimport_statement .)
    YIELD           reduce using rule 10 (singleimport -> pyimport_statement .)
    RAISE           reduce using rule 10 (singleimport -> pyimport_statement .)
    DEL             reduce using rule 10 (singleimport -> pyimport_statement .)
    IDENTIFIER      reduce using rule 10 (singleimport -> pyimport_statement .)
    MINUS           reduce using rule 10 (singleimport -> pyimport_statement .)
    PLUS            reduce using rule 10 (singleimport -> pyimport_statement .)
    TILDE           reduce using rule 10 (singleimport -> pyimport_statement .)
    EXMARK          reduce using rule 10 (singleimport -> pyimport_statement .)
    NOT             reduce using rule 10 (singleimport -> pyimport_statement .)
    ASSERT          reduce using rule 10 (singleimport -> pyimport_statement .)
    LPAREN          reduce using rule 10 (singleimport -> pyimport_statement .)
    INTLITERAL      reduce using rule 10 (singleimport -> pyimport_statement .)
    FLOATLITERAL    reduce using rule 10 (singleimport -> pyimport_statement .)
    BOOLLITERAL     reduce using rule 10 (singleimport -> pyimport_statement .)
    STRINGLITERAL   reduce using rule 10 (singleimport -> pyimport_statement .)
    DOCSTRING       reduce using rule 10 (singleimport -> pyimport_statement .)
    NONE            reduce using rule 10 (singleimport -> pyimport_statement .)
    LAMBDA          reduce using rule 10 (singleimport -> pyimport_statement .)
    LBRACKET        reduce using rule 10 (singleimport -> pyimport_statement .)
    LCURLY          reduce using rule 10 (singleimport -> pyimport_statement .)
    CLASS           reduce using rule 10 (singleimport -> pyimport_statement .)
    DEF             reduce using rule 10 (singleimport -> pyimport_statement .)
    $end            reduce using rule 10 (singleimport -> pyimport_statement .)


state 8

    (6) importblock -> nonempty_importblock .
    (11) nonempty_importblock -> nonempty_importblock . singleimport
    (9) singleimport -> . import_statement
    (10) singleimport -> . pyimport_statement
    (12) import_statement -> . IMPORT IDENTIFIER NL
    (13) import_statement -> . IMPORT IDENTIFIER AS IDENTIFIER NL
    (14) import_statement -> . FROM IDENTIFIER IMPORT TIMES NL
    (15) import_statement -> . FROM IDENTIFIER IMPORT importlist NL
    (19) pyimport_statement -> . PYIMPORT IDENTIFIER NL
    (20) pyimport_statement -> . PYIMPORT IDENTIFIER AS IDENTIFIER NL
    (21) pyimport_statement -> . FROM IDENTIFIER PYIMPORT TIMES NL
    (22) pyimport_statement -> . FROM IDENTIFIER PYIMPORT importlist NL

    PASS            reduce using rule 6 (importblock -> nonempty_importblock .)
    COLONCOLON      reduce using rule 6 (importblock -> nonempty_importblock .)
    IF              reduce using rule 6 (importblock -> nonempty_importblock .)
    TRY             reduce using rule 6 (importblock -> nonempty_importblock .)
    WHILE           reduce using rule 6 (importblock -> nonempty_importblock .)
    FOR             reduce using rule 6 (importblock -> nonempty_importblock .)
    CONTINUE        reduce using rule 6 (importblock -> nonempty_importblock .)
    BREAK           reduce using rule 6 (importblock -> nonempty_importblock .)
    RETURN          reduce using rule 6 (importblock -> nonempty_importblock .)
    YIELD           reduce using rule 6 (importblock -> nonempty_importblock .)
    RAISE           reduce using rule 6 (importblock -> nonempty_importblock .)
    DEL             reduce using rule 6 (importblock -> nonempty_importblock .)
    IDENTIFIER      reduce using rule 6 (importblock -> nonempty_importblock .)
    MINUS           reduce using rule 6 (importblock -> nonempty_importblock .)
    PLUS            reduce using rule 6 (importblock -> nonempty_importblock .)
    TILDE           reduce using rule 6 (importblock -> nonempty_importblock .)
    EXMARK          reduce using rule 6 (importblock -> nonempty_importblock .)
    NOT             reduce using rule 6 (importblock -> nonempty_importblock .)
    ASSERT          reduce using rule 6 (importblock -> nonempty_importblock .)
    LPAREN          reduce using rule 6 (importblock -> nonempty_importblock .)
    INTLITERAL      reduce using rule 6 (importblock -> nonempty_importblock .)
    FLOATLITERAL    reduce using rule 6 (importblock -> nonempty_importblock .)
    BOOLLITERAL     reduce using rule 6 (importblock -> nonempty_importblock .)
    STRINGLITERAL   reduce using rule 6 (importblock -> nonempty_importblock .)
    DOCSTRING       reduce using rule 6 (importblock -> nonempty_importblock .)
    NONE            reduce using rule 6 (importblock -> nonempty_importblock .)
    LAMBDA          reduce using rule 6 (importblock -> nonempty_importblock .)
    LBRACKET        reduce using rule 6 (importblock -> nonempty_importblock .)
    LCURLY          reduce using rule 6 (importblock -> nonempty_importblock .)
    CLASS           reduce using rule 6 (importblock -> nonempty_importblock .)
    DEF             reduce using rule 6 (importblock -> nonempty_importblock .)
    $end            reduce using rule 6 (importblock -> nonempty_importblock .)
    IMPORT          shift and go to state 12
    FROM            shift and go to state 10
    PYIMPORT        shift and go to state 9

    import_statement               shift and go to state 14
    pyimport_statement             shift and go to state 7
    singleimport                   shift and go to state 20

state 9

    (19) pyimport_statement -> PYIMPORT . IDENTIFIER NL
    (20) pyimport_statement -> PYIMPORT . IDENTIFIER AS IDENTIFIER NL

    IDENTIFIER      shift and go to state 21


state 10

    (14) import_statement -> FROM . IDENTIFIER IMPORT TIMES NL
    (15) import_statement -> FROM . IDENTIFIER IMPORT importlist NL
    (21) pyimport_statement -> FROM . IDENTIFIER PYIMPORT TIMES NL
    (22) pyimport_statement -> FROM . IDENTIFIER PYIMPORT importlist NL

    IDENTIFIER      shift and go to state 22


state 11

    (8) nonempty_importblock -> singleimport .

    IMPORT          reduce using rule 8 (nonempty_importblock -> singleimport .)
    FROM            reduce using rule 8 (nonempty_importblock -> singleimport .)
    PYIMPORT        reduce using rule 8 (nonempty_importblock -> singleimport .)
    PASS            reduce using rule 8 (nonempty_importblock -> singleimport .)
    COLONCOLON      reduce using rule 8 (nonempty_importblock -> singleimport .)
    IF              reduce using rule 8 (nonempty_importblock -> singleimport .)
    TRY             reduce using rule 8 (nonempty_importblock -> singleimport .)
    WHILE           reduce using rule 8 (nonempty_importblock -> singleimport .)
    FOR             reduce using rule 8 (nonempty_importblock -> singleimport .)
    CONTINUE        reduce using rule 8 (nonempty_importblock -> singleimport .)
    BREAK           reduce using rule 8 (nonempty_importblock -> singleimport .)
    RETURN          reduce using rule 8 (nonempty_importblock -> singleimport .)
    YIELD           reduce using rule 8 (nonempty_importblock -> singleimport .)
    RAISE           reduce using rule 8 (nonempty_importblock -> singleimport .)
    DEL             reduce using rule 8 (nonempty_importblock -> singleimport .)
    IDENTIFIER      reduce using rule 8 (nonempty_importblock -> singleimport .)
    MINUS           reduce using rule 8 (nonempty_importblock -> singleimport .)
    PLUS            reduce using rule 8 (nonempty_importblock -> singleimport .)
    TILDE           reduce using rule 8 (nonempty_importblock -> singleimport .)
    EXMARK          reduce using rule 8 (nonempty_importblock -> singleimport .)
    NOT             reduce using rule 8 (nonempty_importblock -> singleimport .)
    ASSERT          reduce using rule 8 (nonempty_importblock -> singleimport .)
    LPAREN          reduce using rule 8 (nonempty_importblock -> singleimport .)
    INTLITERAL      reduce using rule 8 (nonempty_importblock -> singleimport .)
    FLOATLITERAL    reduce using rule 8 (nonempty_importblock -> singleimport .)
    BOOLLITERAL     reduce using rule 8 (nonempty_importblock -> singleimport .)
    STRINGLITERAL   reduce using rule 8 (nonempty_importblock -> singleimport .)
    DOCSTRING       reduce using rule 8 (nonempty_importblock -> singleimport .)
    NONE            reduce using rule 8 (nonempty_importblock -> singleimport .)
    LAMBDA          reduce using rule 8 (nonempty_importblock -> singleimport .)
    LBRACKET        reduce using rule 8 (nonempty_importblock -> singleimport .)
    LCURLY          reduce using rule 8 (nonempty_importblock -> singleimport .)
    CLASS           reduce using rule 8 (nonempty_importblock -> singleimport .)
    DEF             reduce using rule 8 (nonempty_importblock -> singleimport .)
    $end            reduce using rule 8 (nonempty_importblock -> singleimport .)


state 12

    (12) import_statement -> IMPORT . IDENTIFIER NL
    (13) import_statement -> IMPORT . IDENTIFIER AS IDENTIFIER NL

    IDENTIFIER      shift and go to state 23


state 13

    (7) importblock -> empty .

    PASS            reduce using rule 7 (importblock -> empty .)
    COLONCOLON      reduce using rule 7 (importblock -> empty .)
    IF              reduce using rule 7 (importblock -> empty .)
    TRY             reduce using rule 7 (importblock -> empty .)
    WHILE           reduce using rule 7 (importblock -> empty .)
    FOR             reduce using rule 7 (importblock -> empty .)
    CONTINUE        reduce using rule 7 (importblock -> empty .)
    BREAK           reduce using rule 7 (importblock -> empty .)
    RETURN          reduce using rule 7 (importblock -> empty .)
    YIELD           reduce using rule 7 (importblock -> empty .)
    RAISE           reduce using rule 7 (importblock -> empty .)
    DEL             reduce using rule 7 (importblock -> empty .)
    IDENTIFIER      reduce using rule 7 (importblock -> empty .)
    MINUS           reduce using rule 7 (importblock -> empty .)
    PLUS            reduce using rule 7 (importblock -> empty .)
    TILDE           reduce using rule 7 (importblock -> empty .)
    EXMARK          reduce using rule 7 (importblock -> empty .)
    NOT             reduce using rule 7 (importblock -> empty .)
    ASSERT          reduce using rule 7 (importblock -> empty .)
    LPAREN          reduce using rule 7 (importblock -> empty .)
    INTLITERAL      reduce using rule 7 (importblock -> empty .)
    FLOATLITERAL    reduce using rule 7 (importblock -> empty .)
    BOOLLITERAL     reduce using rule 7 (importblock -> empty .)
    STRINGLITERAL   reduce using rule 7 (importblock -> empty .)
    DOCSTRING       reduce using rule 7 (importblock -> empty .)
    NONE            reduce using rule 7 (importblock -> empty .)
    LAMBDA          reduce using rule 7 (importblock -> empty .)
    LBRACKET        reduce using rule 7 (importblock -> empty .)
    LCURLY          reduce using rule 7 (importblock -> empty .)
    CLASS           reduce using rule 7 (importblock -> empty .)
    DEF             reduce using rule 7 (importblock -> empty .)
    $end            reduce using rule 7 (importblock -> empty .)


state 14

    (9) singleimport -> import_statement .

    IMPORT          reduce using rule 9 (singleimport -> import_statement .)
    FROM            reduce using rule 9 (singleimport -> import_statement .)
    PYIMPORT        reduce using rule 9 (singleimport -> import_statement .)
    PASS            reduce using rule 9 (singleimport -> import_statement .)
    COLONCOLON      reduce using rule 9 (singleimport -> import_statement .)
    IF              reduce using rule 9 (singleimport -> import_statement .)
    TRY             reduce using rule 9 (singleimport -> import_statement .)
    WHILE           reduce using rule 9 (singleimport -> import_statement .)
    FOR             reduce using rule 9 (singleimport -> import_statement .)
    CONTINUE        reduce using rule 9 (singleimport -> import_statement .)
    BREAK           reduce using rule 9 (singleimport -> import_statement .)
    RETURN          reduce using rule 9 (singleimport -> import_statement .)
    YIELD           reduce using rule 9 (singleimport -> import_statement .)
    RAISE           reduce using rule 9 (singleimport -> import_statement .)
    DEL             reduce using rule 9 (singleimport -> import_statement .)
    IDENTIFIER      reduce using rule 9 (singleimport -> import_statement .)
    MINUS           reduce using rule 9 (singleimport -> import_statement .)
    PLUS            reduce using rule 9 (singleimport -> import_statement .)
    TILDE           reduce using rule 9 (singleimport -> import_statement .)
    EXMARK          reduce using rule 9 (singleimport -> import_statement .)
    NOT             reduce using rule 9 (singleimport -> import_statement .)
    ASSERT          reduce using rule 9 (singleimport -> import_statement .)
    LPAREN          reduce using rule 9 (singleimport -> import_statement .)
    INTLITERAL      reduce using rule 9 (singleimport -> import_statement .)
    FLOATLITERAL    reduce using rule 9 (singleimport -> import_statement .)
    BOOLLITERAL     reduce using rule 9 (singleimport -> import_statement .)
    STRINGLITERAL   reduce using rule 9 (singleimport -> import_statement .)
    DOCSTRING       reduce using rule 9 (singleimport -> import_statement .)
    NONE            reduce using rule 9 (singleimport -> import_statement .)
    LAMBDA          reduce using rule 9 (singleimport -> import_statement .)
    LBRACKET        reduce using rule 9 (singleimport -> import_statement .)
    LCURLY          reduce using rule 9 (singleimport -> import_statement .)
    CLASS           reduce using rule 9 (singleimport -> import_statement .)
    DEF             reduce using rule 9 (singleimport -> import_statement .)
    $end            reduce using rule 9 (singleimport -> import_statement .)


state 15

    (23) declaration_suite -> variableblock . classblock methodblock
    (31) classblock -> . class_definition classblock
    (32) classblock -> . empty
    (33) class_definition -> . CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT
    (254) class_definition -> . CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT
    (255) class_definition -> . CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT
    (3) empty -> .

    CLASS           shift and go to state 26
    DEF             reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    class_definition               shift and go to state 24
    classblock                     shift and go to state 25
    empty                          shift and go to state 27

state 16

    (1) file -> optdoc importblock declaration_suite . nonempty_block
    (2) file -> optdoc importblock declaration_suite . empty
    (54) nonempty_block -> . statement_complex empty
    (55) nonempty_block -> . statement_complex nonempty_block
    (3) empty -> .
    (56) statement_complex -> . loop
    (57) statement_complex -> . conditional
    (58) statement_complex -> . try_except
    (59) statement_complex -> . statement_multi NL
    (60) statement_complex -> . statement_multi SEMICOLON NL
    (77) loop -> . while_loop
    (78) loop -> . for_loop
    (82) conditional -> . IF expression COLON suite conditional_extension
    (269) conditional -> . IF error COLON suite conditional_extension
    (86) try_except -> . TRY COLON suite exceptlist_nonempty empty empty
    (87) try_except -> . TRY COLON suite exceptlist_nonempty except_else empty
    (88) try_except -> . TRY COLON suite exceptlist_nonempty empty except_finally
    (89) try_except -> . TRY COLON suite exceptlist_nonempty except_else except_finally
    (90) try_except -> . TRY COLON suite empty empty except_finally
    (61) statement_multi -> . statement_multi SEMICOLON statement_simple
    (62) statement_multi -> . statement_simple
    (79) while_loop -> . WHILE expression COLON suite
    (263) while_loop -> . WHILE error COLON suite
    (80) for_loop -> . FOR IDENTIFIER IN expression COLON suite
    (81) for_loop -> . FOR IDENTIFIER IN expression DOTDOT expression COLON suite
    (264) for_loop -> . FOR error IN expression COLON suite
    (265) for_loop -> . FOR IDENTIFIER IN error COLON suite
    (266) for_loop -> . FOR error IN expression DOTDOT expression COLON suite
    (267) for_loop -> . FOR IDENTIFIER IN error DOTDOT expression COLON suite
    (268) for_loop -> . FOR IDENTIFIER IN expression DOTDOT error COLON suite
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    $end            reduce using rule 3 (empty -> .)
    IF              shift and go to state 89
    TRY             shift and go to state 53
    WHILE           shift and go to state 62
    FOR             shift and go to state 51
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    conditional                    shift and go to state 44
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    yield                          shift and go to state 41
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    statement_complex              shift and go to state 33
    assertnomessage                shift and go to state 65
    empty                          shift and go to state 67
    list_literal                   shift and go to state 90
    for_loop                       shift and go to state 35
    return                         shift and go to state 36
    while_loop                     shift and go to state 68
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    tuple_literal                  shift and go to state 31
    procedure_literal              shift and go to state 79
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    nonempty_block                 shift and go to state 40
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 91
    statement_multi                shift and go to state 54
    try_except                     shift and go to state 72
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    loop                           shift and go to state 74
    delete                         shift and go to state 75

state 17

    (24) declaration_suite -> PASS . NL

    NL              shift and go to state 93


state 18

    (25) variableblock -> COLONCOLON . nonempty_variableblock COLONCOLON NL
    (252) variableblock -> COLONCOLON . error COLONCOLON NL
    (27) nonempty_variableblock -> . declaration
    (28) nonempty_variableblock -> . nonempty_variableblock COMMA nonempty_variableblock
    (29) declaration -> . IDENTIFIER COLON type
    (30) declaration -> . IDENTIFIER COLON type EQUALS expression
    (253) declaration -> . IDENTIFIER COLON error EQUALS expression

    error           shift and go to state 95
    IDENTIFIER      shift and go to state 97

    nonempty_variableblock         shift and go to state 94
    declaration                    shift and go to state 96

state 19

    (26) variableblock -> empty . empty
    (3) empty -> .

    CLASS           reduce using rule 3 (empty -> .)
    DEF             reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    empty                          shift and go to state 98

state 20

    (11) nonempty_importblock -> nonempty_importblock singleimport .

    IMPORT          reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    FROM            reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    PYIMPORT        reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    PASS            reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    COLONCOLON      reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    IF              reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    TRY             reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    WHILE           reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    FOR             reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    CONTINUE        reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    BREAK           reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    RETURN          reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    YIELD           reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    RAISE           reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    DEL             reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    IDENTIFIER      reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    MINUS           reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    PLUS            reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    TILDE           reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    EXMARK          reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    NOT             reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    ASSERT          reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    LPAREN          reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    INTLITERAL      reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    FLOATLITERAL    reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    BOOLLITERAL     reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    STRINGLITERAL   reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    DOCSTRING       reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    NONE            reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    LAMBDA          reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    LBRACKET        reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    LCURLY          reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    CLASS           reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    DEF             reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)
    $end            reduce using rule 11 (nonempty_importblock -> nonempty_importblock singleimport .)


state 21

    (19) pyimport_statement -> PYIMPORT IDENTIFIER . NL
    (20) pyimport_statement -> PYIMPORT IDENTIFIER . AS IDENTIFIER NL

    NL              shift and go to state 100
    AS              shift and go to state 99


state 22

    (14) import_statement -> FROM IDENTIFIER . IMPORT TIMES NL
    (15) import_statement -> FROM IDENTIFIER . IMPORT importlist NL
    (21) pyimport_statement -> FROM IDENTIFIER . PYIMPORT TIMES NL
    (22) pyimport_statement -> FROM IDENTIFIER . PYIMPORT importlist NL

    IMPORT          shift and go to state 101
    PYIMPORT        shift and go to state 102


state 23

    (12) import_statement -> IMPORT IDENTIFIER . NL
    (13) import_statement -> IMPORT IDENTIFIER . AS IDENTIFIER NL

    NL              shift and go to state 104
    AS              shift and go to state 103


state 24

    (31) classblock -> class_definition . classblock
    (31) classblock -> . class_definition classblock
    (32) classblock -> . empty
    (33) class_definition -> . CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT
    (254) class_definition -> . CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT
    (255) class_definition -> . CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT
    (3) empty -> .

    CLASS           shift and go to state 26
    DEF             reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    class_definition               shift and go to state 24
    classblock                     shift and go to state 105
    empty                          shift and go to state 27

state 25

    (23) declaration_suite -> variableblock classblock . methodblock
    (37) methodblock -> . subroutine_definition methodblock
    (38) methodblock -> . empty
    (39) subroutine_definition -> . function_definition
    (40) subroutine_definition -> . procedure_definition
    (3) empty -> .
    (41) function_definition -> . DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite
    (256) function_definition -> . DEF error LPAREN argumentlist RPAREN ARROW type COLON suite
    (257) function_definition -> . DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite
    (258) function_definition -> . DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite
    (42) procedure_definition -> . DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite
    (259) procedure_definition -> . DEF error LPAREN argumentlist RPAREN COLON suite
    (260) procedure_definition -> . DEF IDENTIFIER LPAREN argumentlist error COLON suite

    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)
    DEF             shift and go to state 108

    function_definition            shift and go to state 106
    subroutine_definition          shift and go to state 107
    methodblock                    shift and go to state 109
    procedure_definition           shift and go to state 110
    empty                          shift and go to state 111

state 26

    (33) class_definition -> CLASS . IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT
    (254) class_definition -> CLASS . IDENTIFIER opt_extends error NL INDENT class_suite DEDENT
    (255) class_definition -> CLASS . IDENTIFIER opt_extends COLON NL INDENT error DEDENT

    IDENTIFIER      shift and go to state 112


state 27

    (32) classblock -> empty .

    DEF             reduce using rule 32 (classblock -> empty .)
    IF              reduce using rule 32 (classblock -> empty .)
    TRY             reduce using rule 32 (classblock -> empty .)
    WHILE           reduce using rule 32 (classblock -> empty .)
    FOR             reduce using rule 32 (classblock -> empty .)
    CONTINUE        reduce using rule 32 (classblock -> empty .)
    BREAK           reduce using rule 32 (classblock -> empty .)
    PASS            reduce using rule 32 (classblock -> empty .)
    RETURN          reduce using rule 32 (classblock -> empty .)
    YIELD           reduce using rule 32 (classblock -> empty .)
    RAISE           reduce using rule 32 (classblock -> empty .)
    DEL             reduce using rule 32 (classblock -> empty .)
    IDENTIFIER      reduce using rule 32 (classblock -> empty .)
    MINUS           reduce using rule 32 (classblock -> empty .)
    PLUS            reduce using rule 32 (classblock -> empty .)
    TILDE           reduce using rule 32 (classblock -> empty .)
    EXMARK          reduce using rule 32 (classblock -> empty .)
    NOT             reduce using rule 32 (classblock -> empty .)
    ASSERT          reduce using rule 32 (classblock -> empty .)
    LPAREN          reduce using rule 32 (classblock -> empty .)
    INTLITERAL      reduce using rule 32 (classblock -> empty .)
    FLOATLITERAL    reduce using rule 32 (classblock -> empty .)
    BOOLLITERAL     reduce using rule 32 (classblock -> empty .)
    STRINGLITERAL   reduce using rule 32 (classblock -> empty .)
    DOCSTRING       reduce using rule 32 (classblock -> empty .)
    NONE            reduce using rule 32 (classblock -> empty .)
    LAMBDA          reduce using rule 32 (classblock -> empty .)
    LBRACKET        reduce using rule 32 (classblock -> empty .)
    LCURLY          reduce using rule 32 (classblock -> empty .)
    $end            reduce using rule 32 (classblock -> empty .)
    DEDENT          reduce using rule 32 (classblock -> empty .)


state 28

    (218) literal -> INTLITERAL .

    COLON           reduce using rule 218 (literal -> INTLITERAL .)
    PLUS            reduce using rule 218 (literal -> INTLITERAL .)
    MINUS           reduce using rule 218 (literal -> INTLITERAL .)
    TIMES           reduce using rule 218 (literal -> INTLITERAL .)
    DIVIDE          reduce using rule 218 (literal -> INTLITERAL .)
    PERCENT         reduce using rule 218 (literal -> INTLITERAL .)
    INTDIV          reduce using rule 218 (literal -> INTLITERAL .)
    POW             reduce using rule 218 (literal -> INTLITERAL .)
    BITOR           reduce using rule 218 (literal -> INTLITERAL .)
    BITAND          reduce using rule 218 (literal -> INTLITERAL .)
    LSHIFT          reduce using rule 218 (literal -> INTLITERAL .)
    RSHIFT          reduce using rule 218 (literal -> INTLITERAL .)
    EQUALTO         reduce using rule 218 (literal -> INTLITERAL .)
    NEQUALTO        reduce using rule 218 (literal -> INTLITERAL .)
    LT              reduce using rule 218 (literal -> INTLITERAL .)
    LE              reduce using rule 218 (literal -> INTLITERAL .)
    GT              reduce using rule 218 (literal -> INTLITERAL .)
    GE              reduce using rule 218 (literal -> INTLITERAL .)
    REQUALTO        reduce using rule 218 (literal -> INTLITERAL .)
    BOOLOR          reduce using rule 218 (literal -> INTLITERAL .)
    BOOLAND         reduce using rule 218 (literal -> INTLITERAL .)
    OR              reduce using rule 218 (literal -> INTLITERAL .)
    AND             reduce using rule 218 (literal -> INTLITERAL .)
    CARET           reduce using rule 218 (literal -> INTLITERAL .)
    LPAREN          reduce using rule 218 (literal -> INTLITERAL .)
    LBRACKET        reduce using rule 218 (literal -> INTLITERAL .)
    QMARK           reduce using rule 218 (literal -> INTLITERAL .)
    DOT             reduce using rule 218 (literal -> INTLITERAL .)
    IS              reduce using rule 218 (literal -> INTLITERAL .)
    ISNOT           reduce using rule 218 (literal -> INTLITERAL .)
    IN              reduce using rule 218 (literal -> INTLITERAL .)
    NOTIN           reduce using rule 218 (literal -> INTLITERAL .)
    COMMA           reduce using rule 218 (literal -> INTLITERAL .)
    RBRACKET        reduce using rule 218 (literal -> INTLITERAL .)
    NL              reduce using rule 218 (literal -> INTLITERAL .)
    SEMICOLON       reduce using rule 218 (literal -> INTLITERAL .)
    RPAREN          reduce using rule 218 (literal -> INTLITERAL .)
    RCURLY          reduce using rule 218 (literal -> INTLITERAL .)
    DOTDOT          reduce using rule 218 (literal -> INTLITERAL .)
    error           reduce using rule 218 (literal -> INTLITERAL .)
    COLONCOLON      reduce using rule 218 (literal -> INTLITERAL .)


state 29

    (238) list_literal -> LBRACKET . expressionlist RBRACKET
    (291) list_literal -> LBRACKET . error RBRACKET
    (213) expressionlist -> . nonempty_expressionlist
    (214) expressionlist -> . empty
    (215) nonempty_expressionlist -> . expression
    (216) nonempty_expressionlist -> . nonempty_expressionlist COMMA nonempty_expressionlist
    (3) empty -> .
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 120
    RBRACKET        reduce using rule 3 (empty -> .)
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    expressionlist                 shift and go to state 113
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    nonempty_expressionlist        shift and go to state 115
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    empty                          shift and go to state 119
    ternary                        shift and go to state 92
    expression                     shift and go to state 121
    grouping                       shift and go to state 42

state 30

    (207) expression -> MINUS . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 122
    grouping                       shift and go to state 42

state 31

    (226) literal -> tuple_literal .

    COLON           reduce using rule 226 (literal -> tuple_literal .)
    PLUS            reduce using rule 226 (literal -> tuple_literal .)
    MINUS           reduce using rule 226 (literal -> tuple_literal .)
    TIMES           reduce using rule 226 (literal -> tuple_literal .)
    DIVIDE          reduce using rule 226 (literal -> tuple_literal .)
    PERCENT         reduce using rule 226 (literal -> tuple_literal .)
    INTDIV          reduce using rule 226 (literal -> tuple_literal .)
    POW             reduce using rule 226 (literal -> tuple_literal .)
    BITOR           reduce using rule 226 (literal -> tuple_literal .)
    BITAND          reduce using rule 226 (literal -> tuple_literal .)
    LSHIFT          reduce using rule 226 (literal -> tuple_literal .)
    RSHIFT          reduce using rule 226 (literal -> tuple_literal .)
    EQUALTO         reduce using rule 226 (literal -> tuple_literal .)
    NEQUALTO        reduce using rule 226 (literal -> tuple_literal .)
    LT              reduce using rule 226 (literal -> tuple_literal .)
    LE              reduce using rule 226 (literal -> tuple_literal .)
    GT              reduce using rule 226 (literal -> tuple_literal .)
    GE              reduce using rule 226 (literal -> tuple_literal .)
    REQUALTO        reduce using rule 226 (literal -> tuple_literal .)
    BOOLOR          reduce using rule 226 (literal -> tuple_literal .)
    BOOLAND         reduce using rule 226 (literal -> tuple_literal .)
    OR              reduce using rule 226 (literal -> tuple_literal .)
    AND             reduce using rule 226 (literal -> tuple_literal .)
    CARET           reduce using rule 226 (literal -> tuple_literal .)
    LPAREN          reduce using rule 226 (literal -> tuple_literal .)
    LBRACKET        reduce using rule 226 (literal -> tuple_literal .)
    QMARK           reduce using rule 226 (literal -> tuple_literal .)
    DOT             reduce using rule 226 (literal -> tuple_literal .)
    IS              reduce using rule 226 (literal -> tuple_literal .)
    ISNOT           reduce using rule 226 (literal -> tuple_literal .)
    IN              reduce using rule 226 (literal -> tuple_literal .)
    NOTIN           reduce using rule 226 (literal -> tuple_literal .)
    COMMA           reduce using rule 226 (literal -> tuple_literal .)
    RBRACKET        reduce using rule 226 (literal -> tuple_literal .)
    NL              reduce using rule 226 (literal -> tuple_literal .)
    SEMICOLON       reduce using rule 226 (literal -> tuple_literal .)
    RPAREN          reduce using rule 226 (literal -> tuple_literal .)
    RCURLY          reduce using rule 226 (literal -> tuple_literal .)
    DOTDOT          reduce using rule 226 (literal -> tuple_literal .)
    error           reduce using rule 226 (literal -> tuple_literal .)
    COLONCOLON      reduce using rule 226 (literal -> tuple_literal .)


state 32

    (220) literal -> BOOLLITERAL .

    COLON           reduce using rule 220 (literal -> BOOLLITERAL .)
    PLUS            reduce using rule 220 (literal -> BOOLLITERAL .)
    MINUS           reduce using rule 220 (literal -> BOOLLITERAL .)
    TIMES           reduce using rule 220 (literal -> BOOLLITERAL .)
    DIVIDE          reduce using rule 220 (literal -> BOOLLITERAL .)
    PERCENT         reduce using rule 220 (literal -> BOOLLITERAL .)
    INTDIV          reduce using rule 220 (literal -> BOOLLITERAL .)
    POW             reduce using rule 220 (literal -> BOOLLITERAL .)
    BITOR           reduce using rule 220 (literal -> BOOLLITERAL .)
    BITAND          reduce using rule 220 (literal -> BOOLLITERAL .)
    LSHIFT          reduce using rule 220 (literal -> BOOLLITERAL .)
    RSHIFT          reduce using rule 220 (literal -> BOOLLITERAL .)
    EQUALTO         reduce using rule 220 (literal -> BOOLLITERAL .)
    NEQUALTO        reduce using rule 220 (literal -> BOOLLITERAL .)
    LT              reduce using rule 220 (literal -> BOOLLITERAL .)
    LE              reduce using rule 220 (literal -> BOOLLITERAL .)
    GT              reduce using rule 220 (literal -> BOOLLITERAL .)
    GE              reduce using rule 220 (literal -> BOOLLITERAL .)
    REQUALTO        reduce using rule 220 (literal -> BOOLLITERAL .)
    BOOLOR          reduce using rule 220 (literal -> BOOLLITERAL .)
    BOOLAND         reduce using rule 220 (literal -> BOOLLITERAL .)
    OR              reduce using rule 220 (literal -> BOOLLITERAL .)
    AND             reduce using rule 220 (literal -> BOOLLITERAL .)
    CARET           reduce using rule 220 (literal -> BOOLLITERAL .)
    LPAREN          reduce using rule 220 (literal -> BOOLLITERAL .)
    LBRACKET        reduce using rule 220 (literal -> BOOLLITERAL .)
    QMARK           reduce using rule 220 (literal -> BOOLLITERAL .)
    DOT             reduce using rule 220 (literal -> BOOLLITERAL .)
    IS              reduce using rule 220 (literal -> BOOLLITERAL .)
    ISNOT           reduce using rule 220 (literal -> BOOLLITERAL .)
    IN              reduce using rule 220 (literal -> BOOLLITERAL .)
    NOTIN           reduce using rule 220 (literal -> BOOLLITERAL .)
    COMMA           reduce using rule 220 (literal -> BOOLLITERAL .)
    RBRACKET        reduce using rule 220 (literal -> BOOLLITERAL .)
    NL              reduce using rule 220 (literal -> BOOLLITERAL .)
    SEMICOLON       reduce using rule 220 (literal -> BOOLLITERAL .)
    RPAREN          reduce using rule 220 (literal -> BOOLLITERAL .)
    RCURLY          reduce using rule 220 (literal -> BOOLLITERAL .)
    DOTDOT          reduce using rule 220 (literal -> BOOLLITERAL .)
    error           reduce using rule 220 (literal -> BOOLLITERAL .)
    COLONCOLON      reduce using rule 220 (literal -> BOOLLITERAL .)


state 33

    (54) nonempty_block -> statement_complex . empty
    (55) nonempty_block -> statement_complex . nonempty_block
    (3) empty -> .
    (54) nonempty_block -> . statement_complex empty
    (55) nonempty_block -> . statement_complex nonempty_block
    (56) statement_complex -> . loop
    (57) statement_complex -> . conditional
    (58) statement_complex -> . try_except
    (59) statement_complex -> . statement_multi NL
    (60) statement_complex -> . statement_multi SEMICOLON NL
    (77) loop -> . while_loop
    (78) loop -> . for_loop
    (82) conditional -> . IF expression COLON suite conditional_extension
    (269) conditional -> . IF error COLON suite conditional_extension
    (86) try_except -> . TRY COLON suite exceptlist_nonempty empty empty
    (87) try_except -> . TRY COLON suite exceptlist_nonempty except_else empty
    (88) try_except -> . TRY COLON suite exceptlist_nonempty empty except_finally
    (89) try_except -> . TRY COLON suite exceptlist_nonempty except_else except_finally
    (90) try_except -> . TRY COLON suite empty empty except_finally
    (61) statement_multi -> . statement_multi SEMICOLON statement_simple
    (62) statement_multi -> . statement_simple
    (79) while_loop -> . WHILE expression COLON suite
    (263) while_loop -> . WHILE error COLON suite
    (80) for_loop -> . FOR IDENTIFIER IN expression COLON suite
    (81) for_loop -> . FOR IDENTIFIER IN expression DOTDOT expression COLON suite
    (264) for_loop -> . FOR error IN expression COLON suite
    (265) for_loop -> . FOR IDENTIFIER IN error COLON suite
    (266) for_loop -> . FOR error IN expression DOTDOT expression COLON suite
    (267) for_loop -> . FOR IDENTIFIER IN error DOTDOT expression COLON suite
    (268) for_loop -> . FOR IDENTIFIER IN expression DOTDOT error COLON suite
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)
    IF              shift and go to state 89
    TRY             shift and go to state 53
    WHILE           shift and go to state 62
    FOR             shift and go to state 51
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    conditional                    shift and go to state 44
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    yield                          shift and go to state 41
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    statement_complex              shift and go to state 33
    assertnomessage                shift and go to state 65
    empty                          shift and go to state 124
    list_literal                   shift and go to state 90
    for_loop                       shift and go to state 35
    return                         shift and go to state 36
    while_loop                     shift and go to state 68
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    tuple_literal                  shift and go to state 31
    procedure_literal              shift and go to state 79
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    nonempty_block                 shift and go to state 123
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 91
    statement_multi                shift and go to state 54
    try_except                     shift and go to state 72
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    loop                           shift and go to state 74
    delete                         shift and go to state 75

state 34

    (208) expression -> PLUS . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 125
    grouping                       shift and go to state 42

state 35

    (78) loop -> for_loop .

    IF              reduce using rule 78 (loop -> for_loop .)
    TRY             reduce using rule 78 (loop -> for_loop .)
    WHILE           reduce using rule 78 (loop -> for_loop .)
    FOR             reduce using rule 78 (loop -> for_loop .)
    CONTINUE        reduce using rule 78 (loop -> for_loop .)
    BREAK           reduce using rule 78 (loop -> for_loop .)
    PASS            reduce using rule 78 (loop -> for_loop .)
    RETURN          reduce using rule 78 (loop -> for_loop .)
    YIELD           reduce using rule 78 (loop -> for_loop .)
    RAISE           reduce using rule 78 (loop -> for_loop .)
    DEL             reduce using rule 78 (loop -> for_loop .)
    IDENTIFIER      reduce using rule 78 (loop -> for_loop .)
    MINUS           reduce using rule 78 (loop -> for_loop .)
    PLUS            reduce using rule 78 (loop -> for_loop .)
    TILDE           reduce using rule 78 (loop -> for_loop .)
    EXMARK          reduce using rule 78 (loop -> for_loop .)
    NOT             reduce using rule 78 (loop -> for_loop .)
    ASSERT          reduce using rule 78 (loop -> for_loop .)
    LPAREN          reduce using rule 78 (loop -> for_loop .)
    INTLITERAL      reduce using rule 78 (loop -> for_loop .)
    FLOATLITERAL    reduce using rule 78 (loop -> for_loop .)
    BOOLLITERAL     reduce using rule 78 (loop -> for_loop .)
    STRINGLITERAL   reduce using rule 78 (loop -> for_loop .)
    DOCSTRING       reduce using rule 78 (loop -> for_loop .)
    NONE            reduce using rule 78 (loop -> for_loop .)
    LAMBDA          reduce using rule 78 (loop -> for_loop .)
    LBRACKET        reduce using rule 78 (loop -> for_loop .)
    LCURLY          reduce using rule 78 (loop -> for_loop .)
    DEDENT          reduce using rule 78 (loop -> for_loop .)
    $end            reduce using rule 78 (loop -> for_loop .)


state 36

    (65) statement_simple -> return .

    NL              reduce using rule 65 (statement_simple -> return .)
    SEMICOLON       reduce using rule 65 (statement_simple -> return .)
    RPAREN          reduce using rule 65 (statement_simple -> return .)


state 37

    (103) assignment -> indexing . assignment_operator expression
    (177) expression -> indexing .
    (107) assignment_operator -> . EQUALS
    (108) assignment_operator -> . PLUSEQU
    (109) assignment_operator -> . MINUSEQU
    (110) assignment_operator -> . TIMESEQU
    (111) assignment_operator -> . DIVEQU
    (112) assignment_operator -> . MODEQU
    (113) assignment_operator -> . BITANDEQU
    (114) assignment_operator -> . BITOREQU
    (115) assignment_operator -> . BITXOREQU
    (116) assignment_operator -> . LSHIFTEQU
    (117) assignment_operator -> . RSHIFTEQU
    (118) assignment_operator -> . POWEQU
    (119) assignment_operator -> . INTDIVEQU

    LPAREN          reduce using rule 177 (expression -> indexing .)
    LBRACKET        reduce using rule 177 (expression -> indexing .)
    DOT             reduce using rule 177 (expression -> indexing .)
    PLUS            reduce using rule 177 (expression -> indexing .)
    MINUS           reduce using rule 177 (expression -> indexing .)
    TIMES           reduce using rule 177 (expression -> indexing .)
    DIVIDE          reduce using rule 177 (expression -> indexing .)
    PERCENT         reduce using rule 177 (expression -> indexing .)
    INTDIV          reduce using rule 177 (expression -> indexing .)
    POW             reduce using rule 177 (expression -> indexing .)
    BITOR           reduce using rule 177 (expression -> indexing .)
    BITAND          reduce using rule 177 (expression -> indexing .)
    LSHIFT          reduce using rule 177 (expression -> indexing .)
    RSHIFT          reduce using rule 177 (expression -> indexing .)
    EQUALTO         reduce using rule 177 (expression -> indexing .)
    NEQUALTO        reduce using rule 177 (expression -> indexing .)
    LT              reduce using rule 177 (expression -> indexing .)
    LE              reduce using rule 177 (expression -> indexing .)
    GT              reduce using rule 177 (expression -> indexing .)
    GE              reduce using rule 177 (expression -> indexing .)
    REQUALTO        reduce using rule 177 (expression -> indexing .)
    BOOLOR          reduce using rule 177 (expression -> indexing .)
    BOOLAND         reduce using rule 177 (expression -> indexing .)
    OR              reduce using rule 177 (expression -> indexing .)
    AND             reduce using rule 177 (expression -> indexing .)
    CARET           reduce using rule 177 (expression -> indexing .)
    QMARK           reduce using rule 177 (expression -> indexing .)
    IS              reduce using rule 177 (expression -> indexing .)
    ISNOT           reduce using rule 177 (expression -> indexing .)
    IN              reduce using rule 177 (expression -> indexing .)
    NOTIN           reduce using rule 177 (expression -> indexing .)
    EQUALS          shift and go to state 129
    PLUSEQU         shift and go to state 135
    MINUSEQU        shift and go to state 139
    TIMESEQU        shift and go to state 137
    DIVEQU          shift and go to state 126
    MODEQU          shift and go to state 128
    BITANDEQU       shift and go to state 130
    BITOREQU        shift and go to state 136
    BITXOREQU       shift and go to state 134
    LSHIFTEQU       shift and go to state 127
    RSHIFTEQU       shift and go to state 132
    POWEQU          shift and go to state 131
    INTDIVEQU       shift and go to state 138

    assignment_operator            shift and go to state 133

state 38

    (104) assignment -> slicing . assignment_operator expression
    (178) expression -> slicing .
    (107) assignment_operator -> . EQUALS
    (108) assignment_operator -> . PLUSEQU
    (109) assignment_operator -> . MINUSEQU
    (110) assignment_operator -> . TIMESEQU
    (111) assignment_operator -> . DIVEQU
    (112) assignment_operator -> . MODEQU
    (113) assignment_operator -> . BITANDEQU
    (114) assignment_operator -> . BITOREQU
    (115) assignment_operator -> . BITXOREQU
    (116) assignment_operator -> . LSHIFTEQU
    (117) assignment_operator -> . RSHIFTEQU
    (118) assignment_operator -> . POWEQU
    (119) assignment_operator -> . INTDIVEQU

    LPAREN          reduce using rule 178 (expression -> slicing .)
    LBRACKET        reduce using rule 178 (expression -> slicing .)
    DOT             reduce using rule 178 (expression -> slicing .)
    PLUS            reduce using rule 178 (expression -> slicing .)
    MINUS           reduce using rule 178 (expression -> slicing .)
    TIMES           reduce using rule 178 (expression -> slicing .)
    DIVIDE          reduce using rule 178 (expression -> slicing .)
    PERCENT         reduce using rule 178 (expression -> slicing .)
    INTDIV          reduce using rule 178 (expression -> slicing .)
    POW             reduce using rule 178 (expression -> slicing .)
    BITOR           reduce using rule 178 (expression -> slicing .)
    BITAND          reduce using rule 178 (expression -> slicing .)
    LSHIFT          reduce using rule 178 (expression -> slicing .)
    RSHIFT          reduce using rule 178 (expression -> slicing .)
    EQUALTO         reduce using rule 178 (expression -> slicing .)
    NEQUALTO        reduce using rule 178 (expression -> slicing .)
    LT              reduce using rule 178 (expression -> slicing .)
    LE              reduce using rule 178 (expression -> slicing .)
    GT              reduce using rule 178 (expression -> slicing .)
    GE              reduce using rule 178 (expression -> slicing .)
    REQUALTO        reduce using rule 178 (expression -> slicing .)
    BOOLOR          reduce using rule 178 (expression -> slicing .)
    BOOLAND         reduce using rule 178 (expression -> slicing .)
    OR              reduce using rule 178 (expression -> slicing .)
    AND             reduce using rule 178 (expression -> slicing .)
    CARET           reduce using rule 178 (expression -> slicing .)
    QMARK           reduce using rule 178 (expression -> slicing .)
    IS              reduce using rule 178 (expression -> slicing .)
    ISNOT           reduce using rule 178 (expression -> slicing .)
    IN              reduce using rule 178 (expression -> slicing .)
    NOTIN           reduce using rule 178 (expression -> slicing .)
    EQUALS          shift and go to state 129
    PLUSEQU         shift and go to state 135
    MINUSEQU        shift and go to state 139
    TIMESEQU        shift and go to state 137
    DIVEQU          shift and go to state 126
    MODEQU          shift and go to state 128
    BITANDEQU       shift and go to state 130
    BITOREQU        shift and go to state 136
    BITXOREQU       shift and go to state 134
    LSHIFTEQU       shift and go to state 127
    RSHIFTEQU       shift and go to state 132
    POWEQU          shift and go to state 131
    INTDIVEQU       shift and go to state 138

    assignment_operator            shift and go to state 140

state 39

    (70) statement_simple -> PASS .

    NL              reduce using rule 70 (statement_simple -> PASS .)
    SEMICOLON       reduce using rule 70 (statement_simple -> PASS .)
    RPAREN          reduce using rule 70 (statement_simple -> PASS .)


state 40

    (1) file -> optdoc importblock declaration_suite nonempty_block .

    $end            reduce using rule 1 (file -> optdoc importblock declaration_suite nonempty_block .)


state 41

    (67) statement_simple -> yield .

    NL              reduce using rule 67 (statement_simple -> yield .)
    SEMICOLON       reduce using rule 67 (statement_simple -> yield .)
    RPAREN          reduce using rule 67 (statement_simple -> yield .)


state 42

    (175) expression -> grouping .

    LPAREN          reduce using rule 175 (expression -> grouping .)
    LBRACKET        reduce using rule 175 (expression -> grouping .)
    DOT             reduce using rule 175 (expression -> grouping .)
    PLUS            reduce using rule 175 (expression -> grouping .)
    MINUS           reduce using rule 175 (expression -> grouping .)
    TIMES           reduce using rule 175 (expression -> grouping .)
    DIVIDE          reduce using rule 175 (expression -> grouping .)
    PERCENT         reduce using rule 175 (expression -> grouping .)
    INTDIV          reduce using rule 175 (expression -> grouping .)
    POW             reduce using rule 175 (expression -> grouping .)
    BITOR           reduce using rule 175 (expression -> grouping .)
    BITAND          reduce using rule 175 (expression -> grouping .)
    LSHIFT          reduce using rule 175 (expression -> grouping .)
    RSHIFT          reduce using rule 175 (expression -> grouping .)
    EQUALTO         reduce using rule 175 (expression -> grouping .)
    NEQUALTO        reduce using rule 175 (expression -> grouping .)
    LT              reduce using rule 175 (expression -> grouping .)
    LE              reduce using rule 175 (expression -> grouping .)
    GT              reduce using rule 175 (expression -> grouping .)
    GE              reduce using rule 175 (expression -> grouping .)
    REQUALTO        reduce using rule 175 (expression -> grouping .)
    BOOLOR          reduce using rule 175 (expression -> grouping .)
    BOOLAND         reduce using rule 175 (expression -> grouping .)
    OR              reduce using rule 175 (expression -> grouping .)
    AND             reduce using rule 175 (expression -> grouping .)
    CARET           reduce using rule 175 (expression -> grouping .)
    QMARK           reduce using rule 175 (expression -> grouping .)
    IS              reduce using rule 175 (expression -> grouping .)
    ISNOT           reduce using rule 175 (expression -> grouping .)
    IN              reduce using rule 175 (expression -> grouping .)
    NOTIN           reduce using rule 175 (expression -> grouping .)
    COMMA           reduce using rule 175 (expression -> grouping .)
    RPAREN          reduce using rule 175 (expression -> grouping .)
    RBRACKET        reduce using rule 175 (expression -> grouping .)
    NL              reduce using rule 175 (expression -> grouping .)
    SEMICOLON       reduce using rule 175 (expression -> grouping .)
    COLON           reduce using rule 175 (expression -> grouping .)
    RCURLY          reduce using rule 175 (expression -> grouping .)
    DOTDOT          reduce using rule 175 (expression -> grouping .)
    error           reduce using rule 175 (expression -> grouping .)
    COLONCOLON      reduce using rule 175 (expression -> grouping .)


state 43

    (129) return -> RETURN . empty
    (130) return -> RETURN . expression
    (3) empty -> .
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              reduce using rule 3 (empty -> .)
    SEMICOLON       reduce using rule 3 (empty -> .)
    RPAREN          reduce using rule 3 (empty -> .)
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    empty                          shift and go to state 141
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 142
    grouping                       shift and go to state 42

state 44

    (57) statement_complex -> conditional .

    IF              reduce using rule 57 (statement_complex -> conditional .)
    TRY             reduce using rule 57 (statement_complex -> conditional .)
    WHILE           reduce using rule 57 (statement_complex -> conditional .)
    FOR             reduce using rule 57 (statement_complex -> conditional .)
    CONTINUE        reduce using rule 57 (statement_complex -> conditional .)
    BREAK           reduce using rule 57 (statement_complex -> conditional .)
    PASS            reduce using rule 57 (statement_complex -> conditional .)
    RETURN          reduce using rule 57 (statement_complex -> conditional .)
    YIELD           reduce using rule 57 (statement_complex -> conditional .)
    RAISE           reduce using rule 57 (statement_complex -> conditional .)
    DEL             reduce using rule 57 (statement_complex -> conditional .)
    IDENTIFIER      reduce using rule 57 (statement_complex -> conditional .)
    MINUS           reduce using rule 57 (statement_complex -> conditional .)
    PLUS            reduce using rule 57 (statement_complex -> conditional .)
    TILDE           reduce using rule 57 (statement_complex -> conditional .)
    EXMARK          reduce using rule 57 (statement_complex -> conditional .)
    NOT             reduce using rule 57 (statement_complex -> conditional .)
    ASSERT          reduce using rule 57 (statement_complex -> conditional .)
    LPAREN          reduce using rule 57 (statement_complex -> conditional .)
    INTLITERAL      reduce using rule 57 (statement_complex -> conditional .)
    FLOATLITERAL    reduce using rule 57 (statement_complex -> conditional .)
    BOOLLITERAL     reduce using rule 57 (statement_complex -> conditional .)
    STRINGLITERAL   reduce using rule 57 (statement_complex -> conditional .)
    DOCSTRING       reduce using rule 57 (statement_complex -> conditional .)
    NONE            reduce using rule 57 (statement_complex -> conditional .)
    LAMBDA          reduce using rule 57 (statement_complex -> conditional .)
    LBRACKET        reduce using rule 57 (statement_complex -> conditional .)
    LCURLY          reduce using rule 57 (statement_complex -> conditional .)
    DEDENT          reduce using rule 57 (statement_complex -> conditional .)
    $end            reduce using rule 57 (statement_complex -> conditional .)


state 45

    (221) literal -> STRINGLITERAL .

    COLON           reduce using rule 221 (literal -> STRINGLITERAL .)
    PLUS            reduce using rule 221 (literal -> STRINGLITERAL .)
    MINUS           reduce using rule 221 (literal -> STRINGLITERAL .)
    TIMES           reduce using rule 221 (literal -> STRINGLITERAL .)
    DIVIDE          reduce using rule 221 (literal -> STRINGLITERAL .)
    PERCENT         reduce using rule 221 (literal -> STRINGLITERAL .)
    INTDIV          reduce using rule 221 (literal -> STRINGLITERAL .)
    POW             reduce using rule 221 (literal -> STRINGLITERAL .)
    BITOR           reduce using rule 221 (literal -> STRINGLITERAL .)
    BITAND          reduce using rule 221 (literal -> STRINGLITERAL .)
    LSHIFT          reduce using rule 221 (literal -> STRINGLITERAL .)
    RSHIFT          reduce using rule 221 (literal -> STRINGLITERAL .)
    EQUALTO         reduce using rule 221 (literal -> STRINGLITERAL .)
    NEQUALTO        reduce using rule 221 (literal -> STRINGLITERAL .)
    LT              reduce using rule 221 (literal -> STRINGLITERAL .)
    LE              reduce using rule 221 (literal -> STRINGLITERAL .)
    GT              reduce using rule 221 (literal -> STRINGLITERAL .)
    GE              reduce using rule 221 (literal -> STRINGLITERAL .)
    REQUALTO        reduce using rule 221 (literal -> STRINGLITERAL .)
    BOOLOR          reduce using rule 221 (literal -> STRINGLITERAL .)
    BOOLAND         reduce using rule 221 (literal -> STRINGLITERAL .)
    OR              reduce using rule 221 (literal -> STRINGLITERAL .)
    AND             reduce using rule 221 (literal -> STRINGLITERAL .)
    CARET           reduce using rule 221 (literal -> STRINGLITERAL .)
    LPAREN          reduce using rule 221 (literal -> STRINGLITERAL .)
    LBRACKET        reduce using rule 221 (literal -> STRINGLITERAL .)
    QMARK           reduce using rule 221 (literal -> STRINGLITERAL .)
    DOT             reduce using rule 221 (literal -> STRINGLITERAL .)
    IS              reduce using rule 221 (literal -> STRINGLITERAL .)
    ISNOT           reduce using rule 221 (literal -> STRINGLITERAL .)
    IN              reduce using rule 221 (literal -> STRINGLITERAL .)
    NOTIN           reduce using rule 221 (literal -> STRINGLITERAL .)
    COMMA           reduce using rule 221 (literal -> STRINGLITERAL .)
    RBRACKET        reduce using rule 221 (literal -> STRINGLITERAL .)
    NL              reduce using rule 221 (literal -> STRINGLITERAL .)
    SEMICOLON       reduce using rule 221 (literal -> STRINGLITERAL .)
    RPAREN          reduce using rule 221 (literal -> STRINGLITERAL .)
    RCURLY          reduce using rule 221 (literal -> STRINGLITERAL .)
    DOTDOT          reduce using rule 221 (literal -> STRINGLITERAL .)
    error           reduce using rule 221 (literal -> STRINGLITERAL .)
    COLONCOLON      reduce using rule 221 (literal -> STRINGLITERAL .)


state 46

    (174) expression -> function_call .

    LPAREN          reduce using rule 174 (expression -> function_call .)
    LBRACKET        reduce using rule 174 (expression -> function_call .)
    DOT             reduce using rule 174 (expression -> function_call .)
    PLUS            reduce using rule 174 (expression -> function_call .)
    MINUS           reduce using rule 174 (expression -> function_call .)
    TIMES           reduce using rule 174 (expression -> function_call .)
    DIVIDE          reduce using rule 174 (expression -> function_call .)
    PERCENT         reduce using rule 174 (expression -> function_call .)
    INTDIV          reduce using rule 174 (expression -> function_call .)
    POW             reduce using rule 174 (expression -> function_call .)
    BITOR           reduce using rule 174 (expression -> function_call .)
    BITAND          reduce using rule 174 (expression -> function_call .)
    LSHIFT          reduce using rule 174 (expression -> function_call .)
    RSHIFT          reduce using rule 174 (expression -> function_call .)
    EQUALTO         reduce using rule 174 (expression -> function_call .)
    NEQUALTO        reduce using rule 174 (expression -> function_call .)
    LT              reduce using rule 174 (expression -> function_call .)
    LE              reduce using rule 174 (expression -> function_call .)
    GT              reduce using rule 174 (expression -> function_call .)
    GE              reduce using rule 174 (expression -> function_call .)
    REQUALTO        reduce using rule 174 (expression -> function_call .)
    BOOLOR          reduce using rule 174 (expression -> function_call .)
    BOOLAND         reduce using rule 174 (expression -> function_call .)
    OR              reduce using rule 174 (expression -> function_call .)
    AND             reduce using rule 174 (expression -> function_call .)
    CARET           reduce using rule 174 (expression -> function_call .)
    QMARK           reduce using rule 174 (expression -> function_call .)
    IS              reduce using rule 174 (expression -> function_call .)
    ISNOT           reduce using rule 174 (expression -> function_call .)
    IN              reduce using rule 174 (expression -> function_call .)
    NOTIN           reduce using rule 174 (expression -> function_call .)
    COMMA           reduce using rule 174 (expression -> function_call .)
    RPAREN          reduce using rule 174 (expression -> function_call .)
    RBRACKET        reduce using rule 174 (expression -> function_call .)
    NL              reduce using rule 174 (expression -> function_call .)
    SEMICOLON       reduce using rule 174 (expression -> function_call .)
    COLON           reduce using rule 174 (expression -> function_call .)
    RCURLY          reduce using rule 174 (expression -> function_call .)
    DOTDOT          reduce using rule 174 (expression -> function_call .)
    error           reduce using rule 174 (expression -> function_call .)
    COLONCOLON      reduce using rule 174 (expression -> function_call .)


state 47

    (76) delete -> DEL . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 143
    grouping                       shift and go to state 42

state 48

    (64) statement_simple -> procedure_call .

    NL              reduce using rule 64 (statement_simple -> procedure_call .)
    SEMICOLON       reduce using rule 64 (statement_simple -> procedure_call .)
    RPAREN          reduce using rule 64 (statement_simple -> procedure_call .)


state 49

    (224) literal -> function_literal .

    COLON           reduce using rule 224 (literal -> function_literal .)
    PLUS            reduce using rule 224 (literal -> function_literal .)
    MINUS           reduce using rule 224 (literal -> function_literal .)
    TIMES           reduce using rule 224 (literal -> function_literal .)
    DIVIDE          reduce using rule 224 (literal -> function_literal .)
    PERCENT         reduce using rule 224 (literal -> function_literal .)
    INTDIV          reduce using rule 224 (literal -> function_literal .)
    POW             reduce using rule 224 (literal -> function_literal .)
    BITOR           reduce using rule 224 (literal -> function_literal .)
    BITAND          reduce using rule 224 (literal -> function_literal .)
    LSHIFT          reduce using rule 224 (literal -> function_literal .)
    RSHIFT          reduce using rule 224 (literal -> function_literal .)
    EQUALTO         reduce using rule 224 (literal -> function_literal .)
    NEQUALTO        reduce using rule 224 (literal -> function_literal .)
    LT              reduce using rule 224 (literal -> function_literal .)
    LE              reduce using rule 224 (literal -> function_literal .)
    GT              reduce using rule 224 (literal -> function_literal .)
    GE              reduce using rule 224 (literal -> function_literal .)
    REQUALTO        reduce using rule 224 (literal -> function_literal .)
    BOOLOR          reduce using rule 224 (literal -> function_literal .)
    BOOLAND         reduce using rule 224 (literal -> function_literal .)
    OR              reduce using rule 224 (literal -> function_literal .)
    AND             reduce using rule 224 (literal -> function_literal .)
    CARET           reduce using rule 224 (literal -> function_literal .)
    LPAREN          reduce using rule 224 (literal -> function_literal .)
    LBRACKET        reduce using rule 224 (literal -> function_literal .)
    QMARK           reduce using rule 224 (literal -> function_literal .)
    DOT             reduce using rule 224 (literal -> function_literal .)
    IS              reduce using rule 224 (literal -> function_literal .)
    ISNOT           reduce using rule 224 (literal -> function_literal .)
    IN              reduce using rule 224 (literal -> function_literal .)
    NOTIN           reduce using rule 224 (literal -> function_literal .)
    COMMA           reduce using rule 224 (literal -> function_literal .)
    RBRACKET        reduce using rule 224 (literal -> function_literal .)
    NL              reduce using rule 224 (literal -> function_literal .)
    SEMICOLON       reduce using rule 224 (literal -> function_literal .)
    RPAREN          reduce using rule 224 (literal -> function_literal .)
    RCURLY          reduce using rule 224 (literal -> function_literal .)
    DOTDOT          reduce using rule 224 (literal -> function_literal .)
    error           reduce using rule 224 (literal -> function_literal .)
    COLONCOLON      reduce using rule 224 (literal -> function_literal .)


state 50

    (223) literal -> NONE .

    COLON           reduce using rule 223 (literal -> NONE .)
    PLUS            reduce using rule 223 (literal -> NONE .)
    MINUS           reduce using rule 223 (literal -> NONE .)
    TIMES           reduce using rule 223 (literal -> NONE .)
    DIVIDE          reduce using rule 223 (literal -> NONE .)
    PERCENT         reduce using rule 223 (literal -> NONE .)
    INTDIV          reduce using rule 223 (literal -> NONE .)
    POW             reduce using rule 223 (literal -> NONE .)
    BITOR           reduce using rule 223 (literal -> NONE .)
    BITAND          reduce using rule 223 (literal -> NONE .)
    LSHIFT          reduce using rule 223 (literal -> NONE .)
    RSHIFT          reduce using rule 223 (literal -> NONE .)
    EQUALTO         reduce using rule 223 (literal -> NONE .)
    NEQUALTO        reduce using rule 223 (literal -> NONE .)
    LT              reduce using rule 223 (literal -> NONE .)
    LE              reduce using rule 223 (literal -> NONE .)
    GT              reduce using rule 223 (literal -> NONE .)
    GE              reduce using rule 223 (literal -> NONE .)
    REQUALTO        reduce using rule 223 (literal -> NONE .)
    BOOLOR          reduce using rule 223 (literal -> NONE .)
    BOOLAND         reduce using rule 223 (literal -> NONE .)
    OR              reduce using rule 223 (literal -> NONE .)
    AND             reduce using rule 223 (literal -> NONE .)
    CARET           reduce using rule 223 (literal -> NONE .)
    LPAREN          reduce using rule 223 (literal -> NONE .)
    LBRACKET        reduce using rule 223 (literal -> NONE .)
    QMARK           reduce using rule 223 (literal -> NONE .)
    DOT             reduce using rule 223 (literal -> NONE .)
    IS              reduce using rule 223 (literal -> NONE .)
    ISNOT           reduce using rule 223 (literal -> NONE .)
    IN              reduce using rule 223 (literal -> NONE .)
    NOTIN           reduce using rule 223 (literal -> NONE .)
    COMMA           reduce using rule 223 (literal -> NONE .)
    RBRACKET        reduce using rule 223 (literal -> NONE .)
    NL              reduce using rule 223 (literal -> NONE .)
    SEMICOLON       reduce using rule 223 (literal -> NONE .)
    RPAREN          reduce using rule 223 (literal -> NONE .)
    RCURLY          reduce using rule 223 (literal -> NONE .)
    DOTDOT          reduce using rule 223 (literal -> NONE .)
    error           reduce using rule 223 (literal -> NONE .)
    COLONCOLON      reduce using rule 223 (literal -> NONE .)


state 51

    (80) for_loop -> FOR . IDENTIFIER IN expression COLON suite
    (81) for_loop -> FOR . IDENTIFIER IN expression DOTDOT expression COLON suite
    (264) for_loop -> FOR . error IN expression COLON suite
    (265) for_loop -> FOR . IDENTIFIER IN error COLON suite
    (266) for_loop -> FOR . error IN expression DOTDOT expression COLON suite
    (267) for_loop -> FOR . IDENTIFIER IN error DOTDOT expression COLON suite
    (268) for_loop -> FOR . IDENTIFIER IN expression DOTDOT error COLON suite

    IDENTIFIER      shift and go to state 145
    error           shift and go to state 144


state 52

    (132) assert -> assertmessage .

    RPAREN          reduce using rule 132 (assert -> assertmessage .)
    NL              reduce using rule 132 (assert -> assertmessage .)
    SEMICOLON       reduce using rule 132 (assert -> assertmessage .)


state 53

    (86) try_except -> TRY . COLON suite exceptlist_nonempty empty empty
    (87) try_except -> TRY . COLON suite exceptlist_nonempty except_else empty
    (88) try_except -> TRY . COLON suite exceptlist_nonempty empty except_finally
    (89) try_except -> TRY . COLON suite exceptlist_nonempty except_else except_finally
    (90) try_except -> TRY . COLON suite empty empty except_finally

    COLON           shift and go to state 146


state 54

    (59) statement_complex -> statement_multi . NL
    (60) statement_complex -> statement_multi . SEMICOLON NL
    (61) statement_multi -> statement_multi . SEMICOLON statement_simple

    NL              shift and go to state 147
    SEMICOLON       shift and go to state 148


state 55

    (219) literal -> FLOATLITERAL .

    COLON           reduce using rule 219 (literal -> FLOATLITERAL .)
    PLUS            reduce using rule 219 (literal -> FLOATLITERAL .)
    MINUS           reduce using rule 219 (literal -> FLOATLITERAL .)
    TIMES           reduce using rule 219 (literal -> FLOATLITERAL .)
    DIVIDE          reduce using rule 219 (literal -> FLOATLITERAL .)
    PERCENT         reduce using rule 219 (literal -> FLOATLITERAL .)
    INTDIV          reduce using rule 219 (literal -> FLOATLITERAL .)
    POW             reduce using rule 219 (literal -> FLOATLITERAL .)
    BITOR           reduce using rule 219 (literal -> FLOATLITERAL .)
    BITAND          reduce using rule 219 (literal -> FLOATLITERAL .)
    LSHIFT          reduce using rule 219 (literal -> FLOATLITERAL .)
    RSHIFT          reduce using rule 219 (literal -> FLOATLITERAL .)
    EQUALTO         reduce using rule 219 (literal -> FLOATLITERAL .)
    NEQUALTO        reduce using rule 219 (literal -> FLOATLITERAL .)
    LT              reduce using rule 219 (literal -> FLOATLITERAL .)
    LE              reduce using rule 219 (literal -> FLOATLITERAL .)
    GT              reduce using rule 219 (literal -> FLOATLITERAL .)
    GE              reduce using rule 219 (literal -> FLOATLITERAL .)
    REQUALTO        reduce using rule 219 (literal -> FLOATLITERAL .)
    BOOLOR          reduce using rule 219 (literal -> FLOATLITERAL .)
    BOOLAND         reduce using rule 219 (literal -> FLOATLITERAL .)
    OR              reduce using rule 219 (literal -> FLOATLITERAL .)
    AND             reduce using rule 219 (literal -> FLOATLITERAL .)
    CARET           reduce using rule 219 (literal -> FLOATLITERAL .)
    LPAREN          reduce using rule 219 (literal -> FLOATLITERAL .)
    LBRACKET        reduce using rule 219 (literal -> FLOATLITERAL .)
    QMARK           reduce using rule 219 (literal -> FLOATLITERAL .)
    DOT             reduce using rule 219 (literal -> FLOATLITERAL .)
    IS              reduce using rule 219 (literal -> FLOATLITERAL .)
    ISNOT           reduce using rule 219 (literal -> FLOATLITERAL .)
    IN              reduce using rule 219 (literal -> FLOATLITERAL .)
    NOTIN           reduce using rule 219 (literal -> FLOATLITERAL .)
    COMMA           reduce using rule 219 (literal -> FLOATLITERAL .)
    RBRACKET        reduce using rule 219 (literal -> FLOATLITERAL .)
    NL              reduce using rule 219 (literal -> FLOATLITERAL .)
    SEMICOLON       reduce using rule 219 (literal -> FLOATLITERAL .)
    RPAREN          reduce using rule 219 (literal -> FLOATLITERAL .)
    RCURLY          reduce using rule 219 (literal -> FLOATLITERAL .)
    DOTDOT          reduce using rule 219 (literal -> FLOATLITERAL .)
    error           reduce using rule 219 (literal -> FLOATLITERAL .)
    COLONCOLON      reduce using rule 219 (literal -> FLOATLITERAL .)


state 56

    (68) statement_simple -> CONTINUE .

    NL              reduce using rule 68 (statement_simple -> CONTINUE .)
    SEMICOLON       reduce using rule 68 (statement_simple -> CONTINUE .)
    RPAREN          reduce using rule 68 (statement_simple -> CONTINUE .)


state 57

    (211) expression -> NOT . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 149
    grouping                       shift and go to state 42

state 58

    (128) procedure_call -> expression . LPAREN expressionlist RPAREN
    (277) procedure_call -> expression . LPAREN error RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (247) member -> expression . DOT IDENTIFIER
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (246) ternary -> expression . QMARK expression COLON expression
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    LPAREN          shift and go to state 174
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    QMARK           shift and go to state 178
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 59

    (230) function_literal -> LAMBDA . LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> LAMBDA . LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> LAMBDA . LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> LAMBDA . LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> LAMBDA . LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> LAMBDA . LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> LAMBDA . LPAREN argumentlist RPAREN COLON LPAREN error RPAREN

    LPAREN          shift and go to state 181


state 60

    (73) raise -> RAISE . IDENTIFIER
    (74) raise -> RAISE . function_call
    (75) raise -> RAISE . empty
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (3) empty -> .
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    IDENTIFIER      shift and go to state 183
    NL              reduce using rule 3 (empty -> .)
    SEMICOLON       reduce using rule 3 (empty -> .)
    RPAREN          reduce using rule 3 (empty -> .)
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 182
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    empty                          shift and go to state 184
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 185
    grouping                       shift and go to state 42

state 61

    (229) literal -> set_literal .

    COLON           reduce using rule 229 (literal -> set_literal .)
    PLUS            reduce using rule 229 (literal -> set_literal .)
    MINUS           reduce using rule 229 (literal -> set_literal .)
    TIMES           reduce using rule 229 (literal -> set_literal .)
    DIVIDE          reduce using rule 229 (literal -> set_literal .)
    PERCENT         reduce using rule 229 (literal -> set_literal .)
    INTDIV          reduce using rule 229 (literal -> set_literal .)
    POW             reduce using rule 229 (literal -> set_literal .)
    BITOR           reduce using rule 229 (literal -> set_literal .)
    BITAND          reduce using rule 229 (literal -> set_literal .)
    LSHIFT          reduce using rule 229 (literal -> set_literal .)
    RSHIFT          reduce using rule 229 (literal -> set_literal .)
    EQUALTO         reduce using rule 229 (literal -> set_literal .)
    NEQUALTO        reduce using rule 229 (literal -> set_literal .)
    LT              reduce using rule 229 (literal -> set_literal .)
    LE              reduce using rule 229 (literal -> set_literal .)
    GT              reduce using rule 229 (literal -> set_literal .)
    GE              reduce using rule 229 (literal -> set_literal .)
    REQUALTO        reduce using rule 229 (literal -> set_literal .)
    BOOLOR          reduce using rule 229 (literal -> set_literal .)
    BOOLAND         reduce using rule 229 (literal -> set_literal .)
    OR              reduce using rule 229 (literal -> set_literal .)
    AND             reduce using rule 229 (literal -> set_literal .)
    CARET           reduce using rule 229 (literal -> set_literal .)
    LPAREN          reduce using rule 229 (literal -> set_literal .)
    LBRACKET        reduce using rule 229 (literal -> set_literal .)
    QMARK           reduce using rule 229 (literal -> set_literal .)
    DOT             reduce using rule 229 (literal -> set_literal .)
    IS              reduce using rule 229 (literal -> set_literal .)
    ISNOT           reduce using rule 229 (literal -> set_literal .)
    IN              reduce using rule 229 (literal -> set_literal .)
    NOTIN           reduce using rule 229 (literal -> set_literal .)
    COMMA           reduce using rule 229 (literal -> set_literal .)
    RBRACKET        reduce using rule 229 (literal -> set_literal .)
    NL              reduce using rule 229 (literal -> set_literal .)
    SEMICOLON       reduce using rule 229 (literal -> set_literal .)
    RPAREN          reduce using rule 229 (literal -> set_literal .)
    RCURLY          reduce using rule 229 (literal -> set_literal .)
    DOTDOT          reduce using rule 229 (literal -> set_literal .)
    error           reduce using rule 229 (literal -> set_literal .)
    COLONCOLON      reduce using rule 229 (literal -> set_literal .)


state 62

    (79) while_loop -> WHILE . expression COLON suite
    (263) while_loop -> WHILE . error COLON suite
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 186
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 187
    grouping                       shift and go to state 42

state 63

    (71) statement_simple -> raise .

    NL              reduce using rule 71 (statement_simple -> raise .)
    SEMICOLON       reduce using rule 71 (statement_simple -> raise .)
    RPAREN          reduce using rule 71 (statement_simple -> raise .)


state 64

    (176) expression -> literal .

    LPAREN          reduce using rule 176 (expression -> literal .)
    LBRACKET        reduce using rule 176 (expression -> literal .)
    DOT             reduce using rule 176 (expression -> literal .)
    PLUS            reduce using rule 176 (expression -> literal .)
    MINUS           reduce using rule 176 (expression -> literal .)
    TIMES           reduce using rule 176 (expression -> literal .)
    DIVIDE          reduce using rule 176 (expression -> literal .)
    PERCENT         reduce using rule 176 (expression -> literal .)
    INTDIV          reduce using rule 176 (expression -> literal .)
    POW             reduce using rule 176 (expression -> literal .)
    BITOR           reduce using rule 176 (expression -> literal .)
    BITAND          reduce using rule 176 (expression -> literal .)
    LSHIFT          reduce using rule 176 (expression -> literal .)
    RSHIFT          reduce using rule 176 (expression -> literal .)
    EQUALTO         reduce using rule 176 (expression -> literal .)
    NEQUALTO        reduce using rule 176 (expression -> literal .)
    LT              reduce using rule 176 (expression -> literal .)
    LE              reduce using rule 176 (expression -> literal .)
    GT              reduce using rule 176 (expression -> literal .)
    GE              reduce using rule 176 (expression -> literal .)
    REQUALTO        reduce using rule 176 (expression -> literal .)
    BOOLOR          reduce using rule 176 (expression -> literal .)
    BOOLAND         reduce using rule 176 (expression -> literal .)
    OR              reduce using rule 176 (expression -> literal .)
    AND             reduce using rule 176 (expression -> literal .)
    CARET           reduce using rule 176 (expression -> literal .)
    QMARK           reduce using rule 176 (expression -> literal .)
    IS              reduce using rule 176 (expression -> literal .)
    ISNOT           reduce using rule 176 (expression -> literal .)
    IN              reduce using rule 176 (expression -> literal .)
    NOTIN           reduce using rule 176 (expression -> literal .)
    COMMA           reduce using rule 176 (expression -> literal .)
    RPAREN          reduce using rule 176 (expression -> literal .)
    RBRACKET        reduce using rule 176 (expression -> literal .)
    NL              reduce using rule 176 (expression -> literal .)
    SEMICOLON       reduce using rule 176 (expression -> literal .)
    COLON           reduce using rule 176 (expression -> literal .)
    RCURLY          reduce using rule 176 (expression -> literal .)
    DOTDOT          reduce using rule 176 (expression -> literal .)
    error           reduce using rule 176 (expression -> literal .)
    COLONCOLON      reduce using rule 176 (expression -> literal .)


state 65

    (131) assert -> assertnomessage .

    RPAREN          reduce using rule 131 (assert -> assertnomessage .)
    NL              reduce using rule 131 (assert -> assertnomessage .)
    SEMICOLON       reduce using rule 131 (assert -> assertnomessage .)


state 66

    (245) variable -> IDENTIFIER .

    PLUS            reduce using rule 245 (variable -> IDENTIFIER .)
    MINUS           reduce using rule 245 (variable -> IDENTIFIER .)
    TIMES           reduce using rule 245 (variable -> IDENTIFIER .)
    DIVIDE          reduce using rule 245 (variable -> IDENTIFIER .)
    PERCENT         reduce using rule 245 (variable -> IDENTIFIER .)
    INTDIV          reduce using rule 245 (variable -> IDENTIFIER .)
    POW             reduce using rule 245 (variable -> IDENTIFIER .)
    BITOR           reduce using rule 245 (variable -> IDENTIFIER .)
    BITAND          reduce using rule 245 (variable -> IDENTIFIER .)
    LSHIFT          reduce using rule 245 (variable -> IDENTIFIER .)
    RSHIFT          reduce using rule 245 (variable -> IDENTIFIER .)
    EQUALTO         reduce using rule 245 (variable -> IDENTIFIER .)
    NEQUALTO        reduce using rule 245 (variable -> IDENTIFIER .)
    LT              reduce using rule 245 (variable -> IDENTIFIER .)
    LE              reduce using rule 245 (variable -> IDENTIFIER .)
    GT              reduce using rule 245 (variable -> IDENTIFIER .)
    GE              reduce using rule 245 (variable -> IDENTIFIER .)
    REQUALTO        reduce using rule 245 (variable -> IDENTIFIER .)
    BOOLOR          reduce using rule 245 (variable -> IDENTIFIER .)
    BOOLAND         reduce using rule 245 (variable -> IDENTIFIER .)
    OR              reduce using rule 245 (variable -> IDENTIFIER .)
    AND             reduce using rule 245 (variable -> IDENTIFIER .)
    CARET           reduce using rule 245 (variable -> IDENTIFIER .)
    LPAREN          reduce using rule 245 (variable -> IDENTIFIER .)
    LBRACKET        reduce using rule 245 (variable -> IDENTIFIER .)
    QMARK           reduce using rule 245 (variable -> IDENTIFIER .)
    DOT             reduce using rule 245 (variable -> IDENTIFIER .)
    IS              reduce using rule 245 (variable -> IDENTIFIER .)
    ISNOT           reduce using rule 245 (variable -> IDENTIFIER .)
    IN              reduce using rule 245 (variable -> IDENTIFIER .)
    NOTIN           reduce using rule 245 (variable -> IDENTIFIER .)
    COMMA           reduce using rule 245 (variable -> IDENTIFIER .)
    RBRACKET        reduce using rule 245 (variable -> IDENTIFIER .)
    NL              reduce using rule 245 (variable -> IDENTIFIER .)
    SEMICOLON       reduce using rule 245 (variable -> IDENTIFIER .)
    RPAREN          reduce using rule 245 (variable -> IDENTIFIER .)
    COLON           reduce using rule 245 (variable -> IDENTIFIER .)
    RCURLY          reduce using rule 245 (variable -> IDENTIFIER .)
    DOTDOT          reduce using rule 245 (variable -> IDENTIFIER .)
    error           reduce using rule 245 (variable -> IDENTIFIER .)
    COLONCOLON      reduce using rule 245 (variable -> IDENTIFIER .)
    EQUALS          reduce using rule 245 (variable -> IDENTIFIER .)
    PLUSEQU         reduce using rule 245 (variable -> IDENTIFIER .)
    MINUSEQU        reduce using rule 245 (variable -> IDENTIFIER .)
    TIMESEQU        reduce using rule 245 (variable -> IDENTIFIER .)
    DIVEQU          reduce using rule 245 (variable -> IDENTIFIER .)
    MODEQU          reduce using rule 245 (variable -> IDENTIFIER .)
    BITANDEQU       reduce using rule 245 (variable -> IDENTIFIER .)
    BITOREQU        reduce using rule 245 (variable -> IDENTIFIER .)
    BITXOREQU       reduce using rule 245 (variable -> IDENTIFIER .)
    LSHIFTEQU       reduce using rule 245 (variable -> IDENTIFIER .)
    RSHIFTEQU       reduce using rule 245 (variable -> IDENTIFIER .)
    POWEQU          reduce using rule 245 (variable -> IDENTIFIER .)
    INTDIVEQU       reduce using rule 245 (variable -> IDENTIFIER .)


state 67

    (2) file -> optdoc importblock declaration_suite empty .

    $end            reduce using rule 2 (file -> optdoc importblock declaration_suite empty .)


state 68

    (77) loop -> while_loop .

    IF              reduce using rule 77 (loop -> while_loop .)
    TRY             reduce using rule 77 (loop -> while_loop .)
    WHILE           reduce using rule 77 (loop -> while_loop .)
    FOR             reduce using rule 77 (loop -> while_loop .)
    CONTINUE        reduce using rule 77 (loop -> while_loop .)
    BREAK           reduce using rule 77 (loop -> while_loop .)
    PASS            reduce using rule 77 (loop -> while_loop .)
    RETURN          reduce using rule 77 (loop -> while_loop .)
    YIELD           reduce using rule 77 (loop -> while_loop .)
    RAISE           reduce using rule 77 (loop -> while_loop .)
    DEL             reduce using rule 77 (loop -> while_loop .)
    IDENTIFIER      reduce using rule 77 (loop -> while_loop .)
    MINUS           reduce using rule 77 (loop -> while_loop .)
    PLUS            reduce using rule 77 (loop -> while_loop .)
    TILDE           reduce using rule 77 (loop -> while_loop .)
    EXMARK          reduce using rule 77 (loop -> while_loop .)
    NOT             reduce using rule 77 (loop -> while_loop .)
    ASSERT          reduce using rule 77 (loop -> while_loop .)
    LPAREN          reduce using rule 77 (loop -> while_loop .)
    INTLITERAL      reduce using rule 77 (loop -> while_loop .)
    FLOATLITERAL    reduce using rule 77 (loop -> while_loop .)
    BOOLLITERAL     reduce using rule 77 (loop -> while_loop .)
    STRINGLITERAL   reduce using rule 77 (loop -> while_loop .)
    DOCSTRING       reduce using rule 77 (loop -> while_loop .)
    NONE            reduce using rule 77 (loop -> while_loop .)
    LAMBDA          reduce using rule 77 (loop -> while_loop .)
    LBRACKET        reduce using rule 77 (loop -> while_loop .)
    LCURLY          reduce using rule 77 (loop -> while_loop .)
    DEDENT          reduce using rule 77 (loop -> while_loop .)
    $end            reduce using rule 77 (loop -> while_loop .)


state 69

    (228) literal -> dictionary_literal .

    COLON           reduce using rule 228 (literal -> dictionary_literal .)
    PLUS            reduce using rule 228 (literal -> dictionary_literal .)
    MINUS           reduce using rule 228 (literal -> dictionary_literal .)
    TIMES           reduce using rule 228 (literal -> dictionary_literal .)
    DIVIDE          reduce using rule 228 (literal -> dictionary_literal .)
    PERCENT         reduce using rule 228 (literal -> dictionary_literal .)
    INTDIV          reduce using rule 228 (literal -> dictionary_literal .)
    POW             reduce using rule 228 (literal -> dictionary_literal .)
    BITOR           reduce using rule 228 (literal -> dictionary_literal .)
    BITAND          reduce using rule 228 (literal -> dictionary_literal .)
    LSHIFT          reduce using rule 228 (literal -> dictionary_literal .)
    RSHIFT          reduce using rule 228 (literal -> dictionary_literal .)
    EQUALTO         reduce using rule 228 (literal -> dictionary_literal .)
    NEQUALTO        reduce using rule 228 (literal -> dictionary_literal .)
    LT              reduce using rule 228 (literal -> dictionary_literal .)
    LE              reduce using rule 228 (literal -> dictionary_literal .)
    GT              reduce using rule 228 (literal -> dictionary_literal .)
    GE              reduce using rule 228 (literal -> dictionary_literal .)
    REQUALTO        reduce using rule 228 (literal -> dictionary_literal .)
    BOOLOR          reduce using rule 228 (literal -> dictionary_literal .)
    BOOLAND         reduce using rule 228 (literal -> dictionary_literal .)
    OR              reduce using rule 228 (literal -> dictionary_literal .)
    AND             reduce using rule 228 (literal -> dictionary_literal .)
    CARET           reduce using rule 228 (literal -> dictionary_literal .)
    LPAREN          reduce using rule 228 (literal -> dictionary_literal .)
    LBRACKET        reduce using rule 228 (literal -> dictionary_literal .)
    QMARK           reduce using rule 228 (literal -> dictionary_literal .)
    DOT             reduce using rule 228 (literal -> dictionary_literal .)
    IS              reduce using rule 228 (literal -> dictionary_literal .)
    ISNOT           reduce using rule 228 (literal -> dictionary_literal .)
    IN              reduce using rule 228 (literal -> dictionary_literal .)
    NOTIN           reduce using rule 228 (literal -> dictionary_literal .)
    COMMA           reduce using rule 228 (literal -> dictionary_literal .)
    RBRACKET        reduce using rule 228 (literal -> dictionary_literal .)
    NL              reduce using rule 228 (literal -> dictionary_literal .)
    SEMICOLON       reduce using rule 228 (literal -> dictionary_literal .)
    RPAREN          reduce using rule 228 (literal -> dictionary_literal .)
    RCURLY          reduce using rule 228 (literal -> dictionary_literal .)
    DOTDOT          reduce using rule 228 (literal -> dictionary_literal .)
    error           reduce using rule 228 (literal -> dictionary_literal .)
    COLONCOLON      reduce using rule 228 (literal -> dictionary_literal .)


state 70

    (209) expression -> TILDE . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 188
    grouping                       shift and go to state 42

state 71

    (66) statement_simple -> assert .

    NL              reduce using rule 66 (statement_simple -> assert .)
    SEMICOLON       reduce using rule 66 (statement_simple -> assert .)
    RPAREN          reduce using rule 66 (statement_simple -> assert .)


state 72

    (58) statement_complex -> try_except .

    IF              reduce using rule 58 (statement_complex -> try_except .)
    TRY             reduce using rule 58 (statement_complex -> try_except .)
    WHILE           reduce using rule 58 (statement_complex -> try_except .)
    FOR             reduce using rule 58 (statement_complex -> try_except .)
    CONTINUE        reduce using rule 58 (statement_complex -> try_except .)
    BREAK           reduce using rule 58 (statement_complex -> try_except .)
    PASS            reduce using rule 58 (statement_complex -> try_except .)
    RETURN          reduce using rule 58 (statement_complex -> try_except .)
    YIELD           reduce using rule 58 (statement_complex -> try_except .)
    RAISE           reduce using rule 58 (statement_complex -> try_except .)
    DEL             reduce using rule 58 (statement_complex -> try_except .)
    IDENTIFIER      reduce using rule 58 (statement_complex -> try_except .)
    MINUS           reduce using rule 58 (statement_complex -> try_except .)
    PLUS            reduce using rule 58 (statement_complex -> try_except .)
    TILDE           reduce using rule 58 (statement_complex -> try_except .)
    EXMARK          reduce using rule 58 (statement_complex -> try_except .)
    NOT             reduce using rule 58 (statement_complex -> try_except .)
    ASSERT          reduce using rule 58 (statement_complex -> try_except .)
    LPAREN          reduce using rule 58 (statement_complex -> try_except .)
    INTLITERAL      reduce using rule 58 (statement_complex -> try_except .)
    FLOATLITERAL    reduce using rule 58 (statement_complex -> try_except .)
    BOOLLITERAL     reduce using rule 58 (statement_complex -> try_except .)
    STRINGLITERAL   reduce using rule 58 (statement_complex -> try_except .)
    DOCSTRING       reduce using rule 58 (statement_complex -> try_except .)
    NONE            reduce using rule 58 (statement_complex -> try_except .)
    LAMBDA          reduce using rule 58 (statement_complex -> try_except .)
    LBRACKET        reduce using rule 58 (statement_complex -> try_except .)
    LCURLY          reduce using rule 58 (statement_complex -> try_except .)
    DEDENT          reduce using rule 58 (statement_complex -> try_except .)
    $end            reduce using rule 58 (statement_complex -> try_except .)


state 73

    (69) statement_simple -> BREAK .

    NL              reduce using rule 69 (statement_simple -> BREAK .)
    SEMICOLON       reduce using rule 69 (statement_simple -> BREAK .)
    RPAREN          reduce using rule 69 (statement_simple -> BREAK .)


state 74

    (56) statement_complex -> loop .

    IF              reduce using rule 56 (statement_complex -> loop .)
    TRY             reduce using rule 56 (statement_complex -> loop .)
    WHILE           reduce using rule 56 (statement_complex -> loop .)
    FOR             reduce using rule 56 (statement_complex -> loop .)
    CONTINUE        reduce using rule 56 (statement_complex -> loop .)
    BREAK           reduce using rule 56 (statement_complex -> loop .)
    PASS            reduce using rule 56 (statement_complex -> loop .)
    RETURN          reduce using rule 56 (statement_complex -> loop .)
    YIELD           reduce using rule 56 (statement_complex -> loop .)
    RAISE           reduce using rule 56 (statement_complex -> loop .)
    DEL             reduce using rule 56 (statement_complex -> loop .)
    IDENTIFIER      reduce using rule 56 (statement_complex -> loop .)
    MINUS           reduce using rule 56 (statement_complex -> loop .)
    PLUS            reduce using rule 56 (statement_complex -> loop .)
    TILDE           reduce using rule 56 (statement_complex -> loop .)
    EXMARK          reduce using rule 56 (statement_complex -> loop .)
    NOT             reduce using rule 56 (statement_complex -> loop .)
    ASSERT          reduce using rule 56 (statement_complex -> loop .)
    LPAREN          reduce using rule 56 (statement_complex -> loop .)
    INTLITERAL      reduce using rule 56 (statement_complex -> loop .)
    FLOATLITERAL    reduce using rule 56 (statement_complex -> loop .)
    BOOLLITERAL     reduce using rule 56 (statement_complex -> loop .)
    STRINGLITERAL   reduce using rule 56 (statement_complex -> loop .)
    DOCSTRING       reduce using rule 56 (statement_complex -> loop .)
    NONE            reduce using rule 56 (statement_complex -> loop .)
    LAMBDA          reduce using rule 56 (statement_complex -> loop .)
    LBRACKET        reduce using rule 56 (statement_complex -> loop .)
    LCURLY          reduce using rule 56 (statement_complex -> loop .)
    DEDENT          reduce using rule 56 (statement_complex -> loop .)
    $end            reduce using rule 56 (statement_complex -> loop .)


state 75

    (72) statement_simple -> delete .

    NL              reduce using rule 72 (statement_simple -> delete .)
    SEMICOLON       reduce using rule 72 (statement_simple -> delete .)
    RPAREN          reduce using rule 72 (statement_simple -> delete .)


state 76

    (173) expression -> calculation .

    LPAREN          reduce using rule 173 (expression -> calculation .)
    LBRACKET        reduce using rule 173 (expression -> calculation .)
    DOT             reduce using rule 173 (expression -> calculation .)
    PLUS            reduce using rule 173 (expression -> calculation .)
    MINUS           reduce using rule 173 (expression -> calculation .)
    TIMES           reduce using rule 173 (expression -> calculation .)
    DIVIDE          reduce using rule 173 (expression -> calculation .)
    PERCENT         reduce using rule 173 (expression -> calculation .)
    INTDIV          reduce using rule 173 (expression -> calculation .)
    POW             reduce using rule 173 (expression -> calculation .)
    BITOR           reduce using rule 173 (expression -> calculation .)
    BITAND          reduce using rule 173 (expression -> calculation .)
    LSHIFT          reduce using rule 173 (expression -> calculation .)
    RSHIFT          reduce using rule 173 (expression -> calculation .)
    EQUALTO         reduce using rule 173 (expression -> calculation .)
    NEQUALTO        reduce using rule 173 (expression -> calculation .)
    LT              reduce using rule 173 (expression -> calculation .)
    LE              reduce using rule 173 (expression -> calculation .)
    GT              reduce using rule 173 (expression -> calculation .)
    GE              reduce using rule 173 (expression -> calculation .)
    REQUALTO        reduce using rule 173 (expression -> calculation .)
    BOOLOR          reduce using rule 173 (expression -> calculation .)
    BOOLAND         reduce using rule 173 (expression -> calculation .)
    OR              reduce using rule 173 (expression -> calculation .)
    AND             reduce using rule 173 (expression -> calculation .)
    CARET           reduce using rule 173 (expression -> calculation .)
    QMARK           reduce using rule 173 (expression -> calculation .)
    IS              reduce using rule 173 (expression -> calculation .)
    ISNOT           reduce using rule 173 (expression -> calculation .)
    IN              reduce using rule 173 (expression -> calculation .)
    NOTIN           reduce using rule 173 (expression -> calculation .)
    COMMA           reduce using rule 173 (expression -> calculation .)
    RPAREN          reduce using rule 173 (expression -> calculation .)
    RBRACKET        reduce using rule 173 (expression -> calculation .)
    NL              reduce using rule 173 (expression -> calculation .)
    SEMICOLON       reduce using rule 173 (expression -> calculation .)
    COLON           reduce using rule 173 (expression -> calculation .)
    RCURLY          reduce using rule 173 (expression -> calculation .)
    DOTDOT          reduce using rule 173 (expression -> calculation .)
    error           reduce using rule 173 (expression -> calculation .)
    COLONCOLON      reduce using rule 173 (expression -> calculation .)


state 77

    (133) assertnomessage -> ASSERT . expression
    (134) assertmessage -> ASSERT . expression COMMA literal
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 189
    grouping                       shift and go to state 42

state 78

    (239) dictionary_literal -> LCURLY . dictionarylist RCURLY
    (292) dictionary_literal -> LCURLY . error RCURLY
    (244) set_literal -> LCURLY . nonempty_expressionlist RCURLY
    (240) dictionarylist -> . nonempty_dictionarylist
    (241) dictionarylist -> . empty
    (215) nonempty_expressionlist -> . expression
    (216) nonempty_expressionlist -> . nonempty_expressionlist COMMA nonempty_expressionlist
    (242) nonempty_dictionarylist -> . expression COLON expression
    (243) nonempty_dictionarylist -> . nonempty_dictionarylist COMMA nonempty_dictionarylist
    (3) empty -> .
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 194
    RCURLY          reduce using rule 3 (empty -> .)
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    nonempty_expressionlist        shift and go to state 193
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    dictionarylist                 shift and go to state 191
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    nonempty_dictionarylist        shift and go to state 192
    empty                          shift and go to state 190
    ternary                        shift and go to state 92
    expression                     shift and go to state 195
    grouping                       shift and go to state 42

state 79

    (225) literal -> procedure_literal .

    COLON           reduce using rule 225 (literal -> procedure_literal .)
    PLUS            reduce using rule 225 (literal -> procedure_literal .)
    MINUS           reduce using rule 225 (literal -> procedure_literal .)
    TIMES           reduce using rule 225 (literal -> procedure_literal .)
    DIVIDE          reduce using rule 225 (literal -> procedure_literal .)
    PERCENT         reduce using rule 225 (literal -> procedure_literal .)
    INTDIV          reduce using rule 225 (literal -> procedure_literal .)
    POW             reduce using rule 225 (literal -> procedure_literal .)
    BITOR           reduce using rule 225 (literal -> procedure_literal .)
    BITAND          reduce using rule 225 (literal -> procedure_literal .)
    LSHIFT          reduce using rule 225 (literal -> procedure_literal .)
    RSHIFT          reduce using rule 225 (literal -> procedure_literal .)
    EQUALTO         reduce using rule 225 (literal -> procedure_literal .)
    NEQUALTO        reduce using rule 225 (literal -> procedure_literal .)
    LT              reduce using rule 225 (literal -> procedure_literal .)
    LE              reduce using rule 225 (literal -> procedure_literal .)
    GT              reduce using rule 225 (literal -> procedure_literal .)
    GE              reduce using rule 225 (literal -> procedure_literal .)
    REQUALTO        reduce using rule 225 (literal -> procedure_literal .)
    BOOLOR          reduce using rule 225 (literal -> procedure_literal .)
    BOOLAND         reduce using rule 225 (literal -> procedure_literal .)
    OR              reduce using rule 225 (literal -> procedure_literal .)
    AND             reduce using rule 225 (literal -> procedure_literal .)
    CARET           reduce using rule 225 (literal -> procedure_literal .)
    LPAREN          reduce using rule 225 (literal -> procedure_literal .)
    LBRACKET        reduce using rule 225 (literal -> procedure_literal .)
    QMARK           reduce using rule 225 (literal -> procedure_literal .)
    DOT             reduce using rule 225 (literal -> procedure_literal .)
    IS              reduce using rule 225 (literal -> procedure_literal .)
    ISNOT           reduce using rule 225 (literal -> procedure_literal .)
    IN              reduce using rule 225 (literal -> procedure_literal .)
    NOTIN           reduce using rule 225 (literal -> procedure_literal .)
    COMMA           reduce using rule 225 (literal -> procedure_literal .)
    RBRACKET        reduce using rule 225 (literal -> procedure_literal .)
    NL              reduce using rule 225 (literal -> procedure_literal .)
    SEMICOLON       reduce using rule 225 (literal -> procedure_literal .)
    RPAREN          reduce using rule 225 (literal -> procedure_literal .)
    RCURLY          reduce using rule 225 (literal -> procedure_literal .)
    DOTDOT          reduce using rule 225 (literal -> procedure_literal .)
    error           reduce using rule 225 (literal -> procedure_literal .)
    COLONCOLON      reduce using rule 225 (literal -> procedure_literal .)


state 80

    (222) literal -> DOCSTRING .

    COLON           reduce using rule 222 (literal -> DOCSTRING .)
    PLUS            reduce using rule 222 (literal -> DOCSTRING .)
    MINUS           reduce using rule 222 (literal -> DOCSTRING .)
    TIMES           reduce using rule 222 (literal -> DOCSTRING .)
    DIVIDE          reduce using rule 222 (literal -> DOCSTRING .)
    PERCENT         reduce using rule 222 (literal -> DOCSTRING .)
    INTDIV          reduce using rule 222 (literal -> DOCSTRING .)
    POW             reduce using rule 222 (literal -> DOCSTRING .)
    BITOR           reduce using rule 222 (literal -> DOCSTRING .)
    BITAND          reduce using rule 222 (literal -> DOCSTRING .)
    LSHIFT          reduce using rule 222 (literal -> DOCSTRING .)
    RSHIFT          reduce using rule 222 (literal -> DOCSTRING .)
    EQUALTO         reduce using rule 222 (literal -> DOCSTRING .)
    NEQUALTO        reduce using rule 222 (literal -> DOCSTRING .)
    LT              reduce using rule 222 (literal -> DOCSTRING .)
    LE              reduce using rule 222 (literal -> DOCSTRING .)
    GT              reduce using rule 222 (literal -> DOCSTRING .)
    GE              reduce using rule 222 (literal -> DOCSTRING .)
    REQUALTO        reduce using rule 222 (literal -> DOCSTRING .)
    BOOLOR          reduce using rule 222 (literal -> DOCSTRING .)
    BOOLAND         reduce using rule 222 (literal -> DOCSTRING .)
    OR              reduce using rule 222 (literal -> DOCSTRING .)
    AND             reduce using rule 222 (literal -> DOCSTRING .)
    CARET           reduce using rule 222 (literal -> DOCSTRING .)
    LPAREN          reduce using rule 222 (literal -> DOCSTRING .)
    LBRACKET        reduce using rule 222 (literal -> DOCSTRING .)
    QMARK           reduce using rule 222 (literal -> DOCSTRING .)
    DOT             reduce using rule 222 (literal -> DOCSTRING .)
    IS              reduce using rule 222 (literal -> DOCSTRING .)
    ISNOT           reduce using rule 222 (literal -> DOCSTRING .)
    IN              reduce using rule 222 (literal -> DOCSTRING .)
    NOTIN           reduce using rule 222 (literal -> DOCSTRING .)
    COMMA           reduce using rule 222 (literal -> DOCSTRING .)
    RBRACKET        reduce using rule 222 (literal -> DOCSTRING .)
    NL              reduce using rule 222 (literal -> DOCSTRING .)
    SEMICOLON       reduce using rule 222 (literal -> DOCSTRING .)
    RPAREN          reduce using rule 222 (literal -> DOCSTRING .)
    RCURLY          reduce using rule 222 (literal -> DOCSTRING .)
    DOTDOT          reduce using rule 222 (literal -> DOCSTRING .)
    error           reduce using rule 222 (literal -> DOCSTRING .)
    COLONCOLON      reduce using rule 222 (literal -> DOCSTRING .)


state 81

    (106) assignment -> member . assignment_operator expression
    (180) expression -> member .
    (107) assignment_operator -> . EQUALS
    (108) assignment_operator -> . PLUSEQU
    (109) assignment_operator -> . MINUSEQU
    (110) assignment_operator -> . TIMESEQU
    (111) assignment_operator -> . DIVEQU
    (112) assignment_operator -> . MODEQU
    (113) assignment_operator -> . BITANDEQU
    (114) assignment_operator -> . BITOREQU
    (115) assignment_operator -> . BITXOREQU
    (116) assignment_operator -> . LSHIFTEQU
    (117) assignment_operator -> . RSHIFTEQU
    (118) assignment_operator -> . POWEQU
    (119) assignment_operator -> . INTDIVEQU

    LPAREN          reduce using rule 180 (expression -> member .)
    LBRACKET        reduce using rule 180 (expression -> member .)
    DOT             reduce using rule 180 (expression -> member .)
    PLUS            reduce using rule 180 (expression -> member .)
    MINUS           reduce using rule 180 (expression -> member .)
    TIMES           reduce using rule 180 (expression -> member .)
    DIVIDE          reduce using rule 180 (expression -> member .)
    PERCENT         reduce using rule 180 (expression -> member .)
    INTDIV          reduce using rule 180 (expression -> member .)
    POW             reduce using rule 180 (expression -> member .)
    BITOR           reduce using rule 180 (expression -> member .)
    BITAND          reduce using rule 180 (expression -> member .)
    LSHIFT          reduce using rule 180 (expression -> member .)
    RSHIFT          reduce using rule 180 (expression -> member .)
    EQUALTO         reduce using rule 180 (expression -> member .)
    NEQUALTO        reduce using rule 180 (expression -> member .)
    LT              reduce using rule 180 (expression -> member .)
    LE              reduce using rule 180 (expression -> member .)
    GT              reduce using rule 180 (expression -> member .)
    GE              reduce using rule 180 (expression -> member .)
    REQUALTO        reduce using rule 180 (expression -> member .)
    BOOLOR          reduce using rule 180 (expression -> member .)
    BOOLAND         reduce using rule 180 (expression -> member .)
    OR              reduce using rule 180 (expression -> member .)
    AND             reduce using rule 180 (expression -> member .)
    CARET           reduce using rule 180 (expression -> member .)
    QMARK           reduce using rule 180 (expression -> member .)
    IS              reduce using rule 180 (expression -> member .)
    ISNOT           reduce using rule 180 (expression -> member .)
    IN              reduce using rule 180 (expression -> member .)
    NOTIN           reduce using rule 180 (expression -> member .)
    EQUALS          shift and go to state 129
    PLUSEQU         shift and go to state 135
    MINUSEQU        shift and go to state 139
    TIMESEQU        shift and go to state 137
    DIVEQU          shift and go to state 126
    MODEQU          shift and go to state 128
    BITANDEQU       shift and go to state 130
    BITOREQU        shift and go to state 136
    BITXOREQU       shift and go to state 134
    LSHIFTEQU       shift and go to state 127
    RSHIFTEQU       shift and go to state 132
    POWEQU          shift and go to state 131
    INTDIVEQU       shift and go to state 138

    assignment_operator            shift and go to state 196

state 82

    (210) expression -> EXMARK . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 197
    grouping                       shift and go to state 42

state 83

    (63) statement_simple -> assignment .

    NL              reduce using rule 63 (statement_simple -> assignment .)
    SEMICOLON       reduce using rule 63 (statement_simple -> assignment .)
    RPAREN          reduce using rule 63 (statement_simple -> assignment .)


state 84

    (135) yield -> YIELD . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 198
    grouping                       shift and go to state 42

state 85

    (182) expression -> membership .

    LPAREN          reduce using rule 182 (expression -> membership .)
    LBRACKET        reduce using rule 182 (expression -> membership .)
    DOT             reduce using rule 182 (expression -> membership .)
    PLUS            reduce using rule 182 (expression -> membership .)
    MINUS           reduce using rule 182 (expression -> membership .)
    TIMES           reduce using rule 182 (expression -> membership .)
    DIVIDE          reduce using rule 182 (expression -> membership .)
    PERCENT         reduce using rule 182 (expression -> membership .)
    INTDIV          reduce using rule 182 (expression -> membership .)
    POW             reduce using rule 182 (expression -> membership .)
    BITOR           reduce using rule 182 (expression -> membership .)
    BITAND          reduce using rule 182 (expression -> membership .)
    LSHIFT          reduce using rule 182 (expression -> membership .)
    RSHIFT          reduce using rule 182 (expression -> membership .)
    EQUALTO         reduce using rule 182 (expression -> membership .)
    NEQUALTO        reduce using rule 182 (expression -> membership .)
    LT              reduce using rule 182 (expression -> membership .)
    LE              reduce using rule 182 (expression -> membership .)
    GT              reduce using rule 182 (expression -> membership .)
    GE              reduce using rule 182 (expression -> membership .)
    REQUALTO        reduce using rule 182 (expression -> membership .)
    BOOLOR          reduce using rule 182 (expression -> membership .)
    BOOLAND         reduce using rule 182 (expression -> membership .)
    OR              reduce using rule 182 (expression -> membership .)
    AND             reduce using rule 182 (expression -> membership .)
    CARET           reduce using rule 182 (expression -> membership .)
    QMARK           reduce using rule 182 (expression -> membership .)
    IS              reduce using rule 182 (expression -> membership .)
    ISNOT           reduce using rule 182 (expression -> membership .)
    IN              reduce using rule 182 (expression -> membership .)
    NOTIN           reduce using rule 182 (expression -> membership .)
    COMMA           reduce using rule 182 (expression -> membership .)
    RPAREN          reduce using rule 182 (expression -> membership .)
    RBRACKET        reduce using rule 182 (expression -> membership .)
    NL              reduce using rule 182 (expression -> membership .)
    SEMICOLON       reduce using rule 182 (expression -> membership .)
    COLON           reduce using rule 182 (expression -> membership .)
    RCURLY          reduce using rule 182 (expression -> membership .)
    DOTDOT          reduce using rule 182 (expression -> membership .)
    error           reduce using rule 182 (expression -> membership .)
    COLONCOLON      reduce using rule 182 (expression -> membership .)


state 86

    (217) grouping -> LPAREN . expression RPAREN
    (231) tuple_literal -> LPAREN . tuplelist RPAREN
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (232) tuplelist -> . nonempty_tuple
    (233) tuplelist -> . empty
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (234) nonempty_tuple -> . singletontuple
    (235) nonempty_tuple -> . crosstuple
    (3) empty -> .
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY
    (236) singletontuple -> . nonempty_expressionlist COMMA
    (237) crosstuple -> . nonempty_expressionlist
    (215) nonempty_expressionlist -> . expression
    (216) nonempty_expressionlist -> . nonempty_expressionlist COMMA nonempty_expressionlist

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    RPAREN          reduce using rule 3 (empty -> .)
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    crosstuple                     shift and go to state 199
    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    singletontuple                 shift and go to state 200
    function_literal               shift and go to state 49
    tuplelist                      shift and go to state 201
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    empty                          shift and go to state 202
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    nonempty_tuple                 shift and go to state 204
    nonempty_expressionlist        shift and go to state 203
    ternary                        shift and go to state 92
    expression                     shift and go to state 205
    grouping                       shift and go to state 42

state 87

    (105) assignment -> variable . assignment_operator expression
    (183) expression -> variable .
    (107) assignment_operator -> . EQUALS
    (108) assignment_operator -> . PLUSEQU
    (109) assignment_operator -> . MINUSEQU
    (110) assignment_operator -> . TIMESEQU
    (111) assignment_operator -> . DIVEQU
    (112) assignment_operator -> . MODEQU
    (113) assignment_operator -> . BITANDEQU
    (114) assignment_operator -> . BITOREQU
    (115) assignment_operator -> . BITXOREQU
    (116) assignment_operator -> . LSHIFTEQU
    (117) assignment_operator -> . RSHIFTEQU
    (118) assignment_operator -> . POWEQU
    (119) assignment_operator -> . INTDIVEQU

    LPAREN          reduce using rule 183 (expression -> variable .)
    LBRACKET        reduce using rule 183 (expression -> variable .)
    DOT             reduce using rule 183 (expression -> variable .)
    PLUS            reduce using rule 183 (expression -> variable .)
    MINUS           reduce using rule 183 (expression -> variable .)
    TIMES           reduce using rule 183 (expression -> variable .)
    DIVIDE          reduce using rule 183 (expression -> variable .)
    PERCENT         reduce using rule 183 (expression -> variable .)
    INTDIV          reduce using rule 183 (expression -> variable .)
    POW             reduce using rule 183 (expression -> variable .)
    BITOR           reduce using rule 183 (expression -> variable .)
    BITAND          reduce using rule 183 (expression -> variable .)
    LSHIFT          reduce using rule 183 (expression -> variable .)
    RSHIFT          reduce using rule 183 (expression -> variable .)
    EQUALTO         reduce using rule 183 (expression -> variable .)
    NEQUALTO        reduce using rule 183 (expression -> variable .)
    LT              reduce using rule 183 (expression -> variable .)
    LE              reduce using rule 183 (expression -> variable .)
    GT              reduce using rule 183 (expression -> variable .)
    GE              reduce using rule 183 (expression -> variable .)
    REQUALTO        reduce using rule 183 (expression -> variable .)
    BOOLOR          reduce using rule 183 (expression -> variable .)
    BOOLAND         reduce using rule 183 (expression -> variable .)
    OR              reduce using rule 183 (expression -> variable .)
    AND             reduce using rule 183 (expression -> variable .)
    CARET           reduce using rule 183 (expression -> variable .)
    QMARK           reduce using rule 183 (expression -> variable .)
    IS              reduce using rule 183 (expression -> variable .)
    ISNOT           reduce using rule 183 (expression -> variable .)
    IN              reduce using rule 183 (expression -> variable .)
    NOTIN           reduce using rule 183 (expression -> variable .)
    EQUALS          shift and go to state 129
    PLUSEQU         shift and go to state 135
    MINUSEQU        shift and go to state 139
    TIMESEQU        shift and go to state 137
    DIVEQU          shift and go to state 126
    MODEQU          shift and go to state 128
    BITANDEQU       shift and go to state 130
    BITOREQU        shift and go to state 136
    BITXOREQU       shift and go to state 134
    LSHIFTEQU       shift and go to state 127
    RSHIFTEQU       shift and go to state 132
    POWEQU          shift and go to state 131
    INTDIVEQU       shift and go to state 138

    assignment_operator            shift and go to state 206

state 88

    (181) expression -> identity .

    LPAREN          reduce using rule 181 (expression -> identity .)
    LBRACKET        reduce using rule 181 (expression -> identity .)
    DOT             reduce using rule 181 (expression -> identity .)
    PLUS            reduce using rule 181 (expression -> identity .)
    MINUS           reduce using rule 181 (expression -> identity .)
    TIMES           reduce using rule 181 (expression -> identity .)
    DIVIDE          reduce using rule 181 (expression -> identity .)
    PERCENT         reduce using rule 181 (expression -> identity .)
    INTDIV          reduce using rule 181 (expression -> identity .)
    POW             reduce using rule 181 (expression -> identity .)
    BITOR           reduce using rule 181 (expression -> identity .)
    BITAND          reduce using rule 181 (expression -> identity .)
    LSHIFT          reduce using rule 181 (expression -> identity .)
    RSHIFT          reduce using rule 181 (expression -> identity .)
    EQUALTO         reduce using rule 181 (expression -> identity .)
    NEQUALTO        reduce using rule 181 (expression -> identity .)
    LT              reduce using rule 181 (expression -> identity .)
    LE              reduce using rule 181 (expression -> identity .)
    GT              reduce using rule 181 (expression -> identity .)
    GE              reduce using rule 181 (expression -> identity .)
    REQUALTO        reduce using rule 181 (expression -> identity .)
    BOOLOR          reduce using rule 181 (expression -> identity .)
    BOOLAND         reduce using rule 181 (expression -> identity .)
    OR              reduce using rule 181 (expression -> identity .)
    AND             reduce using rule 181 (expression -> identity .)
    CARET           reduce using rule 181 (expression -> identity .)
    QMARK           reduce using rule 181 (expression -> identity .)
    IS              reduce using rule 181 (expression -> identity .)
    ISNOT           reduce using rule 181 (expression -> identity .)
    IN              reduce using rule 181 (expression -> identity .)
    NOTIN           reduce using rule 181 (expression -> identity .)
    COMMA           reduce using rule 181 (expression -> identity .)
    RPAREN          reduce using rule 181 (expression -> identity .)
    RBRACKET        reduce using rule 181 (expression -> identity .)
    NL              reduce using rule 181 (expression -> identity .)
    SEMICOLON       reduce using rule 181 (expression -> identity .)
    COLON           reduce using rule 181 (expression -> identity .)
    RCURLY          reduce using rule 181 (expression -> identity .)
    DOTDOT          reduce using rule 181 (expression -> identity .)
    error           reduce using rule 181 (expression -> identity .)
    COLONCOLON      reduce using rule 181 (expression -> identity .)


state 89

    (82) conditional -> IF . expression COLON suite conditional_extension
    (269) conditional -> IF . error COLON suite conditional_extension
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 207
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    tuple_literal                  shift and go to state 31
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 208
    grouping                       shift and go to state 42

state 90

    (227) literal -> list_literal .

    COLON           reduce using rule 227 (literal -> list_literal .)
    PLUS            reduce using rule 227 (literal -> list_literal .)
    MINUS           reduce using rule 227 (literal -> list_literal .)
    TIMES           reduce using rule 227 (literal -> list_literal .)
    DIVIDE          reduce using rule 227 (literal -> list_literal .)
    PERCENT         reduce using rule 227 (literal -> list_literal .)
    INTDIV          reduce using rule 227 (literal -> list_literal .)
    POW             reduce using rule 227 (literal -> list_literal .)
    BITOR           reduce using rule 227 (literal -> list_literal .)
    BITAND          reduce using rule 227 (literal -> list_literal .)
    LSHIFT          reduce using rule 227 (literal -> list_literal .)
    RSHIFT          reduce using rule 227 (literal -> list_literal .)
    EQUALTO         reduce using rule 227 (literal -> list_literal .)
    NEQUALTO        reduce using rule 227 (literal -> list_literal .)
    LT              reduce using rule 227 (literal -> list_literal .)
    LE              reduce using rule 227 (literal -> list_literal .)
    GT              reduce using rule 227 (literal -> list_literal .)
    GE              reduce using rule 227 (literal -> list_literal .)
    REQUALTO        reduce using rule 227 (literal -> list_literal .)
    BOOLOR          reduce using rule 227 (literal -> list_literal .)
    BOOLAND         reduce using rule 227 (literal -> list_literal .)
    OR              reduce using rule 227 (literal -> list_literal .)
    AND             reduce using rule 227 (literal -> list_literal .)
    CARET           reduce using rule 227 (literal -> list_literal .)
    LPAREN          reduce using rule 227 (literal -> list_literal .)
    LBRACKET        reduce using rule 227 (literal -> list_literal .)
    QMARK           reduce using rule 227 (literal -> list_literal .)
    DOT             reduce using rule 227 (literal -> list_literal .)
    IS              reduce using rule 227 (literal -> list_literal .)
    ISNOT           reduce using rule 227 (literal -> list_literal .)
    IN              reduce using rule 227 (literal -> list_literal .)
    NOTIN           reduce using rule 227 (literal -> list_literal .)
    COMMA           reduce using rule 227 (literal -> list_literal .)
    RBRACKET        reduce using rule 227 (literal -> list_literal .)
    NL              reduce using rule 227 (literal -> list_literal .)
    SEMICOLON       reduce using rule 227 (literal -> list_literal .)
    RPAREN          reduce using rule 227 (literal -> list_literal .)
    RCURLY          reduce using rule 227 (literal -> list_literal .)
    DOTDOT          reduce using rule 227 (literal -> list_literal .)
    error           reduce using rule 227 (literal -> list_literal .)
    COLONCOLON      reduce using rule 227 (literal -> list_literal .)


state 91

    (62) statement_multi -> statement_simple .

    NL              reduce using rule 62 (statement_multi -> statement_simple .)
    SEMICOLON       reduce using rule 62 (statement_multi -> statement_simple .)


state 92

    (179) expression -> ternary .

    LPAREN          reduce using rule 179 (expression -> ternary .)
    LBRACKET        reduce using rule 179 (expression -> ternary .)
    DOT             reduce using rule 179 (expression -> ternary .)
    PLUS            reduce using rule 179 (expression -> ternary .)
    MINUS           reduce using rule 179 (expression -> ternary .)
    TIMES           reduce using rule 179 (expression -> ternary .)
    DIVIDE          reduce using rule 179 (expression -> ternary .)
    PERCENT         reduce using rule 179 (expression -> ternary .)
    INTDIV          reduce using rule 179 (expression -> ternary .)
    POW             reduce using rule 179 (expression -> ternary .)
    BITOR           reduce using rule 179 (expression -> ternary .)
    BITAND          reduce using rule 179 (expression -> ternary .)
    LSHIFT          reduce using rule 179 (expression -> ternary .)
    RSHIFT          reduce using rule 179 (expression -> ternary .)
    EQUALTO         reduce using rule 179 (expression -> ternary .)
    NEQUALTO        reduce using rule 179 (expression -> ternary .)
    LT              reduce using rule 179 (expression -> ternary .)
    LE              reduce using rule 179 (expression -> ternary .)
    GT              reduce using rule 179 (expression -> ternary .)
    GE              reduce using rule 179 (expression -> ternary .)
    REQUALTO        reduce using rule 179 (expression -> ternary .)
    BOOLOR          reduce using rule 179 (expression -> ternary .)
    BOOLAND         reduce using rule 179 (expression -> ternary .)
    OR              reduce using rule 179 (expression -> ternary .)
    AND             reduce using rule 179 (expression -> ternary .)
    CARET           reduce using rule 179 (expression -> ternary .)
    QMARK           reduce using rule 179 (expression -> ternary .)
    IS              reduce using rule 179 (expression -> ternary .)
    ISNOT           reduce using rule 179 (expression -> ternary .)
    IN              reduce using rule 179 (expression -> ternary .)
    NOTIN           reduce using rule 179 (expression -> ternary .)
    COMMA           reduce using rule 179 (expression -> ternary .)
    RPAREN          reduce using rule 179 (expression -> ternary .)
    RBRACKET        reduce using rule 179 (expression -> ternary .)
    NL              reduce using rule 179 (expression -> ternary .)
    SEMICOLON       reduce using rule 179 (expression -> ternary .)
    COLON           reduce using rule 179 (expression -> ternary .)
    RCURLY          reduce using rule 179 (expression -> ternary .)
    DOTDOT          reduce using rule 179 (expression -> ternary .)
    error           reduce using rule 179 (expression -> ternary .)
    COLONCOLON      reduce using rule 179 (expression -> ternary .)


state 93

    (24) declaration_suite -> PASS NL .

    IF              reduce using rule 24 (declaration_suite -> PASS NL .)
    TRY             reduce using rule 24 (declaration_suite -> PASS NL .)
    WHILE           reduce using rule 24 (declaration_suite -> PASS NL .)
    FOR             reduce using rule 24 (declaration_suite -> PASS NL .)
    CONTINUE        reduce using rule 24 (declaration_suite -> PASS NL .)
    BREAK           reduce using rule 24 (declaration_suite -> PASS NL .)
    PASS            reduce using rule 24 (declaration_suite -> PASS NL .)
    RETURN          reduce using rule 24 (declaration_suite -> PASS NL .)
    YIELD           reduce using rule 24 (declaration_suite -> PASS NL .)
    RAISE           reduce using rule 24 (declaration_suite -> PASS NL .)
    DEL             reduce using rule 24 (declaration_suite -> PASS NL .)
    IDENTIFIER      reduce using rule 24 (declaration_suite -> PASS NL .)
    MINUS           reduce using rule 24 (declaration_suite -> PASS NL .)
    PLUS            reduce using rule 24 (declaration_suite -> PASS NL .)
    TILDE           reduce using rule 24 (declaration_suite -> PASS NL .)
    EXMARK          reduce using rule 24 (declaration_suite -> PASS NL .)
    NOT             reduce using rule 24 (declaration_suite -> PASS NL .)
    ASSERT          reduce using rule 24 (declaration_suite -> PASS NL .)
    LPAREN          reduce using rule 24 (declaration_suite -> PASS NL .)
    INTLITERAL      reduce using rule 24 (declaration_suite -> PASS NL .)
    FLOATLITERAL    reduce using rule 24 (declaration_suite -> PASS NL .)
    BOOLLITERAL     reduce using rule 24 (declaration_suite -> PASS NL .)
    STRINGLITERAL   reduce using rule 24 (declaration_suite -> PASS NL .)
    DOCSTRING       reduce using rule 24 (declaration_suite -> PASS NL .)
    NONE            reduce using rule 24 (declaration_suite -> PASS NL .)
    LAMBDA          reduce using rule 24 (declaration_suite -> PASS NL .)
    LBRACKET        reduce using rule 24 (declaration_suite -> PASS NL .)
    LCURLY          reduce using rule 24 (declaration_suite -> PASS NL .)
    $end            reduce using rule 24 (declaration_suite -> PASS NL .)
    DEDENT          reduce using rule 24 (declaration_suite -> PASS NL .)


state 94

    (25) variableblock -> COLONCOLON nonempty_variableblock . COLONCOLON NL
    (28) nonempty_variableblock -> nonempty_variableblock . COMMA nonempty_variableblock

    COLONCOLON      shift and go to state 209
    COMMA           shift and go to state 210


state 95

    (252) variableblock -> COLONCOLON error . COLONCOLON NL

    COLONCOLON      shift and go to state 211


state 96

    (27) nonempty_variableblock -> declaration .

    COMMA           reduce using rule 27 (nonempty_variableblock -> declaration .)
    COLONCOLON      reduce using rule 27 (nonempty_variableblock -> declaration .)


state 97

    (29) declaration -> IDENTIFIER . COLON type
    (30) declaration -> IDENTIFIER . COLON type EQUALS expression
    (253) declaration -> IDENTIFIER . COLON error EQUALS expression

    COLON           shift and go to state 212


state 98

    (26) variableblock -> empty empty .

    CLASS           reduce using rule 26 (variableblock -> empty empty .)
    DEF             reduce using rule 26 (variableblock -> empty empty .)
    DEDENT          reduce using rule 26 (variableblock -> empty empty .)
    IF              reduce using rule 26 (variableblock -> empty empty .)
    TRY             reduce using rule 26 (variableblock -> empty empty .)
    WHILE           reduce using rule 26 (variableblock -> empty empty .)
    FOR             reduce using rule 26 (variableblock -> empty empty .)
    CONTINUE        reduce using rule 26 (variableblock -> empty empty .)
    BREAK           reduce using rule 26 (variableblock -> empty empty .)
    PASS            reduce using rule 26 (variableblock -> empty empty .)
    RETURN          reduce using rule 26 (variableblock -> empty empty .)
    YIELD           reduce using rule 26 (variableblock -> empty empty .)
    RAISE           reduce using rule 26 (variableblock -> empty empty .)
    DEL             reduce using rule 26 (variableblock -> empty empty .)
    IDENTIFIER      reduce using rule 26 (variableblock -> empty empty .)
    MINUS           reduce using rule 26 (variableblock -> empty empty .)
    PLUS            reduce using rule 26 (variableblock -> empty empty .)
    TILDE           reduce using rule 26 (variableblock -> empty empty .)
    EXMARK          reduce using rule 26 (variableblock -> empty empty .)
    NOT             reduce using rule 26 (variableblock -> empty empty .)
    ASSERT          reduce using rule 26 (variableblock -> empty empty .)
    LPAREN          reduce using rule 26 (variableblock -> empty empty .)
    INTLITERAL      reduce using rule 26 (variableblock -> empty empty .)
    FLOATLITERAL    reduce using rule 26 (variableblock -> empty empty .)
    BOOLLITERAL     reduce using rule 26 (variableblock -> empty empty .)
    STRINGLITERAL   reduce using rule 26 (variableblock -> empty empty .)
    DOCSTRING       reduce using rule 26 (variableblock -> empty empty .)
    NONE            reduce using rule 26 (variableblock -> empty empty .)
    LAMBDA          reduce using rule 26 (variableblock -> empty empty .)
    LBRACKET        reduce using rule 26 (variableblock -> empty empty .)
    LCURLY          reduce using rule 26 (variableblock -> empty empty .)
    $end            reduce using rule 26 (variableblock -> empty empty .)


state 99

    (20) pyimport_statement -> PYIMPORT IDENTIFIER AS . IDENTIFIER NL

    IDENTIFIER      shift and go to state 213


state 100

    (19) pyimport_statement -> PYIMPORT IDENTIFIER NL .

    IMPORT          reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    FROM            reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    PYIMPORT        reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    PASS            reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    COLONCOLON      reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    IF              reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    TRY             reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    WHILE           reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    FOR             reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    CONTINUE        reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    BREAK           reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    RETURN          reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    YIELD           reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    RAISE           reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    DEL             reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    IDENTIFIER      reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    MINUS           reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    PLUS            reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    TILDE           reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    EXMARK          reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    NOT             reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    ASSERT          reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    LPAREN          reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    INTLITERAL      reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    FLOATLITERAL    reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    BOOLLITERAL     reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    STRINGLITERAL   reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    DOCSTRING       reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    NONE            reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    LAMBDA          reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    LBRACKET        reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    LCURLY          reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    CLASS           reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    DEF             reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)
    $end            reduce using rule 19 (pyimport_statement -> PYIMPORT IDENTIFIER NL .)


state 101

    (14) import_statement -> FROM IDENTIFIER IMPORT . TIMES NL
    (15) import_statement -> FROM IDENTIFIER IMPORT . importlist NL
    (16) importlist -> . IDENTIFIER
    (17) importlist -> . IDENTIFIER AS IDENTIFIER
    (18) importlist -> . importlist COMMA importlist

    TIMES           shift and go to state 215
    IDENTIFIER      shift and go to state 216

    importlist                     shift and go to state 214

state 102

    (21) pyimport_statement -> FROM IDENTIFIER PYIMPORT . TIMES NL
    (22) pyimport_statement -> FROM IDENTIFIER PYIMPORT . importlist NL
    (16) importlist -> . IDENTIFIER
    (17) importlist -> . IDENTIFIER AS IDENTIFIER
    (18) importlist -> . importlist COMMA importlist

    TIMES           shift and go to state 218
    IDENTIFIER      shift and go to state 216

    importlist                     shift and go to state 217

state 103

    (13) import_statement -> IMPORT IDENTIFIER AS . IDENTIFIER NL

    IDENTIFIER      shift and go to state 219


state 104

    (12) import_statement -> IMPORT IDENTIFIER NL .

    IMPORT          reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    FROM            reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    PYIMPORT        reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    PASS            reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    COLONCOLON      reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    IF              reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    TRY             reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    WHILE           reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    FOR             reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    CONTINUE        reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    BREAK           reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    RETURN          reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    YIELD           reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    RAISE           reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    DEL             reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    IDENTIFIER      reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    MINUS           reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    PLUS            reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    TILDE           reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    EXMARK          reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    NOT             reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    ASSERT          reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    LPAREN          reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    INTLITERAL      reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    FLOATLITERAL    reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    BOOLLITERAL     reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    STRINGLITERAL   reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    DOCSTRING       reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    NONE            reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    LAMBDA          reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    LBRACKET        reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    LCURLY          reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    CLASS           reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    DEF             reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)
    $end            reduce using rule 12 (import_statement -> IMPORT IDENTIFIER NL .)


state 105

    (31) classblock -> class_definition classblock .

    DEF             reduce using rule 31 (classblock -> class_definition classblock .)
    IF              reduce using rule 31 (classblock -> class_definition classblock .)
    TRY             reduce using rule 31 (classblock -> class_definition classblock .)
    WHILE           reduce using rule 31 (classblock -> class_definition classblock .)
    FOR             reduce using rule 31 (classblock -> class_definition classblock .)
    CONTINUE        reduce using rule 31 (classblock -> class_definition classblock .)
    BREAK           reduce using rule 31 (classblock -> class_definition classblock .)
    PASS            reduce using rule 31 (classblock -> class_definition classblock .)
    RETURN          reduce using rule 31 (classblock -> class_definition classblock .)
    YIELD           reduce using rule 31 (classblock -> class_definition classblock .)
    RAISE           reduce using rule 31 (classblock -> class_definition classblock .)
    DEL             reduce using rule 31 (classblock -> class_definition classblock .)
    IDENTIFIER      reduce using rule 31 (classblock -> class_definition classblock .)
    MINUS           reduce using rule 31 (classblock -> class_definition classblock .)
    PLUS            reduce using rule 31 (classblock -> class_definition classblock .)
    TILDE           reduce using rule 31 (classblock -> class_definition classblock .)
    EXMARK          reduce using rule 31 (classblock -> class_definition classblock .)
    NOT             reduce using rule 31 (classblock -> class_definition classblock .)
    ASSERT          reduce using rule 31 (classblock -> class_definition classblock .)
    LPAREN          reduce using rule 31 (classblock -> class_definition classblock .)
    INTLITERAL      reduce using rule 31 (classblock -> class_definition classblock .)
    FLOATLITERAL    reduce using rule 31 (classblock -> class_definition classblock .)
    BOOLLITERAL     reduce using rule 31 (classblock -> class_definition classblock .)
    STRINGLITERAL   reduce using rule 31 (classblock -> class_definition classblock .)
    DOCSTRING       reduce using rule 31 (classblock -> class_definition classblock .)
    NONE            reduce using rule 31 (classblock -> class_definition classblock .)
    LAMBDA          reduce using rule 31 (classblock -> class_definition classblock .)
    LBRACKET        reduce using rule 31 (classblock -> class_definition classblock .)
    LCURLY          reduce using rule 31 (classblock -> class_definition classblock .)
    $end            reduce using rule 31 (classblock -> class_definition classblock .)
    DEDENT          reduce using rule 31 (classblock -> class_definition classblock .)


state 106

    (39) subroutine_definition -> function_definition .

    DEF             reduce using rule 39 (subroutine_definition -> function_definition .)
    IF              reduce using rule 39 (subroutine_definition -> function_definition .)
    TRY             reduce using rule 39 (subroutine_definition -> function_definition .)
    WHILE           reduce using rule 39 (subroutine_definition -> function_definition .)
    FOR             reduce using rule 39 (subroutine_definition -> function_definition .)
    CONTINUE        reduce using rule 39 (subroutine_definition -> function_definition .)
    BREAK           reduce using rule 39 (subroutine_definition -> function_definition .)
    PASS            reduce using rule 39 (subroutine_definition -> function_definition .)
    RETURN          reduce using rule 39 (subroutine_definition -> function_definition .)
    YIELD           reduce using rule 39 (subroutine_definition -> function_definition .)
    RAISE           reduce using rule 39 (subroutine_definition -> function_definition .)
    DEL             reduce using rule 39 (subroutine_definition -> function_definition .)
    IDENTIFIER      reduce using rule 39 (subroutine_definition -> function_definition .)
    MINUS           reduce using rule 39 (subroutine_definition -> function_definition .)
    PLUS            reduce using rule 39 (subroutine_definition -> function_definition .)
    TILDE           reduce using rule 39 (subroutine_definition -> function_definition .)
    EXMARK          reduce using rule 39 (subroutine_definition -> function_definition .)
    NOT             reduce using rule 39 (subroutine_definition -> function_definition .)
    ASSERT          reduce using rule 39 (subroutine_definition -> function_definition .)
    LPAREN          reduce using rule 39 (subroutine_definition -> function_definition .)
    INTLITERAL      reduce using rule 39 (subroutine_definition -> function_definition .)
    FLOATLITERAL    reduce using rule 39 (subroutine_definition -> function_definition .)
    BOOLLITERAL     reduce using rule 39 (subroutine_definition -> function_definition .)
    STRINGLITERAL   reduce using rule 39 (subroutine_definition -> function_definition .)
    DOCSTRING       reduce using rule 39 (subroutine_definition -> function_definition .)
    NONE            reduce using rule 39 (subroutine_definition -> function_definition .)
    LAMBDA          reduce using rule 39 (subroutine_definition -> function_definition .)
    LBRACKET        reduce using rule 39 (subroutine_definition -> function_definition .)
    LCURLY          reduce using rule 39 (subroutine_definition -> function_definition .)
    $end            reduce using rule 39 (subroutine_definition -> function_definition .)
    DEDENT          reduce using rule 39 (subroutine_definition -> function_definition .)


state 107

    (37) methodblock -> subroutine_definition . methodblock
    (37) methodblock -> . subroutine_definition methodblock
    (38) methodblock -> . empty
    (39) subroutine_definition -> . function_definition
    (40) subroutine_definition -> . procedure_definition
    (3) empty -> .
    (41) function_definition -> . DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite
    (256) function_definition -> . DEF error LPAREN argumentlist RPAREN ARROW type COLON suite
    (257) function_definition -> . DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite
    (258) function_definition -> . DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite
    (42) procedure_definition -> . DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite
    (259) procedure_definition -> . DEF error LPAREN argumentlist RPAREN COLON suite
    (260) procedure_definition -> . DEF IDENTIFIER LPAREN argumentlist error COLON suite

    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)
    DEF             shift and go to state 108

    function_definition            shift and go to state 106
    subroutine_definition          shift and go to state 107
    methodblock                    shift and go to state 220
    procedure_definition           shift and go to state 110
    empty                          shift and go to state 111

state 108

    (41) function_definition -> DEF . IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite
    (256) function_definition -> DEF . error LPAREN argumentlist RPAREN ARROW type COLON suite
    (257) function_definition -> DEF . IDENTIFIER LPAREN argumentlist error ARROW type COLON suite
    (258) function_definition -> DEF . IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite
    (42) procedure_definition -> DEF . IDENTIFIER LPAREN argumentlist RPAREN COLON suite
    (259) procedure_definition -> DEF . error LPAREN argumentlist RPAREN COLON suite
    (260) procedure_definition -> DEF . IDENTIFIER LPAREN argumentlist error COLON suite

    IDENTIFIER      shift and go to state 222
    error           shift and go to state 221


state 109

    (23) declaration_suite -> variableblock classblock methodblock .

    IF              reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    TRY             reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    WHILE           reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    FOR             reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    CONTINUE        reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    BREAK           reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    PASS            reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    RETURN          reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    YIELD           reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    RAISE           reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    DEL             reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    IDENTIFIER      reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    MINUS           reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    PLUS            reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    TILDE           reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    EXMARK          reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    NOT             reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    ASSERT          reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    LPAREN          reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    INTLITERAL      reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    FLOATLITERAL    reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    BOOLLITERAL     reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    STRINGLITERAL   reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    DOCSTRING       reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    NONE            reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    LAMBDA          reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    LBRACKET        reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    LCURLY          reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    $end            reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)
    DEDENT          reduce using rule 23 (declaration_suite -> variableblock classblock methodblock .)


state 110

    (40) subroutine_definition -> procedure_definition .

    DEF             reduce using rule 40 (subroutine_definition -> procedure_definition .)
    IF              reduce using rule 40 (subroutine_definition -> procedure_definition .)
    TRY             reduce using rule 40 (subroutine_definition -> procedure_definition .)
    WHILE           reduce using rule 40 (subroutine_definition -> procedure_definition .)
    FOR             reduce using rule 40 (subroutine_definition -> procedure_definition .)
    CONTINUE        reduce using rule 40 (subroutine_definition -> procedure_definition .)
    BREAK           reduce using rule 40 (subroutine_definition -> procedure_definition .)
    PASS            reduce using rule 40 (subroutine_definition -> procedure_definition .)
    RETURN          reduce using rule 40 (subroutine_definition -> procedure_definition .)
    YIELD           reduce using rule 40 (subroutine_definition -> procedure_definition .)
    RAISE           reduce using rule 40 (subroutine_definition -> procedure_definition .)
    DEL             reduce using rule 40 (subroutine_definition -> procedure_definition .)
    IDENTIFIER      reduce using rule 40 (subroutine_definition -> procedure_definition .)
    MINUS           reduce using rule 40 (subroutine_definition -> procedure_definition .)
    PLUS            reduce using rule 40 (subroutine_definition -> procedure_definition .)
    TILDE           reduce using rule 40 (subroutine_definition -> procedure_definition .)
    EXMARK          reduce using rule 40 (subroutine_definition -> procedure_definition .)
    NOT             reduce using rule 40 (subroutine_definition -> procedure_definition .)
    ASSERT          reduce using rule 40 (subroutine_definition -> procedure_definition .)
    LPAREN          reduce using rule 40 (subroutine_definition -> procedure_definition .)
    INTLITERAL      reduce using rule 40 (subroutine_definition -> procedure_definition .)
    FLOATLITERAL    reduce using rule 40 (subroutine_definition -> procedure_definition .)
    BOOLLITERAL     reduce using rule 40 (subroutine_definition -> procedure_definition .)
    STRINGLITERAL   reduce using rule 40 (subroutine_definition -> procedure_definition .)
    DOCSTRING       reduce using rule 40 (subroutine_definition -> procedure_definition .)
    NONE            reduce using rule 40 (subroutine_definition -> procedure_definition .)
    LAMBDA          reduce using rule 40 (subroutine_definition -> procedure_definition .)
    LBRACKET        reduce using rule 40 (subroutine_definition -> procedure_definition .)
    LCURLY          reduce using rule 40 (subroutine_definition -> procedure_definition .)
    $end            reduce using rule 40 (subroutine_definition -> procedure_definition .)
    DEDENT          reduce using rule 40 (subroutine_definition -> procedure_definition .)


state 111

    (38) methodblock -> empty .

    IF              reduce using rule 38 (methodblock -> empty .)
    TRY             reduce using rule 38 (methodblock -> empty .)
    WHILE           reduce using rule 38 (methodblock -> empty .)
    FOR             reduce using rule 38 (methodblock -> empty .)
    CONTINUE        reduce using rule 38 (methodblock -> empty .)
    BREAK           reduce using rule 38 (methodblock -> empty .)
    PASS            reduce using rule 38 (methodblock -> empty .)
    RETURN          reduce using rule 38 (methodblock -> empty .)
    YIELD           reduce using rule 38 (methodblock -> empty .)
    RAISE           reduce using rule 38 (methodblock -> empty .)
    DEL             reduce using rule 38 (methodblock -> empty .)
    IDENTIFIER      reduce using rule 38 (methodblock -> empty .)
    MINUS           reduce using rule 38 (methodblock -> empty .)
    PLUS            reduce using rule 38 (methodblock -> empty .)
    TILDE           reduce using rule 38 (methodblock -> empty .)
    EXMARK          reduce using rule 38 (methodblock -> empty .)
    NOT             reduce using rule 38 (methodblock -> empty .)
    ASSERT          reduce using rule 38 (methodblock -> empty .)
    LPAREN          reduce using rule 38 (methodblock -> empty .)
    INTLITERAL      reduce using rule 38 (methodblock -> empty .)
    FLOATLITERAL    reduce using rule 38 (methodblock -> empty .)
    BOOLLITERAL     reduce using rule 38 (methodblock -> empty .)
    STRINGLITERAL   reduce using rule 38 (methodblock -> empty .)
    DOCSTRING       reduce using rule 38 (methodblock -> empty .)
    NONE            reduce using rule 38 (methodblock -> empty .)
    LAMBDA          reduce using rule 38 (methodblock -> empty .)
    LBRACKET        reduce using rule 38 (methodblock -> empty .)
    LCURLY          reduce using rule 38 (methodblock -> empty .)
    $end            reduce using rule 38 (methodblock -> empty .)
    DEDENT          reduce using rule 38 (methodblock -> empty .)


state 112

    (33) class_definition -> CLASS IDENTIFIER . opt_extends COLON NL INDENT class_suite DEDENT
    (254) class_definition -> CLASS IDENTIFIER . opt_extends error NL INDENT class_suite DEDENT
    (255) class_definition -> CLASS IDENTIFIER . opt_extends COLON NL INDENT error DEDENT
    (35) opt_extends -> . EXTENDS type
    (36) opt_extends -> . empty empty
    (3) empty -> .

    EXTENDS         shift and go to state 224
    COLON           reduce using rule 3 (empty -> .)
    error           reduce using rule 3 (empty -> .)

    empty                          shift and go to state 225
    opt_extends                    shift and go to state 223

state 113

    (238) list_literal -> LBRACKET expressionlist . RBRACKET

    RBRACKET        shift and go to state 226


state 114

    (180) expression -> member .

    PLUS            reduce using rule 180 (expression -> member .)
    MINUS           reduce using rule 180 (expression -> member .)
    TIMES           reduce using rule 180 (expression -> member .)
    DIVIDE          reduce using rule 180 (expression -> member .)
    PERCENT         reduce using rule 180 (expression -> member .)
    INTDIV          reduce using rule 180 (expression -> member .)
    POW             reduce using rule 180 (expression -> member .)
    BITOR           reduce using rule 180 (expression -> member .)
    BITAND          reduce using rule 180 (expression -> member .)
    LSHIFT          reduce using rule 180 (expression -> member .)
    RSHIFT          reduce using rule 180 (expression -> member .)
    EQUALTO         reduce using rule 180 (expression -> member .)
    NEQUALTO        reduce using rule 180 (expression -> member .)
    LT              reduce using rule 180 (expression -> member .)
    LE              reduce using rule 180 (expression -> member .)
    GT              reduce using rule 180 (expression -> member .)
    GE              reduce using rule 180 (expression -> member .)
    REQUALTO        reduce using rule 180 (expression -> member .)
    BOOLOR          reduce using rule 180 (expression -> member .)
    BOOLAND         reduce using rule 180 (expression -> member .)
    OR              reduce using rule 180 (expression -> member .)
    AND             reduce using rule 180 (expression -> member .)
    CARET           reduce using rule 180 (expression -> member .)
    LPAREN          reduce using rule 180 (expression -> member .)
    LBRACKET        reduce using rule 180 (expression -> member .)
    QMARK           reduce using rule 180 (expression -> member .)
    DOT             reduce using rule 180 (expression -> member .)
    IS              reduce using rule 180 (expression -> member .)
    ISNOT           reduce using rule 180 (expression -> member .)
    IN              reduce using rule 180 (expression -> member .)
    NOTIN           reduce using rule 180 (expression -> member .)
    COMMA           reduce using rule 180 (expression -> member .)
    RPAREN          reduce using rule 180 (expression -> member .)
    RBRACKET        reduce using rule 180 (expression -> member .)
    NL              reduce using rule 180 (expression -> member .)
    SEMICOLON       reduce using rule 180 (expression -> member .)
    COLON           reduce using rule 180 (expression -> member .)
    RCURLY          reduce using rule 180 (expression -> member .)
    DOTDOT          reduce using rule 180 (expression -> member .)
    error           reduce using rule 180 (expression -> member .)
    COLONCOLON      reduce using rule 180 (expression -> member .)


state 115

    (213) expressionlist -> nonempty_expressionlist .
    (216) nonempty_expressionlist -> nonempty_expressionlist . COMMA nonempty_expressionlist

    RPAREN          reduce using rule 213 (expressionlist -> nonempty_expressionlist .)
    RBRACKET        reduce using rule 213 (expressionlist -> nonempty_expressionlist .)
    COMMA           shift and go to state 227


state 116

    (177) expression -> indexing .

    PLUS            reduce using rule 177 (expression -> indexing .)
    MINUS           reduce using rule 177 (expression -> indexing .)
    TIMES           reduce using rule 177 (expression -> indexing .)
    DIVIDE          reduce using rule 177 (expression -> indexing .)
    PERCENT         reduce using rule 177 (expression -> indexing .)
    INTDIV          reduce using rule 177 (expression -> indexing .)
    POW             reduce using rule 177 (expression -> indexing .)
    BITOR           reduce using rule 177 (expression -> indexing .)
    BITAND          reduce using rule 177 (expression -> indexing .)
    LSHIFT          reduce using rule 177 (expression -> indexing .)
    RSHIFT          reduce using rule 177 (expression -> indexing .)
    EQUALTO         reduce using rule 177 (expression -> indexing .)
    NEQUALTO        reduce using rule 177 (expression -> indexing .)
    LT              reduce using rule 177 (expression -> indexing .)
    LE              reduce using rule 177 (expression -> indexing .)
    GT              reduce using rule 177 (expression -> indexing .)
    GE              reduce using rule 177 (expression -> indexing .)
    REQUALTO        reduce using rule 177 (expression -> indexing .)
    BOOLOR          reduce using rule 177 (expression -> indexing .)
    BOOLAND         reduce using rule 177 (expression -> indexing .)
    OR              reduce using rule 177 (expression -> indexing .)
    AND             reduce using rule 177 (expression -> indexing .)
    CARET           reduce using rule 177 (expression -> indexing .)
    LPAREN          reduce using rule 177 (expression -> indexing .)
    LBRACKET        reduce using rule 177 (expression -> indexing .)
    QMARK           reduce using rule 177 (expression -> indexing .)
    DOT             reduce using rule 177 (expression -> indexing .)
    IS              reduce using rule 177 (expression -> indexing .)
    ISNOT           reduce using rule 177 (expression -> indexing .)
    IN              reduce using rule 177 (expression -> indexing .)
    NOTIN           reduce using rule 177 (expression -> indexing .)
    COMMA           reduce using rule 177 (expression -> indexing .)
    RPAREN          reduce using rule 177 (expression -> indexing .)
    RBRACKET        reduce using rule 177 (expression -> indexing .)
    NL              reduce using rule 177 (expression -> indexing .)
    SEMICOLON       reduce using rule 177 (expression -> indexing .)
    COLON           reduce using rule 177 (expression -> indexing .)
    RCURLY          reduce using rule 177 (expression -> indexing .)
    DOTDOT          reduce using rule 177 (expression -> indexing .)
    error           reduce using rule 177 (expression -> indexing .)
    COLONCOLON      reduce using rule 177 (expression -> indexing .)


state 117

    (178) expression -> slicing .

    PLUS            reduce using rule 178 (expression -> slicing .)
    MINUS           reduce using rule 178 (expression -> slicing .)
    TIMES           reduce using rule 178 (expression -> slicing .)
    DIVIDE          reduce using rule 178 (expression -> slicing .)
    PERCENT         reduce using rule 178 (expression -> slicing .)
    INTDIV          reduce using rule 178 (expression -> slicing .)
    POW             reduce using rule 178 (expression -> slicing .)
    BITOR           reduce using rule 178 (expression -> slicing .)
    BITAND          reduce using rule 178 (expression -> slicing .)
    LSHIFT          reduce using rule 178 (expression -> slicing .)
    RSHIFT          reduce using rule 178 (expression -> slicing .)
    EQUALTO         reduce using rule 178 (expression -> slicing .)
    NEQUALTO        reduce using rule 178 (expression -> slicing .)
    LT              reduce using rule 178 (expression -> slicing .)
    LE              reduce using rule 178 (expression -> slicing .)
    GT              reduce using rule 178 (expression -> slicing .)
    GE              reduce using rule 178 (expression -> slicing .)
    REQUALTO        reduce using rule 178 (expression -> slicing .)
    BOOLOR          reduce using rule 178 (expression -> slicing .)
    BOOLAND         reduce using rule 178 (expression -> slicing .)
    OR              reduce using rule 178 (expression -> slicing .)
    AND             reduce using rule 178 (expression -> slicing .)
    CARET           reduce using rule 178 (expression -> slicing .)
    LPAREN          reduce using rule 178 (expression -> slicing .)
    LBRACKET        reduce using rule 178 (expression -> slicing .)
    QMARK           reduce using rule 178 (expression -> slicing .)
    DOT             reduce using rule 178 (expression -> slicing .)
    IS              reduce using rule 178 (expression -> slicing .)
    ISNOT           reduce using rule 178 (expression -> slicing .)
    IN              reduce using rule 178 (expression -> slicing .)
    NOTIN           reduce using rule 178 (expression -> slicing .)
    COMMA           reduce using rule 178 (expression -> slicing .)
    RPAREN          reduce using rule 178 (expression -> slicing .)
    RBRACKET        reduce using rule 178 (expression -> slicing .)
    NL              reduce using rule 178 (expression -> slicing .)
    SEMICOLON       reduce using rule 178 (expression -> slicing .)
    COLON           reduce using rule 178 (expression -> slicing .)
    RCURLY          reduce using rule 178 (expression -> slicing .)
    DOTDOT          reduce using rule 178 (expression -> slicing .)
    error           reduce using rule 178 (expression -> slicing .)
    COLONCOLON      reduce using rule 178 (expression -> slicing .)


state 118

    (183) expression -> variable .

    PLUS            reduce using rule 183 (expression -> variable .)
    MINUS           reduce using rule 183 (expression -> variable .)
    TIMES           reduce using rule 183 (expression -> variable .)
    DIVIDE          reduce using rule 183 (expression -> variable .)
    PERCENT         reduce using rule 183 (expression -> variable .)
    INTDIV          reduce using rule 183 (expression -> variable .)
    POW             reduce using rule 183 (expression -> variable .)
    BITOR           reduce using rule 183 (expression -> variable .)
    BITAND          reduce using rule 183 (expression -> variable .)
    LSHIFT          reduce using rule 183 (expression -> variable .)
    RSHIFT          reduce using rule 183 (expression -> variable .)
    EQUALTO         reduce using rule 183 (expression -> variable .)
    NEQUALTO        reduce using rule 183 (expression -> variable .)
    LT              reduce using rule 183 (expression -> variable .)
    LE              reduce using rule 183 (expression -> variable .)
    GT              reduce using rule 183 (expression -> variable .)
    GE              reduce using rule 183 (expression -> variable .)
    REQUALTO        reduce using rule 183 (expression -> variable .)
    BOOLOR          reduce using rule 183 (expression -> variable .)
    BOOLAND         reduce using rule 183 (expression -> variable .)
    OR              reduce using rule 183 (expression -> variable .)
    AND             reduce using rule 183 (expression -> variable .)
    CARET           reduce using rule 183 (expression -> variable .)
    LPAREN          reduce using rule 183 (expression -> variable .)
    LBRACKET        reduce using rule 183 (expression -> variable .)
    QMARK           reduce using rule 183 (expression -> variable .)
    DOT             reduce using rule 183 (expression -> variable .)
    IS              reduce using rule 183 (expression -> variable .)
    ISNOT           reduce using rule 183 (expression -> variable .)
    IN              reduce using rule 183 (expression -> variable .)
    NOTIN           reduce using rule 183 (expression -> variable .)
    COMMA           reduce using rule 183 (expression -> variable .)
    RPAREN          reduce using rule 183 (expression -> variable .)
    RBRACKET        reduce using rule 183 (expression -> variable .)
    NL              reduce using rule 183 (expression -> variable .)
    SEMICOLON       reduce using rule 183 (expression -> variable .)
    COLON           reduce using rule 183 (expression -> variable .)
    RCURLY          reduce using rule 183 (expression -> variable .)
    DOTDOT          reduce using rule 183 (expression -> variable .)
    error           reduce using rule 183 (expression -> variable .)
    COLONCOLON      reduce using rule 183 (expression -> variable .)


state 119

    (214) expressionlist -> empty .

    RPAREN          reduce using rule 214 (expressionlist -> empty .)
    RBRACKET        reduce using rule 214 (expressionlist -> empty .)


state 120

    (291) list_literal -> LBRACKET error . RBRACKET

    RBRACKET        shift and go to state 228


state 121

    (215) nonempty_expressionlist -> expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COMMA           reduce using rule 215 (nonempty_expressionlist -> expression .)
    RPAREN          reduce using rule 215 (nonempty_expressionlist -> expression .)
    RBRACKET        reduce using rule 215 (nonempty_expressionlist -> expression .)
    RCURLY          reduce using rule 215 (nonempty_expressionlist -> expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 122

    (207) expression -> MINUS expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 207 (expression -> MINUS expression .)
    MINUS           reduce using rule 207 (expression -> MINUS expression .)
    TIMES           reduce using rule 207 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 207 (expression -> MINUS expression .)
    PERCENT         reduce using rule 207 (expression -> MINUS expression .)
    INTDIV          reduce using rule 207 (expression -> MINUS expression .)
    BITOR           reduce using rule 207 (expression -> MINUS expression .)
    BITAND          reduce using rule 207 (expression -> MINUS expression .)
    LSHIFT          reduce using rule 207 (expression -> MINUS expression .)
    RSHIFT          reduce using rule 207 (expression -> MINUS expression .)
    EQUALTO         reduce using rule 207 (expression -> MINUS expression .)
    NEQUALTO        reduce using rule 207 (expression -> MINUS expression .)
    LT              reduce using rule 207 (expression -> MINUS expression .)
    LE              reduce using rule 207 (expression -> MINUS expression .)
    GT              reduce using rule 207 (expression -> MINUS expression .)
    GE              reduce using rule 207 (expression -> MINUS expression .)
    REQUALTO        reduce using rule 207 (expression -> MINUS expression .)
    BOOLOR          reduce using rule 207 (expression -> MINUS expression .)
    BOOLAND         reduce using rule 207 (expression -> MINUS expression .)
    OR              reduce using rule 207 (expression -> MINUS expression .)
    AND             reduce using rule 207 (expression -> MINUS expression .)
    CARET           reduce using rule 207 (expression -> MINUS expression .)
    QMARK           reduce using rule 207 (expression -> MINUS expression .)
    IS              reduce using rule 207 (expression -> MINUS expression .)
    ISNOT           reduce using rule 207 (expression -> MINUS expression .)
    IN              reduce using rule 207 (expression -> MINUS expression .)
    NOTIN           reduce using rule 207 (expression -> MINUS expression .)
    COMMA           reduce using rule 207 (expression -> MINUS expression .)
    RPAREN          reduce using rule 207 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 207 (expression -> MINUS expression .)
    NL              reduce using rule 207 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 207 (expression -> MINUS expression .)
    COLON           reduce using rule 207 (expression -> MINUS expression .)
    RCURLY          reduce using rule 207 (expression -> MINUS expression .)
    DOTDOT          reduce using rule 207 (expression -> MINUS expression .)
    error           reduce using rule 207 (expression -> MINUS expression .)
    COLONCOLON      reduce using rule 207 (expression -> MINUS expression .)
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 207 (expression -> MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 207 (expression -> MINUS expression .) ]
  ! DOT             [ reduce using rule 207 (expression -> MINUS expression .) ]
  ! POW             [ reduce using rule 207 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! TIMES           [ shift and go to state 171 ]
  ! DIVIDE          [ shift and go to state 166 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! INTDIV          [ shift and go to state 151 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 123

    (55) nonempty_block -> statement_complex nonempty_block .

    DEDENT          reduce using rule 55 (nonempty_block -> statement_complex nonempty_block .)
    $end            reduce using rule 55 (nonempty_block -> statement_complex nonempty_block .)


state 124

    (54) nonempty_block -> statement_complex empty .

    DEDENT          reduce using rule 54 (nonempty_block -> statement_complex empty .)
    $end            reduce using rule 54 (nonempty_block -> statement_complex empty .)


state 125

    (208) expression -> PLUS expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 208 (expression -> PLUS expression .)
    MINUS           reduce using rule 208 (expression -> PLUS expression .)
    TIMES           reduce using rule 208 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 208 (expression -> PLUS expression .)
    PERCENT         reduce using rule 208 (expression -> PLUS expression .)
    INTDIV          reduce using rule 208 (expression -> PLUS expression .)
    BITOR           reduce using rule 208 (expression -> PLUS expression .)
    BITAND          reduce using rule 208 (expression -> PLUS expression .)
    LSHIFT          reduce using rule 208 (expression -> PLUS expression .)
    RSHIFT          reduce using rule 208 (expression -> PLUS expression .)
    EQUALTO         reduce using rule 208 (expression -> PLUS expression .)
    NEQUALTO        reduce using rule 208 (expression -> PLUS expression .)
    LT              reduce using rule 208 (expression -> PLUS expression .)
    LE              reduce using rule 208 (expression -> PLUS expression .)
    GT              reduce using rule 208 (expression -> PLUS expression .)
    GE              reduce using rule 208 (expression -> PLUS expression .)
    REQUALTO        reduce using rule 208 (expression -> PLUS expression .)
    BOOLOR          reduce using rule 208 (expression -> PLUS expression .)
    BOOLAND         reduce using rule 208 (expression -> PLUS expression .)
    OR              reduce using rule 208 (expression -> PLUS expression .)
    AND             reduce using rule 208 (expression -> PLUS expression .)
    CARET           reduce using rule 208 (expression -> PLUS expression .)
    QMARK           reduce using rule 208 (expression -> PLUS expression .)
    IS              reduce using rule 208 (expression -> PLUS expression .)
    ISNOT           reduce using rule 208 (expression -> PLUS expression .)
    IN              reduce using rule 208 (expression -> PLUS expression .)
    NOTIN           reduce using rule 208 (expression -> PLUS expression .)
    COMMA           reduce using rule 208 (expression -> PLUS expression .)
    RPAREN          reduce using rule 208 (expression -> PLUS expression .)
    RBRACKET        reduce using rule 208 (expression -> PLUS expression .)
    NL              reduce using rule 208 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 208 (expression -> PLUS expression .)
    COLON           reduce using rule 208 (expression -> PLUS expression .)
    RCURLY          reduce using rule 208 (expression -> PLUS expression .)
    DOTDOT          reduce using rule 208 (expression -> PLUS expression .)
    error           reduce using rule 208 (expression -> PLUS expression .)
    COLONCOLON      reduce using rule 208 (expression -> PLUS expression .)
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 208 (expression -> PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 208 (expression -> PLUS expression .) ]
  ! DOT             [ reduce using rule 208 (expression -> PLUS expression .) ]
  ! POW             [ reduce using rule 208 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! TIMES           [ shift and go to state 171 ]
  ! DIVIDE          [ shift and go to state 166 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! INTDIV          [ shift and go to state 151 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 126

    (111) assignment_operator -> DIVEQU .

    MINUS           reduce using rule 111 (assignment_operator -> DIVEQU .)
    PLUS            reduce using rule 111 (assignment_operator -> DIVEQU .)
    TILDE           reduce using rule 111 (assignment_operator -> DIVEQU .)
    EXMARK          reduce using rule 111 (assignment_operator -> DIVEQU .)
    NOT             reduce using rule 111 (assignment_operator -> DIVEQU .)
    LPAREN          reduce using rule 111 (assignment_operator -> DIVEQU .)
    INTLITERAL      reduce using rule 111 (assignment_operator -> DIVEQU .)
    FLOATLITERAL    reduce using rule 111 (assignment_operator -> DIVEQU .)
    BOOLLITERAL     reduce using rule 111 (assignment_operator -> DIVEQU .)
    STRINGLITERAL   reduce using rule 111 (assignment_operator -> DIVEQU .)
    DOCSTRING       reduce using rule 111 (assignment_operator -> DIVEQU .)
    NONE            reduce using rule 111 (assignment_operator -> DIVEQU .)
    IDENTIFIER      reduce using rule 111 (assignment_operator -> DIVEQU .)
    LAMBDA          reduce using rule 111 (assignment_operator -> DIVEQU .)
    LBRACKET        reduce using rule 111 (assignment_operator -> DIVEQU .)
    LCURLY          reduce using rule 111 (assignment_operator -> DIVEQU .)


state 127

    (116) assignment_operator -> LSHIFTEQU .

    MINUS           reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    PLUS            reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    TILDE           reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    EXMARK          reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    NOT             reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    LPAREN          reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    INTLITERAL      reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    FLOATLITERAL    reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    BOOLLITERAL     reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    STRINGLITERAL   reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    DOCSTRING       reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    NONE            reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    IDENTIFIER      reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    LAMBDA          reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    LBRACKET        reduce using rule 116 (assignment_operator -> LSHIFTEQU .)
    LCURLY          reduce using rule 116 (assignment_operator -> LSHIFTEQU .)


state 128

    (112) assignment_operator -> MODEQU .

    MINUS           reduce using rule 112 (assignment_operator -> MODEQU .)
    PLUS            reduce using rule 112 (assignment_operator -> MODEQU .)
    TILDE           reduce using rule 112 (assignment_operator -> MODEQU .)
    EXMARK          reduce using rule 112 (assignment_operator -> MODEQU .)
    NOT             reduce using rule 112 (assignment_operator -> MODEQU .)
    LPAREN          reduce using rule 112 (assignment_operator -> MODEQU .)
    INTLITERAL      reduce using rule 112 (assignment_operator -> MODEQU .)
    FLOATLITERAL    reduce using rule 112 (assignment_operator -> MODEQU .)
    BOOLLITERAL     reduce using rule 112 (assignment_operator -> MODEQU .)
    STRINGLITERAL   reduce using rule 112 (assignment_operator -> MODEQU .)
    DOCSTRING       reduce using rule 112 (assignment_operator -> MODEQU .)
    NONE            reduce using rule 112 (assignment_operator -> MODEQU .)
    IDENTIFIER      reduce using rule 112 (assignment_operator -> MODEQU .)
    LAMBDA          reduce using rule 112 (assignment_operator -> MODEQU .)
    LBRACKET        reduce using rule 112 (assignment_operator -> MODEQU .)
    LCURLY          reduce using rule 112 (assignment_operator -> MODEQU .)


state 129

    (107) assignment_operator -> EQUALS .

    MINUS           reduce using rule 107 (assignment_operator -> EQUALS .)
    PLUS            reduce using rule 107 (assignment_operator -> EQUALS .)
    TILDE           reduce using rule 107 (assignment_operator -> EQUALS .)
    EXMARK          reduce using rule 107 (assignment_operator -> EQUALS .)
    NOT             reduce using rule 107 (assignment_operator -> EQUALS .)
    LPAREN          reduce using rule 107 (assignment_operator -> EQUALS .)
    INTLITERAL      reduce using rule 107 (assignment_operator -> EQUALS .)
    FLOATLITERAL    reduce using rule 107 (assignment_operator -> EQUALS .)
    BOOLLITERAL     reduce using rule 107 (assignment_operator -> EQUALS .)
    STRINGLITERAL   reduce using rule 107 (assignment_operator -> EQUALS .)
    DOCSTRING       reduce using rule 107 (assignment_operator -> EQUALS .)
    NONE            reduce using rule 107 (assignment_operator -> EQUALS .)
    IDENTIFIER      reduce using rule 107 (assignment_operator -> EQUALS .)
    LAMBDA          reduce using rule 107 (assignment_operator -> EQUALS .)
    LBRACKET        reduce using rule 107 (assignment_operator -> EQUALS .)
    LCURLY          reduce using rule 107 (assignment_operator -> EQUALS .)


state 130

    (113) assignment_operator -> BITANDEQU .

    MINUS           reduce using rule 113 (assignment_operator -> BITANDEQU .)
    PLUS            reduce using rule 113 (assignment_operator -> BITANDEQU .)
    TILDE           reduce using rule 113 (assignment_operator -> BITANDEQU .)
    EXMARK          reduce using rule 113 (assignment_operator -> BITANDEQU .)
    NOT             reduce using rule 113 (assignment_operator -> BITANDEQU .)
    LPAREN          reduce using rule 113 (assignment_operator -> BITANDEQU .)
    INTLITERAL      reduce using rule 113 (assignment_operator -> BITANDEQU .)
    FLOATLITERAL    reduce using rule 113 (assignment_operator -> BITANDEQU .)
    BOOLLITERAL     reduce using rule 113 (assignment_operator -> BITANDEQU .)
    STRINGLITERAL   reduce using rule 113 (assignment_operator -> BITANDEQU .)
    DOCSTRING       reduce using rule 113 (assignment_operator -> BITANDEQU .)
    NONE            reduce using rule 113 (assignment_operator -> BITANDEQU .)
    IDENTIFIER      reduce using rule 113 (assignment_operator -> BITANDEQU .)
    LAMBDA          reduce using rule 113 (assignment_operator -> BITANDEQU .)
    LBRACKET        reduce using rule 113 (assignment_operator -> BITANDEQU .)
    LCURLY          reduce using rule 113 (assignment_operator -> BITANDEQU .)


state 131

    (118) assignment_operator -> POWEQU .

    MINUS           reduce using rule 118 (assignment_operator -> POWEQU .)
    PLUS            reduce using rule 118 (assignment_operator -> POWEQU .)
    TILDE           reduce using rule 118 (assignment_operator -> POWEQU .)
    EXMARK          reduce using rule 118 (assignment_operator -> POWEQU .)
    NOT             reduce using rule 118 (assignment_operator -> POWEQU .)
    LPAREN          reduce using rule 118 (assignment_operator -> POWEQU .)
    INTLITERAL      reduce using rule 118 (assignment_operator -> POWEQU .)
    FLOATLITERAL    reduce using rule 118 (assignment_operator -> POWEQU .)
    BOOLLITERAL     reduce using rule 118 (assignment_operator -> POWEQU .)
    STRINGLITERAL   reduce using rule 118 (assignment_operator -> POWEQU .)
    DOCSTRING       reduce using rule 118 (assignment_operator -> POWEQU .)
    NONE            reduce using rule 118 (assignment_operator -> POWEQU .)
    IDENTIFIER      reduce using rule 118 (assignment_operator -> POWEQU .)
    LAMBDA          reduce using rule 118 (assignment_operator -> POWEQU .)
    LBRACKET        reduce using rule 118 (assignment_operator -> POWEQU .)
    LCURLY          reduce using rule 118 (assignment_operator -> POWEQU .)


state 132

    (117) assignment_operator -> RSHIFTEQU .

    MINUS           reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    PLUS            reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    TILDE           reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    EXMARK          reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    NOT             reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    LPAREN          reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    INTLITERAL      reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    FLOATLITERAL    reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    BOOLLITERAL     reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    STRINGLITERAL   reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    DOCSTRING       reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    NONE            reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    IDENTIFIER      reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    LAMBDA          reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    LBRACKET        reduce using rule 117 (assignment_operator -> RSHIFTEQU .)
    LCURLY          reduce using rule 117 (assignment_operator -> RSHIFTEQU .)


state 133

    (103) assignment -> indexing assignment_operator . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 230
    grouping                       shift and go to state 42

state 134

    (115) assignment_operator -> BITXOREQU .

    MINUS           reduce using rule 115 (assignment_operator -> BITXOREQU .)
    PLUS            reduce using rule 115 (assignment_operator -> BITXOREQU .)
    TILDE           reduce using rule 115 (assignment_operator -> BITXOREQU .)
    EXMARK          reduce using rule 115 (assignment_operator -> BITXOREQU .)
    NOT             reduce using rule 115 (assignment_operator -> BITXOREQU .)
    LPAREN          reduce using rule 115 (assignment_operator -> BITXOREQU .)
    INTLITERAL      reduce using rule 115 (assignment_operator -> BITXOREQU .)
    FLOATLITERAL    reduce using rule 115 (assignment_operator -> BITXOREQU .)
    BOOLLITERAL     reduce using rule 115 (assignment_operator -> BITXOREQU .)
    STRINGLITERAL   reduce using rule 115 (assignment_operator -> BITXOREQU .)
    DOCSTRING       reduce using rule 115 (assignment_operator -> BITXOREQU .)
    NONE            reduce using rule 115 (assignment_operator -> BITXOREQU .)
    IDENTIFIER      reduce using rule 115 (assignment_operator -> BITXOREQU .)
    LAMBDA          reduce using rule 115 (assignment_operator -> BITXOREQU .)
    LBRACKET        reduce using rule 115 (assignment_operator -> BITXOREQU .)
    LCURLY          reduce using rule 115 (assignment_operator -> BITXOREQU .)


state 135

    (108) assignment_operator -> PLUSEQU .

    MINUS           reduce using rule 108 (assignment_operator -> PLUSEQU .)
    PLUS            reduce using rule 108 (assignment_operator -> PLUSEQU .)
    TILDE           reduce using rule 108 (assignment_operator -> PLUSEQU .)
    EXMARK          reduce using rule 108 (assignment_operator -> PLUSEQU .)
    NOT             reduce using rule 108 (assignment_operator -> PLUSEQU .)
    LPAREN          reduce using rule 108 (assignment_operator -> PLUSEQU .)
    INTLITERAL      reduce using rule 108 (assignment_operator -> PLUSEQU .)
    FLOATLITERAL    reduce using rule 108 (assignment_operator -> PLUSEQU .)
    BOOLLITERAL     reduce using rule 108 (assignment_operator -> PLUSEQU .)
    STRINGLITERAL   reduce using rule 108 (assignment_operator -> PLUSEQU .)
    DOCSTRING       reduce using rule 108 (assignment_operator -> PLUSEQU .)
    NONE            reduce using rule 108 (assignment_operator -> PLUSEQU .)
    IDENTIFIER      reduce using rule 108 (assignment_operator -> PLUSEQU .)
    LAMBDA          reduce using rule 108 (assignment_operator -> PLUSEQU .)
    LBRACKET        reduce using rule 108 (assignment_operator -> PLUSEQU .)
    LCURLY          reduce using rule 108 (assignment_operator -> PLUSEQU .)


state 136

    (114) assignment_operator -> BITOREQU .

    MINUS           reduce using rule 114 (assignment_operator -> BITOREQU .)
    PLUS            reduce using rule 114 (assignment_operator -> BITOREQU .)
    TILDE           reduce using rule 114 (assignment_operator -> BITOREQU .)
    EXMARK          reduce using rule 114 (assignment_operator -> BITOREQU .)
    NOT             reduce using rule 114 (assignment_operator -> BITOREQU .)
    LPAREN          reduce using rule 114 (assignment_operator -> BITOREQU .)
    INTLITERAL      reduce using rule 114 (assignment_operator -> BITOREQU .)
    FLOATLITERAL    reduce using rule 114 (assignment_operator -> BITOREQU .)
    BOOLLITERAL     reduce using rule 114 (assignment_operator -> BITOREQU .)
    STRINGLITERAL   reduce using rule 114 (assignment_operator -> BITOREQU .)
    DOCSTRING       reduce using rule 114 (assignment_operator -> BITOREQU .)
    NONE            reduce using rule 114 (assignment_operator -> BITOREQU .)
    IDENTIFIER      reduce using rule 114 (assignment_operator -> BITOREQU .)
    LAMBDA          reduce using rule 114 (assignment_operator -> BITOREQU .)
    LBRACKET        reduce using rule 114 (assignment_operator -> BITOREQU .)
    LCURLY          reduce using rule 114 (assignment_operator -> BITOREQU .)


state 137

    (110) assignment_operator -> TIMESEQU .

    MINUS           reduce using rule 110 (assignment_operator -> TIMESEQU .)
    PLUS            reduce using rule 110 (assignment_operator -> TIMESEQU .)
    TILDE           reduce using rule 110 (assignment_operator -> TIMESEQU .)
    EXMARK          reduce using rule 110 (assignment_operator -> TIMESEQU .)
    NOT             reduce using rule 110 (assignment_operator -> TIMESEQU .)
    LPAREN          reduce using rule 110 (assignment_operator -> TIMESEQU .)
    INTLITERAL      reduce using rule 110 (assignment_operator -> TIMESEQU .)
    FLOATLITERAL    reduce using rule 110 (assignment_operator -> TIMESEQU .)
    BOOLLITERAL     reduce using rule 110 (assignment_operator -> TIMESEQU .)
    STRINGLITERAL   reduce using rule 110 (assignment_operator -> TIMESEQU .)
    DOCSTRING       reduce using rule 110 (assignment_operator -> TIMESEQU .)
    NONE            reduce using rule 110 (assignment_operator -> TIMESEQU .)
    IDENTIFIER      reduce using rule 110 (assignment_operator -> TIMESEQU .)
    LAMBDA          reduce using rule 110 (assignment_operator -> TIMESEQU .)
    LBRACKET        reduce using rule 110 (assignment_operator -> TIMESEQU .)
    LCURLY          reduce using rule 110 (assignment_operator -> TIMESEQU .)


state 138

    (119) assignment_operator -> INTDIVEQU .

    MINUS           reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    PLUS            reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    TILDE           reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    EXMARK          reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    NOT             reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    LPAREN          reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    INTLITERAL      reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    FLOATLITERAL    reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    BOOLLITERAL     reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    STRINGLITERAL   reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    DOCSTRING       reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    NONE            reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    IDENTIFIER      reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    LAMBDA          reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    LBRACKET        reduce using rule 119 (assignment_operator -> INTDIVEQU .)
    LCURLY          reduce using rule 119 (assignment_operator -> INTDIVEQU .)


state 139

    (109) assignment_operator -> MINUSEQU .

    MINUS           reduce using rule 109 (assignment_operator -> MINUSEQU .)
    PLUS            reduce using rule 109 (assignment_operator -> MINUSEQU .)
    TILDE           reduce using rule 109 (assignment_operator -> MINUSEQU .)
    EXMARK          reduce using rule 109 (assignment_operator -> MINUSEQU .)
    NOT             reduce using rule 109 (assignment_operator -> MINUSEQU .)
    LPAREN          reduce using rule 109 (assignment_operator -> MINUSEQU .)
    INTLITERAL      reduce using rule 109 (assignment_operator -> MINUSEQU .)
    FLOATLITERAL    reduce using rule 109 (assignment_operator -> MINUSEQU .)
    BOOLLITERAL     reduce using rule 109 (assignment_operator -> MINUSEQU .)
    STRINGLITERAL   reduce using rule 109 (assignment_operator -> MINUSEQU .)
    DOCSTRING       reduce using rule 109 (assignment_operator -> MINUSEQU .)
    NONE            reduce using rule 109 (assignment_operator -> MINUSEQU .)
    IDENTIFIER      reduce using rule 109 (assignment_operator -> MINUSEQU .)
    LAMBDA          reduce using rule 109 (assignment_operator -> MINUSEQU .)
    LBRACKET        reduce using rule 109 (assignment_operator -> MINUSEQU .)
    LCURLY          reduce using rule 109 (assignment_operator -> MINUSEQU .)


state 140

    (104) assignment -> slicing assignment_operator . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 231
    grouping                       shift and go to state 42

state 141

    (129) return -> RETURN empty .

    NL              reduce using rule 129 (return -> RETURN empty .)
    SEMICOLON       reduce using rule 129 (return -> RETURN empty .)
    RPAREN          reduce using rule 129 (return -> RETURN empty .)


state 142

    (130) return -> RETURN expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    NL              reduce using rule 130 (return -> RETURN expression .)
    SEMICOLON       reduce using rule 130 (return -> RETURN expression .)
    RPAREN          reduce using rule 130 (return -> RETURN expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 143

    (76) delete -> DEL expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    NL              reduce using rule 76 (delete -> DEL expression .)
    SEMICOLON       reduce using rule 76 (delete -> DEL expression .)
    RPAREN          reduce using rule 76 (delete -> DEL expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 144

    (264) for_loop -> FOR error . IN expression COLON suite
    (266) for_loop -> FOR error . IN expression DOTDOT expression COLON suite

    IN              shift and go to state 232


state 145

    (80) for_loop -> FOR IDENTIFIER . IN expression COLON suite
    (81) for_loop -> FOR IDENTIFIER . IN expression DOTDOT expression COLON suite
    (265) for_loop -> FOR IDENTIFIER . IN error COLON suite
    (267) for_loop -> FOR IDENTIFIER . IN error DOTDOT expression COLON suite
    (268) for_loop -> FOR IDENTIFIER . IN expression DOTDOT error COLON suite

    IN              shift and go to state 233


state 146

    (86) try_except -> TRY COLON . suite exceptlist_nonempty empty empty
    (87) try_except -> TRY COLON . suite exceptlist_nonempty except_else empty
    (88) try_except -> TRY COLON . suite exceptlist_nonempty empty except_finally
    (89) try_except -> TRY COLON . suite exceptlist_nonempty except_else except_finally
    (90) try_except -> TRY COLON . suite empty empty except_finally
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    yield                          shift and go to state 41
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 234
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 147

    (59) statement_complex -> statement_multi NL .

    IF              reduce using rule 59 (statement_complex -> statement_multi NL .)
    TRY             reduce using rule 59 (statement_complex -> statement_multi NL .)
    WHILE           reduce using rule 59 (statement_complex -> statement_multi NL .)
    FOR             reduce using rule 59 (statement_complex -> statement_multi NL .)
    CONTINUE        reduce using rule 59 (statement_complex -> statement_multi NL .)
    BREAK           reduce using rule 59 (statement_complex -> statement_multi NL .)
    PASS            reduce using rule 59 (statement_complex -> statement_multi NL .)
    RETURN          reduce using rule 59 (statement_complex -> statement_multi NL .)
    YIELD           reduce using rule 59 (statement_complex -> statement_multi NL .)
    RAISE           reduce using rule 59 (statement_complex -> statement_multi NL .)
    DEL             reduce using rule 59 (statement_complex -> statement_multi NL .)
    IDENTIFIER      reduce using rule 59 (statement_complex -> statement_multi NL .)
    MINUS           reduce using rule 59 (statement_complex -> statement_multi NL .)
    PLUS            reduce using rule 59 (statement_complex -> statement_multi NL .)
    TILDE           reduce using rule 59 (statement_complex -> statement_multi NL .)
    EXMARK          reduce using rule 59 (statement_complex -> statement_multi NL .)
    NOT             reduce using rule 59 (statement_complex -> statement_multi NL .)
    ASSERT          reduce using rule 59 (statement_complex -> statement_multi NL .)
    LPAREN          reduce using rule 59 (statement_complex -> statement_multi NL .)
    INTLITERAL      reduce using rule 59 (statement_complex -> statement_multi NL .)
    FLOATLITERAL    reduce using rule 59 (statement_complex -> statement_multi NL .)
    BOOLLITERAL     reduce using rule 59 (statement_complex -> statement_multi NL .)
    STRINGLITERAL   reduce using rule 59 (statement_complex -> statement_multi NL .)
    DOCSTRING       reduce using rule 59 (statement_complex -> statement_multi NL .)
    NONE            reduce using rule 59 (statement_complex -> statement_multi NL .)
    LAMBDA          reduce using rule 59 (statement_complex -> statement_multi NL .)
    LBRACKET        reduce using rule 59 (statement_complex -> statement_multi NL .)
    LCURLY          reduce using rule 59 (statement_complex -> statement_multi NL .)
    DEDENT          reduce using rule 59 (statement_complex -> statement_multi NL .)
    $end            reduce using rule 59 (statement_complex -> statement_multi NL .)


state 148

    (60) statement_complex -> statement_multi SEMICOLON . NL
    (61) statement_multi -> statement_multi SEMICOLON . statement_simple
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 237
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    slicing                        shift and go to state 38
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    assert                         shift and go to state 71
    statement_simple               shift and go to state 238
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 149

    (211) expression -> NOT expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 211 (expression -> NOT expression .)
    BOOLOR          reduce using rule 211 (expression -> NOT expression .)
    BOOLAND         reduce using rule 211 (expression -> NOT expression .)
    OR              reduce using rule 211 (expression -> NOT expression .)
    AND             reduce using rule 211 (expression -> NOT expression .)
    CARET           reduce using rule 211 (expression -> NOT expression .)
    QMARK           reduce using rule 211 (expression -> NOT expression .)
    COMMA           reduce using rule 211 (expression -> NOT expression .)
    RPAREN          reduce using rule 211 (expression -> NOT expression .)
    RBRACKET        reduce using rule 211 (expression -> NOT expression .)
    NL              reduce using rule 211 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 211 (expression -> NOT expression .)
    COLON           reduce using rule 211 (expression -> NOT expression .)
    RCURLY          reduce using rule 211 (expression -> NOT expression .)
    DOTDOT          reduce using rule 211 (expression -> NOT expression .)
    error           reduce using rule 211 (expression -> NOT expression .)
    COLONCOLON      reduce using rule 211 (expression -> NOT expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173

  ! LPAREN          [ reduce using rule 211 (expression -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 211 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 211 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 211 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 211 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 211 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 211 (expression -> NOT expression .) ]
  ! INTDIV          [ reduce using rule 211 (expression -> NOT expression .) ]
  ! POW             [ reduce using rule 211 (expression -> NOT expression .) ]
  ! BITOR           [ reduce using rule 211 (expression -> NOT expression .) ]
  ! BITAND          [ reduce using rule 211 (expression -> NOT expression .) ]
  ! LSHIFT          [ reduce using rule 211 (expression -> NOT expression .) ]
  ! RSHIFT          [ reduce using rule 211 (expression -> NOT expression .) ]
  ! EQUALTO         [ reduce using rule 211 (expression -> NOT expression .) ]
  ! NEQUALTO        [ reduce using rule 211 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 211 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 211 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 211 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 211 (expression -> NOT expression .) ]
  ! REQUALTO        [ reduce using rule 211 (expression -> NOT expression .) ]
  ! IS              [ reduce using rule 211 (expression -> NOT expression .) ]
  ! ISNOT           [ reduce using rule 211 (expression -> NOT expression .) ]
  ! IN              [ reduce using rule 211 (expression -> NOT expression .) ]
  ! NOTIN           [ reduce using rule 211 (expression -> NOT expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]


state 150

    (206) calculation -> expression CARET . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 239
    grouping                       shift and go to state 42

state 151

    (189) calculation -> expression INTDIV . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 240
    grouping                       shift and go to state 42

state 152

    (194) calculation -> expression RSHIFT . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 241
    grouping                       shift and go to state 42

state 153

    (203) calculation -> expression BOOLAND . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 242
    grouping                       shift and go to state 42

state 154

    (120) indexing -> expression LBRACKET . expression RBRACKET
    (274) indexing -> expression LBRACKET . error RBRACKET
    (121) slicing -> expression LBRACKET . expression COLON expression optslice RBRACKET
    (122) slicing -> expression LBRACKET . empty COLON expression optslice RBRACKET
    (123) slicing -> expression LBRACKET . expression COLON empty optslice RBRACKET
    (124) slicing -> expression LBRACKET . empty COLON empty optslice RBRACKET
    (275) slicing -> expression LBRACKET . error COLON expression optslice RBRACKET
    (276) slicing -> expression LBRACKET . expression COLON expression error RBRACKET
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (3) empty -> .
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 244
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    COLON           reduce using rule 3 (empty -> .)
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    empty                          shift and go to state 243
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 245
    grouping                       shift and go to state 42

state 155

    (193) calculation -> expression LSHIFT . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 246
    grouping                       shift and go to state 42

state 156

    (185) calculation -> expression MINUS . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 247
    grouping                       shift and go to state 42

state 157

    (247) member -> expression DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 248


state 158

    (198) calculation -> expression LE . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 249
    grouping                       shift and go to state 42

state 159

    (190) calculation -> expression POW . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 250
    grouping                       shift and go to state 42

state 160

    (195) calculation -> expression EQUALTO . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 251
    grouping                       shift and go to state 42

state 161

    (197) calculation -> expression LT . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 252
    grouping                       shift and go to state 42

state 162

    (184) calculation -> expression PLUS . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 253
    grouping                       shift and go to state 42

state 163

    (249) identity -> expression ISNOT . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 254
    grouping                       shift and go to state 42

state 164

    (191) calculation -> expression BITOR . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 255
    grouping                       shift and go to state 42

state 165

    (199) calculation -> expression GT . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 256
    grouping                       shift and go to state 42

state 166

    (187) calculation -> expression DIVIDE . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 257
    grouping                       shift and go to state 42

state 167

    (202) calculation -> expression BOOLOR . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 258
    grouping                       shift and go to state 42

state 168

    (248) identity -> expression IS . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 259
    grouping                       shift and go to state 42

state 169

    (188) calculation -> expression PERCENT . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 260
    grouping                       shift and go to state 42

state 170

    (201) calculation -> expression REQUALTO . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 261
    grouping                       shift and go to state 42

state 171

    (186) calculation -> expression TIMES . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 262
    grouping                       shift and go to state 42

state 172

    (192) calculation -> expression BITAND . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 263
    grouping                       shift and go to state 42

state 173

    (251) membership -> expression NOTIN . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 264
    grouping                       shift and go to state 42

state 174

    (128) procedure_call -> expression LPAREN . expressionlist RPAREN
    (277) procedure_call -> expression LPAREN . error RPAREN
    (212) function_call -> expression LPAREN . expressionlist RPAREN
    (213) expressionlist -> . nonempty_expressionlist
    (214) expressionlist -> . empty
    (215) nonempty_expressionlist -> . expression
    (216) nonempty_expressionlist -> . nonempty_expressionlist COMMA nonempty_expressionlist
    (3) empty -> .
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 266
    RPAREN          reduce using rule 3 (empty -> .)
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    expressionlist                 shift and go to state 265
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    nonempty_expressionlist        shift and go to state 115
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    empty                          shift and go to state 119
    ternary                        shift and go to state 92
    expression                     shift and go to state 121
    grouping                       shift and go to state 42

state 175

    (250) membership -> expression IN . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 267
    grouping                       shift and go to state 42

state 176

    (196) calculation -> expression NEQUALTO . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 268
    grouping                       shift and go to state 42

state 177

    (205) calculation -> expression AND . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 269
    grouping                       shift and go to state 42

state 178

    (246) ternary -> expression QMARK . expression COLON expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 270
    grouping                       shift and go to state 42

state 179

    (200) calculation -> expression GE . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 271
    grouping                       shift and go to state 42

state 180

    (204) calculation -> expression OR . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 272
    grouping                       shift and go to state 42

state 181

    (230) function_literal -> LAMBDA LPAREN . argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> LAMBDA LPAREN . error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> LAMBDA LPAREN . argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> LAMBDA LPAREN . argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> LAMBDA LPAREN . error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> LAMBDA LPAREN . argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> LAMBDA LPAREN . argumentlist RPAREN COLON LPAREN error RPAREN
    (43) argumentlist -> . nonempty_argumentlist COMMA nonempty_defaultlist
    (44) argumentlist -> . nonempty_argumentlist empty empty
    (45) argumentlist -> . empty empty empty
    (46) argumentlist -> . nonempty_defaultlist empty empty
    (47) nonempty_argumentlist -> . IDENTIFIER COLON type
    (48) nonempty_argumentlist -> . nonempty_argumentlist COMMA nonempty_argumentlist
    (261) nonempty_argumentlist -> . error COLON type
    (3) empty -> .
    (49) nonempty_defaultlist -> . nonempty_defaultlist COMMA nonempty_defaultlist
    (50) nonempty_defaultlist -> . IDENTIFIER COLON type EQUALS expression
    (262) nonempty_defaultlist -> . IDENTIFIER COLON error EQUALS expression

    error           shift and go to state 277
    IDENTIFIER      shift and go to state 274
    RPAREN          reduce using rule 3 (empty -> .)

    argumentlist                   shift and go to state 273
    nonempty_defaultlist           shift and go to state 275
    nonempty_argumentlist          shift and go to state 278
    empty                          shift and go to state 276

state 182

    (74) raise -> RAISE function_call .
    (174) expression -> function_call .

    NL              reduce using rule 74 (raise -> RAISE function_call .)
    SEMICOLON       reduce using rule 74 (raise -> RAISE function_call .)
    RPAREN          reduce using rule 74 (raise -> RAISE function_call .)
    LPAREN          reduce using rule 174 (expression -> function_call .)
    PLUS            reduce using rule 174 (expression -> function_call .)
    MINUS           reduce using rule 174 (expression -> function_call .)
    TIMES           reduce using rule 174 (expression -> function_call .)
    DIVIDE          reduce using rule 174 (expression -> function_call .)
    PERCENT         reduce using rule 174 (expression -> function_call .)
    INTDIV          reduce using rule 174 (expression -> function_call .)
    POW             reduce using rule 174 (expression -> function_call .)
    BITOR           reduce using rule 174 (expression -> function_call .)
    BITAND          reduce using rule 174 (expression -> function_call .)
    LSHIFT          reduce using rule 174 (expression -> function_call .)
    RSHIFT          reduce using rule 174 (expression -> function_call .)
    EQUALTO         reduce using rule 174 (expression -> function_call .)
    NEQUALTO        reduce using rule 174 (expression -> function_call .)
    LT              reduce using rule 174 (expression -> function_call .)
    LE              reduce using rule 174 (expression -> function_call .)
    GT              reduce using rule 174 (expression -> function_call .)
    GE              reduce using rule 174 (expression -> function_call .)
    REQUALTO        reduce using rule 174 (expression -> function_call .)
    BOOLOR          reduce using rule 174 (expression -> function_call .)
    BOOLAND         reduce using rule 174 (expression -> function_call .)
    OR              reduce using rule 174 (expression -> function_call .)
    AND             reduce using rule 174 (expression -> function_call .)
    CARET           reduce using rule 174 (expression -> function_call .)
    LBRACKET        reduce using rule 174 (expression -> function_call .)
    QMARK           reduce using rule 174 (expression -> function_call .)
    DOT             reduce using rule 174 (expression -> function_call .)
    IS              reduce using rule 174 (expression -> function_call .)
    ISNOT           reduce using rule 174 (expression -> function_call .)
    IN              reduce using rule 174 (expression -> function_call .)
    NOTIN           reduce using rule 174 (expression -> function_call .)


state 183

    (73) raise -> RAISE IDENTIFIER .
    (245) variable -> IDENTIFIER .

    NL              reduce using rule 73 (raise -> RAISE IDENTIFIER .)
    SEMICOLON       reduce using rule 73 (raise -> RAISE IDENTIFIER .)
    RPAREN          reduce using rule 73 (raise -> RAISE IDENTIFIER .)
    LPAREN          reduce using rule 245 (variable -> IDENTIFIER .)
    PLUS            reduce using rule 245 (variable -> IDENTIFIER .)
    MINUS           reduce using rule 245 (variable -> IDENTIFIER .)
    TIMES           reduce using rule 245 (variable -> IDENTIFIER .)
    DIVIDE          reduce using rule 245 (variable -> IDENTIFIER .)
    PERCENT         reduce using rule 245 (variable -> IDENTIFIER .)
    INTDIV          reduce using rule 245 (variable -> IDENTIFIER .)
    POW             reduce using rule 245 (variable -> IDENTIFIER .)
    BITOR           reduce using rule 245 (variable -> IDENTIFIER .)
    BITAND          reduce using rule 245 (variable -> IDENTIFIER .)
    LSHIFT          reduce using rule 245 (variable -> IDENTIFIER .)
    RSHIFT          reduce using rule 245 (variable -> IDENTIFIER .)
    EQUALTO         reduce using rule 245 (variable -> IDENTIFIER .)
    NEQUALTO        reduce using rule 245 (variable -> IDENTIFIER .)
    LT              reduce using rule 245 (variable -> IDENTIFIER .)
    LE              reduce using rule 245 (variable -> IDENTIFIER .)
    GT              reduce using rule 245 (variable -> IDENTIFIER .)
    GE              reduce using rule 245 (variable -> IDENTIFIER .)
    REQUALTO        reduce using rule 245 (variable -> IDENTIFIER .)
    BOOLOR          reduce using rule 245 (variable -> IDENTIFIER .)
    BOOLAND         reduce using rule 245 (variable -> IDENTIFIER .)
    OR              reduce using rule 245 (variable -> IDENTIFIER .)
    AND             reduce using rule 245 (variable -> IDENTIFIER .)
    CARET           reduce using rule 245 (variable -> IDENTIFIER .)
    LBRACKET        reduce using rule 245 (variable -> IDENTIFIER .)
    QMARK           reduce using rule 245 (variable -> IDENTIFIER .)
    DOT             reduce using rule 245 (variable -> IDENTIFIER .)
    IS              reduce using rule 245 (variable -> IDENTIFIER .)
    ISNOT           reduce using rule 245 (variable -> IDENTIFIER .)
    IN              reduce using rule 245 (variable -> IDENTIFIER .)
    NOTIN           reduce using rule 245 (variable -> IDENTIFIER .)


state 184

    (75) raise -> RAISE empty .

    NL              reduce using rule 75 (raise -> RAISE empty .)
    SEMICOLON       reduce using rule 75 (raise -> RAISE empty .)
    RPAREN          reduce using rule 75 (raise -> RAISE empty .)


state 185

    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    LPAREN          shift and go to state 229
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 186

    (263) while_loop -> WHILE error . COLON suite

    COLON           shift and go to state 279


state 187

    (79) while_loop -> WHILE expression . COLON suite
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 280
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 188

    (209) expression -> TILDE expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 209 (expression -> TILDE expression .)
    MINUS           reduce using rule 209 (expression -> TILDE expression .)
    TIMES           reduce using rule 209 (expression -> TILDE expression .)
    DIVIDE          reduce using rule 209 (expression -> TILDE expression .)
    PERCENT         reduce using rule 209 (expression -> TILDE expression .)
    INTDIV          reduce using rule 209 (expression -> TILDE expression .)
    BITOR           reduce using rule 209 (expression -> TILDE expression .)
    BITAND          reduce using rule 209 (expression -> TILDE expression .)
    LSHIFT          reduce using rule 209 (expression -> TILDE expression .)
    RSHIFT          reduce using rule 209 (expression -> TILDE expression .)
    EQUALTO         reduce using rule 209 (expression -> TILDE expression .)
    NEQUALTO        reduce using rule 209 (expression -> TILDE expression .)
    LT              reduce using rule 209 (expression -> TILDE expression .)
    LE              reduce using rule 209 (expression -> TILDE expression .)
    GT              reduce using rule 209 (expression -> TILDE expression .)
    GE              reduce using rule 209 (expression -> TILDE expression .)
    REQUALTO        reduce using rule 209 (expression -> TILDE expression .)
    BOOLOR          reduce using rule 209 (expression -> TILDE expression .)
    BOOLAND         reduce using rule 209 (expression -> TILDE expression .)
    OR              reduce using rule 209 (expression -> TILDE expression .)
    AND             reduce using rule 209 (expression -> TILDE expression .)
    CARET           reduce using rule 209 (expression -> TILDE expression .)
    QMARK           reduce using rule 209 (expression -> TILDE expression .)
    IS              reduce using rule 209 (expression -> TILDE expression .)
    ISNOT           reduce using rule 209 (expression -> TILDE expression .)
    IN              reduce using rule 209 (expression -> TILDE expression .)
    NOTIN           reduce using rule 209 (expression -> TILDE expression .)
    COMMA           reduce using rule 209 (expression -> TILDE expression .)
    RPAREN          reduce using rule 209 (expression -> TILDE expression .)
    RBRACKET        reduce using rule 209 (expression -> TILDE expression .)
    NL              reduce using rule 209 (expression -> TILDE expression .)
    SEMICOLON       reduce using rule 209 (expression -> TILDE expression .)
    COLON           reduce using rule 209 (expression -> TILDE expression .)
    RCURLY          reduce using rule 209 (expression -> TILDE expression .)
    DOTDOT          reduce using rule 209 (expression -> TILDE expression .)
    error           reduce using rule 209 (expression -> TILDE expression .)
    COLONCOLON      reduce using rule 209 (expression -> TILDE expression .)
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 209 (expression -> TILDE expression .) ]
  ! LBRACKET        [ reduce using rule 209 (expression -> TILDE expression .) ]
  ! DOT             [ reduce using rule 209 (expression -> TILDE expression .) ]
  ! POW             [ reduce using rule 209 (expression -> TILDE expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! TIMES           [ shift and go to state 171 ]
  ! DIVIDE          [ shift and go to state 166 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! INTDIV          [ shift and go to state 151 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 189

    (133) assertnomessage -> ASSERT expression .
    (134) assertmessage -> ASSERT expression . COMMA literal
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    NL              reduce using rule 133 (assertnomessage -> ASSERT expression .)
    SEMICOLON       reduce using rule 133 (assertnomessage -> ASSERT expression .)
    RPAREN          reduce using rule 133 (assertnomessage -> ASSERT expression .)
    COMMA           shift and go to state 281
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 190

    (241) dictionarylist -> empty .

    RCURLY          reduce using rule 241 (dictionarylist -> empty .)


state 191

    (239) dictionary_literal -> LCURLY dictionarylist . RCURLY

    RCURLY          shift and go to state 282


state 192

    (240) dictionarylist -> nonempty_dictionarylist .
    (243) nonempty_dictionarylist -> nonempty_dictionarylist . COMMA nonempty_dictionarylist

    RCURLY          reduce using rule 240 (dictionarylist -> nonempty_dictionarylist .)
    COMMA           shift and go to state 283


state 193

    (244) set_literal -> LCURLY nonempty_expressionlist . RCURLY
    (216) nonempty_expressionlist -> nonempty_expressionlist . COMMA nonempty_expressionlist

    RCURLY          shift and go to state 284
    COMMA           shift and go to state 227


state 194

    (292) dictionary_literal -> LCURLY error . RCURLY

    RCURLY          shift and go to state 285


state 195

    (215) nonempty_expressionlist -> expression .
    (242) nonempty_dictionarylist -> expression . COLON expression
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    RCURLY          reduce using rule 215 (nonempty_expressionlist -> expression .)
    COMMA           reduce using rule 215 (nonempty_expressionlist -> expression .)
    COLON           shift and go to state 286
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 196

    (106) assignment -> member assignment_operator . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 287
    grouping                       shift and go to state 42

state 197

    (210) expression -> EXMARK expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 210 (expression -> EXMARK expression .)
    BOOLOR          reduce using rule 210 (expression -> EXMARK expression .)
    BOOLAND         reduce using rule 210 (expression -> EXMARK expression .)
    OR              reduce using rule 210 (expression -> EXMARK expression .)
    AND             reduce using rule 210 (expression -> EXMARK expression .)
    CARET           reduce using rule 210 (expression -> EXMARK expression .)
    QMARK           reduce using rule 210 (expression -> EXMARK expression .)
    COMMA           reduce using rule 210 (expression -> EXMARK expression .)
    RPAREN          reduce using rule 210 (expression -> EXMARK expression .)
    RBRACKET        reduce using rule 210 (expression -> EXMARK expression .)
    NL              reduce using rule 210 (expression -> EXMARK expression .)
    SEMICOLON       reduce using rule 210 (expression -> EXMARK expression .)
    COLON           reduce using rule 210 (expression -> EXMARK expression .)
    RCURLY          reduce using rule 210 (expression -> EXMARK expression .)
    DOTDOT          reduce using rule 210 (expression -> EXMARK expression .)
    error           reduce using rule 210 (expression -> EXMARK expression .)
    COLONCOLON      reduce using rule 210 (expression -> EXMARK expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173

  ! LPAREN          [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! LBRACKET        [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! DOT             [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! PLUS            [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! MINUS           [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! TIMES           [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! DIVIDE          [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! INTDIV          [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! POW             [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! BITOR           [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! BITAND          [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! LSHIFT          [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! RSHIFT          [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! EQUALTO         [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! NEQUALTO        [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! LT              [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! LE              [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! GT              [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! GE              [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! REQUALTO        [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! IS              [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! ISNOT           [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! IN              [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! NOTIN           [ reduce using rule 210 (expression -> EXMARK expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]


state 198

    (135) yield -> YIELD expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    NL              reduce using rule 135 (yield -> YIELD expression .)
    SEMICOLON       reduce using rule 135 (yield -> YIELD expression .)
    RPAREN          reduce using rule 135 (yield -> YIELD expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 199

    (235) nonempty_tuple -> crosstuple .

    RPAREN          reduce using rule 235 (nonempty_tuple -> crosstuple .)


state 200

    (234) nonempty_tuple -> singletontuple .

    RPAREN          reduce using rule 234 (nonempty_tuple -> singletontuple .)


state 201

    (231) tuple_literal -> LPAREN tuplelist . RPAREN

    RPAREN          shift and go to state 288


state 202

    (233) tuplelist -> empty .

    RPAREN          reduce using rule 233 (tuplelist -> empty .)


state 203

    (236) singletontuple -> nonempty_expressionlist . COMMA
    (237) crosstuple -> nonempty_expressionlist .
    (216) nonempty_expressionlist -> nonempty_expressionlist . COMMA nonempty_expressionlist

    COMMA           shift and go to state 289
    RPAREN          reduce using rule 237 (crosstuple -> nonempty_expressionlist .)


state 204

    (232) tuplelist -> nonempty_tuple .

    RPAREN          reduce using rule 232 (tuplelist -> nonempty_tuple .)


state 205

    (217) grouping -> LPAREN expression . RPAREN
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression
    (215) nonempty_expressionlist -> expression .

    RPAREN          shift and go to state 290
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173
    COMMA           reduce using rule 215 (nonempty_expressionlist -> expression .)

  ! RPAREN          [ reduce using rule 215 (nonempty_expressionlist -> expression .) ]


state 206

    (105) assignment -> variable assignment_operator . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 291
    grouping                       shift and go to state 42

state 207

    (269) conditional -> IF error . COLON suite conditional_extension

    COLON           shift and go to state 292


state 208

    (82) conditional -> IF expression . COLON suite conditional_extension
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 293
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 209

    (25) variableblock -> COLONCOLON nonempty_variableblock COLONCOLON . NL

    NL              shift and go to state 294


state 210

    (28) nonempty_variableblock -> nonempty_variableblock COMMA . nonempty_variableblock
    (27) nonempty_variableblock -> . declaration
    (28) nonempty_variableblock -> . nonempty_variableblock COMMA nonempty_variableblock
    (29) declaration -> . IDENTIFIER COLON type
    (30) declaration -> . IDENTIFIER COLON type EQUALS expression
    (253) declaration -> . IDENTIFIER COLON error EQUALS expression

    IDENTIFIER      shift and go to state 97

    nonempty_variableblock         shift and go to state 295
    declaration                    shift and go to state 96

state 211

    (252) variableblock -> COLONCOLON error COLONCOLON . NL

    NL              shift and go to state 296


state 212

    (29) declaration -> IDENTIFIER COLON . type
    (30) declaration -> IDENTIFIER COLON . type EQUALS expression
    (253) declaration -> IDENTIFIER COLON . error EQUALS expression
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 322
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    type                           shift and go to state 310
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    dictionary_type                shift and go to state 304
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    member_type                    shift and go to state 299
    list_type                      shift and go to state 321
    tupleparens                    shift and go to state 312
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316

state 213

    (20) pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER . NL

    NL              shift and go to state 323


state 214

    (15) import_statement -> FROM IDENTIFIER IMPORT importlist . NL
    (18) importlist -> importlist . COMMA importlist

    NL              shift and go to state 324
    COMMA           shift and go to state 325


state 215

    (14) import_statement -> FROM IDENTIFIER IMPORT TIMES . NL

    NL              shift and go to state 326


state 216

    (16) importlist -> IDENTIFIER .
    (17) importlist -> IDENTIFIER . AS IDENTIFIER

    COMMA           reduce using rule 16 (importlist -> IDENTIFIER .)
    NL              reduce using rule 16 (importlist -> IDENTIFIER .)
    AS              shift and go to state 327


state 217

    (22) pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist . NL
    (18) importlist -> importlist . COMMA importlist

    NL              shift and go to state 328
    COMMA           shift and go to state 325


state 218

    (21) pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES . NL

    NL              shift and go to state 329


state 219

    (13) import_statement -> IMPORT IDENTIFIER AS IDENTIFIER . NL

    NL              shift and go to state 330


state 220

    (37) methodblock -> subroutine_definition methodblock .

    IF              reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    TRY             reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    WHILE           reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    FOR             reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    CONTINUE        reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    BREAK           reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    PASS            reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    RETURN          reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    YIELD           reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    RAISE           reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    DEL             reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    IDENTIFIER      reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    MINUS           reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    PLUS            reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    TILDE           reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    EXMARK          reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    NOT             reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    ASSERT          reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    LPAREN          reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    INTLITERAL      reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    FLOATLITERAL    reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    BOOLLITERAL     reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    STRINGLITERAL   reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    DOCSTRING       reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    NONE            reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    LAMBDA          reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    LBRACKET        reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    LCURLY          reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    $end            reduce using rule 37 (methodblock -> subroutine_definition methodblock .)
    DEDENT          reduce using rule 37 (methodblock -> subroutine_definition methodblock .)


state 221

    (256) function_definition -> DEF error . LPAREN argumentlist RPAREN ARROW type COLON suite
    (259) procedure_definition -> DEF error . LPAREN argumentlist RPAREN COLON suite

    LPAREN          shift and go to state 331


state 222

    (41) function_definition -> DEF IDENTIFIER . LPAREN argumentlist RPAREN ARROW type COLON suite
    (257) function_definition -> DEF IDENTIFIER . LPAREN argumentlist error ARROW type COLON suite
    (258) function_definition -> DEF IDENTIFIER . LPAREN argumentlist RPAREN ARROW error COLON suite
    (42) procedure_definition -> DEF IDENTIFIER . LPAREN argumentlist RPAREN COLON suite
    (260) procedure_definition -> DEF IDENTIFIER . LPAREN argumentlist error COLON suite

    LPAREN          shift and go to state 332


state 223

    (33) class_definition -> CLASS IDENTIFIER opt_extends . COLON NL INDENT class_suite DEDENT
    (254) class_definition -> CLASS IDENTIFIER opt_extends . error NL INDENT class_suite DEDENT
    (255) class_definition -> CLASS IDENTIFIER opt_extends . COLON NL INDENT error DEDENT

    COLON           shift and go to state 333
    error           shift and go to state 334


state 224

    (35) opt_extends -> EXTENDS . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 335

state 225

    (36) opt_extends -> empty . empty
    (3) empty -> .

    COLON           reduce using rule 3 (empty -> .)
    error           reduce using rule 3 (empty -> .)

    empty                          shift and go to state 336

state 226

    (238) list_literal -> LBRACKET expressionlist RBRACKET .

    PLUS            reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    MINUS           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    TIMES           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    DIVIDE          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    PERCENT         reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    INTDIV          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    POW             reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    BITOR           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    BITAND          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    LSHIFT          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    RSHIFT          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    EQUALTO         reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    NEQUALTO        reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    LT              reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    LE              reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    GT              reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    GE              reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    REQUALTO        reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    BOOLOR          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    BOOLAND         reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    OR              reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    AND             reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    CARET           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    LPAREN          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    LBRACKET        reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    QMARK           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    DOT             reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    IS              reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    ISNOT           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    IN              reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    NOTIN           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    COMMA           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    RBRACKET        reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    NL              reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    SEMICOLON       reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    RPAREN          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    COLON           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    RCURLY          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    DOTDOT          reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    error           reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)
    COLONCOLON      reduce using rule 238 (list_literal -> LBRACKET expressionlist RBRACKET .)


state 227

    (216) nonempty_expressionlist -> nonempty_expressionlist COMMA . nonempty_expressionlist
    (215) nonempty_expressionlist -> . expression
    (216) nonempty_expressionlist -> . nonempty_expressionlist COMMA nonempty_expressionlist
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    nonempty_expressionlist        shift and go to state 337
    ternary                        shift and go to state 92
    expression                     shift and go to state 121
    grouping                       shift and go to state 42

state 228

    (291) list_literal -> LBRACKET error RBRACKET .

    PLUS            reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    MINUS           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    TIMES           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    DIVIDE          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    PERCENT         reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    INTDIV          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    POW             reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    BITOR           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    BITAND          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    LSHIFT          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    RSHIFT          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    EQUALTO         reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    NEQUALTO        reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    LT              reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    LE              reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    GT              reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    GE              reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    REQUALTO        reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    BOOLOR          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    BOOLAND         reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    OR              reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    AND             reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    CARET           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    LPAREN          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    LBRACKET        reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    QMARK           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    DOT             reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    IS              reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    ISNOT           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    IN              reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    NOTIN           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    COMMA           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    RBRACKET        reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    NL              reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    SEMICOLON       reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    RPAREN          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    COLON           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    RCURLY          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    DOTDOT          reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    error           reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)
    COLONCOLON      reduce using rule 291 (list_literal -> LBRACKET error RBRACKET .)


state 229

    (212) function_call -> expression LPAREN . expressionlist RPAREN
    (213) expressionlist -> . nonempty_expressionlist
    (214) expressionlist -> . empty
    (215) nonempty_expressionlist -> . expression
    (216) nonempty_expressionlist -> . nonempty_expressionlist COMMA nonempty_expressionlist
    (3) empty -> .
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    RPAREN          reduce using rule 3 (empty -> .)
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    expressionlist                 shift and go to state 338
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    nonempty_expressionlist        shift and go to state 115
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    empty                          shift and go to state 119
    ternary                        shift and go to state 92
    expression                     shift and go to state 121
    grouping                       shift and go to state 42

state 230

    (103) assignment -> indexing assignment_operator expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    NL              reduce using rule 103 (assignment -> indexing assignment_operator expression .)
    SEMICOLON       reduce using rule 103 (assignment -> indexing assignment_operator expression .)
    RPAREN          reduce using rule 103 (assignment -> indexing assignment_operator expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 231

    (104) assignment -> slicing assignment_operator expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    NL              reduce using rule 104 (assignment -> slicing assignment_operator expression .)
    SEMICOLON       reduce using rule 104 (assignment -> slicing assignment_operator expression .)
    RPAREN          reduce using rule 104 (assignment -> slicing assignment_operator expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 232

    (264) for_loop -> FOR error IN . expression COLON suite
    (266) for_loop -> FOR error IN . expression DOTDOT expression COLON suite
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 339
    grouping                       shift and go to state 42

state 233

    (80) for_loop -> FOR IDENTIFIER IN . expression COLON suite
    (81) for_loop -> FOR IDENTIFIER IN . expression DOTDOT expression COLON suite
    (265) for_loop -> FOR IDENTIFIER IN . error COLON suite
    (267) for_loop -> FOR IDENTIFIER IN . error DOTDOT expression COLON suite
    (268) for_loop -> FOR IDENTIFIER IN . expression DOTDOT error COLON suite
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 340
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 341
    grouping                       shift and go to state 42

state 234

    (86) try_except -> TRY COLON suite . exceptlist_nonempty empty empty
    (87) try_except -> TRY COLON suite . exceptlist_nonempty except_else empty
    (88) try_except -> TRY COLON suite . exceptlist_nonempty empty except_finally
    (89) try_except -> TRY COLON suite . exceptlist_nonempty except_else except_finally
    (90) try_except -> TRY COLON suite . empty empty except_finally
    (96) exceptlist_nonempty -> . except_simple
    (97) exceptlist_nonempty -> . except_alias
    (98) exceptlist_nonempty -> . except_specific
    (3) empty -> .
    (91) except_simple -> . EXCEPT COLON suite
    (92) except_alias -> . EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist
    (271) except_alias -> . EXCEPT error AS IDENTIFIER COLON suite exceptlist
    (272) except_alias -> . EXCEPT IDENTIFIER AS error COLON suite exceptlist
    (93) except_specific -> . EXCEPT IDENTIFIER COLON suite exceptlist
    (273) except_specific -> . EXCEPT error COLON suite exceptlist

    FINALLY         reduce using rule 3 (empty -> .)
    EXCEPT          shift and go to state 345

    except_simple                  shift and go to state 342
    except_specific                shift and go to state 343
    exceptlist_nonempty            shift and go to state 344
    except_alias                   shift and go to state 346
    empty                          shift and go to state 347

state 235

    (51) suite -> NL . INDENT optdoc block DEDENT

    INDENT          shift and go to state 348


state 236

    (52) suite -> statement_simple . NL

    NL              shift and go to state 349


state 237

    (60) statement_complex -> statement_multi SEMICOLON NL .

    IF              reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    TRY             reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    WHILE           reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    FOR             reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    CONTINUE        reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    BREAK           reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    PASS            reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    RETURN          reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    YIELD           reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    RAISE           reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    DEL             reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    IDENTIFIER      reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    MINUS           reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    PLUS            reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    TILDE           reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    EXMARK          reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    NOT             reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    ASSERT          reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    LPAREN          reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    INTLITERAL      reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    FLOATLITERAL    reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    BOOLLITERAL     reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    STRINGLITERAL   reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    DOCSTRING       reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    NONE            reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    LAMBDA          reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    LBRACKET        reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    LCURLY          reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    DEDENT          reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)
    $end            reduce using rule 60 (statement_complex -> statement_multi SEMICOLON NL .)


state 238

    (61) statement_multi -> statement_multi SEMICOLON statement_simple .

    NL              reduce using rule 61 (statement_multi -> statement_multi SEMICOLON statement_simple .)
    SEMICOLON       reduce using rule 61 (statement_multi -> statement_multi SEMICOLON statement_simple .)


state 239

    (206) calculation -> expression CARET expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 206 (calculation -> expression CARET expression .)
    BITOR           reduce using rule 206 (calculation -> expression CARET expression .)
    EQUALTO         reduce using rule 206 (calculation -> expression CARET expression .)
    NEQUALTO        reduce using rule 206 (calculation -> expression CARET expression .)
    LT              reduce using rule 206 (calculation -> expression CARET expression .)
    LE              reduce using rule 206 (calculation -> expression CARET expression .)
    GT              reduce using rule 206 (calculation -> expression CARET expression .)
    GE              reduce using rule 206 (calculation -> expression CARET expression .)
    REQUALTO        reduce using rule 206 (calculation -> expression CARET expression .)
    BOOLOR          reduce using rule 206 (calculation -> expression CARET expression .)
    BOOLAND         reduce using rule 206 (calculation -> expression CARET expression .)
    OR              reduce using rule 206 (calculation -> expression CARET expression .)
    AND             reduce using rule 206 (calculation -> expression CARET expression .)
    CARET           reduce using rule 206 (calculation -> expression CARET expression .)
    QMARK           reduce using rule 206 (calculation -> expression CARET expression .)
    IS              reduce using rule 206 (calculation -> expression CARET expression .)
    ISNOT           reduce using rule 206 (calculation -> expression CARET expression .)
    IN              reduce using rule 206 (calculation -> expression CARET expression .)
    NOTIN           reduce using rule 206 (calculation -> expression CARET expression .)
    COMMA           reduce using rule 206 (calculation -> expression CARET expression .)
    RBRACKET        reduce using rule 206 (calculation -> expression CARET expression .)
    NL              reduce using rule 206 (calculation -> expression CARET expression .)
    SEMICOLON       reduce using rule 206 (calculation -> expression CARET expression .)
    RPAREN          reduce using rule 206 (calculation -> expression CARET expression .)
    COLON           reduce using rule 206 (calculation -> expression CARET expression .)
    RCURLY          reduce using rule 206 (calculation -> expression CARET expression .)
    DOTDOT          reduce using rule 206 (calculation -> expression CARET expression .)
    error           reduce using rule 206 (calculation -> expression CARET expression .)
    COLONCOLON      reduce using rule 206 (calculation -> expression CARET expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! LBRACKET        [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! DOT             [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! PLUS            [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! MINUS           [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! TIMES           [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! DIVIDE          [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! INTDIV          [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! POW             [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! BITAND          [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! LSHIFT          [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! RSHIFT          [ reduce using rule 206 (calculation -> expression CARET expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BITOR           [ shift and go to state 164 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 240

    (189) calculation -> expression INTDIV expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 189 (calculation -> expression INTDIV expression .)
    MINUS           reduce using rule 189 (calculation -> expression INTDIV expression .)
    TIMES           reduce using rule 189 (calculation -> expression INTDIV expression .)
    DIVIDE          reduce using rule 189 (calculation -> expression INTDIV expression .)
    PERCENT         reduce using rule 189 (calculation -> expression INTDIV expression .)
    INTDIV          reduce using rule 189 (calculation -> expression INTDIV expression .)
    BITOR           reduce using rule 189 (calculation -> expression INTDIV expression .)
    BITAND          reduce using rule 189 (calculation -> expression INTDIV expression .)
    LSHIFT          reduce using rule 189 (calculation -> expression INTDIV expression .)
    RSHIFT          reduce using rule 189 (calculation -> expression INTDIV expression .)
    EQUALTO         reduce using rule 189 (calculation -> expression INTDIV expression .)
    NEQUALTO        reduce using rule 189 (calculation -> expression INTDIV expression .)
    LT              reduce using rule 189 (calculation -> expression INTDIV expression .)
    LE              reduce using rule 189 (calculation -> expression INTDIV expression .)
    GT              reduce using rule 189 (calculation -> expression INTDIV expression .)
    GE              reduce using rule 189 (calculation -> expression INTDIV expression .)
    REQUALTO        reduce using rule 189 (calculation -> expression INTDIV expression .)
    BOOLOR          reduce using rule 189 (calculation -> expression INTDIV expression .)
    BOOLAND         reduce using rule 189 (calculation -> expression INTDIV expression .)
    OR              reduce using rule 189 (calculation -> expression INTDIV expression .)
    AND             reduce using rule 189 (calculation -> expression INTDIV expression .)
    CARET           reduce using rule 189 (calculation -> expression INTDIV expression .)
    QMARK           reduce using rule 189 (calculation -> expression INTDIV expression .)
    IS              reduce using rule 189 (calculation -> expression INTDIV expression .)
    ISNOT           reduce using rule 189 (calculation -> expression INTDIV expression .)
    IN              reduce using rule 189 (calculation -> expression INTDIV expression .)
    NOTIN           reduce using rule 189 (calculation -> expression INTDIV expression .)
    COMMA           reduce using rule 189 (calculation -> expression INTDIV expression .)
    RBRACKET        reduce using rule 189 (calculation -> expression INTDIV expression .)
    NL              reduce using rule 189 (calculation -> expression INTDIV expression .)
    SEMICOLON       reduce using rule 189 (calculation -> expression INTDIV expression .)
    RPAREN          reduce using rule 189 (calculation -> expression INTDIV expression .)
    COLON           reduce using rule 189 (calculation -> expression INTDIV expression .)
    RCURLY          reduce using rule 189 (calculation -> expression INTDIV expression .)
    DOTDOT          reduce using rule 189 (calculation -> expression INTDIV expression .)
    error           reduce using rule 189 (calculation -> expression INTDIV expression .)
    COLONCOLON      reduce using rule 189 (calculation -> expression INTDIV expression .)
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 189 (calculation -> expression INTDIV expression .) ]
  ! LBRACKET        [ reduce using rule 189 (calculation -> expression INTDIV expression .) ]
  ! DOT             [ reduce using rule 189 (calculation -> expression INTDIV expression .) ]
  ! POW             [ reduce using rule 189 (calculation -> expression INTDIV expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! TIMES           [ shift and go to state 171 ]
  ! DIVIDE          [ shift and go to state 166 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! INTDIV          [ shift and go to state 151 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 241

    (194) calculation -> expression RSHIFT expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 194 (calculation -> expression RSHIFT expression .)
    BITOR           reduce using rule 194 (calculation -> expression RSHIFT expression .)
    BITAND          reduce using rule 194 (calculation -> expression RSHIFT expression .)
    LSHIFT          reduce using rule 194 (calculation -> expression RSHIFT expression .)
    RSHIFT          reduce using rule 194 (calculation -> expression RSHIFT expression .)
    EQUALTO         reduce using rule 194 (calculation -> expression RSHIFT expression .)
    NEQUALTO        reduce using rule 194 (calculation -> expression RSHIFT expression .)
    LT              reduce using rule 194 (calculation -> expression RSHIFT expression .)
    LE              reduce using rule 194 (calculation -> expression RSHIFT expression .)
    GT              reduce using rule 194 (calculation -> expression RSHIFT expression .)
    GE              reduce using rule 194 (calculation -> expression RSHIFT expression .)
    REQUALTO        reduce using rule 194 (calculation -> expression RSHIFT expression .)
    BOOLOR          reduce using rule 194 (calculation -> expression RSHIFT expression .)
    BOOLAND         reduce using rule 194 (calculation -> expression RSHIFT expression .)
    OR              reduce using rule 194 (calculation -> expression RSHIFT expression .)
    AND             reduce using rule 194 (calculation -> expression RSHIFT expression .)
    CARET           reduce using rule 194 (calculation -> expression RSHIFT expression .)
    QMARK           reduce using rule 194 (calculation -> expression RSHIFT expression .)
    IS              reduce using rule 194 (calculation -> expression RSHIFT expression .)
    ISNOT           reduce using rule 194 (calculation -> expression RSHIFT expression .)
    IN              reduce using rule 194 (calculation -> expression RSHIFT expression .)
    NOTIN           reduce using rule 194 (calculation -> expression RSHIFT expression .)
    COMMA           reduce using rule 194 (calculation -> expression RSHIFT expression .)
    RBRACKET        reduce using rule 194 (calculation -> expression RSHIFT expression .)
    NL              reduce using rule 194 (calculation -> expression RSHIFT expression .)
    SEMICOLON       reduce using rule 194 (calculation -> expression RSHIFT expression .)
    RPAREN          reduce using rule 194 (calculation -> expression RSHIFT expression .)
    COLON           reduce using rule 194 (calculation -> expression RSHIFT expression .)
    RCURLY          reduce using rule 194 (calculation -> expression RSHIFT expression .)
    DOTDOT          reduce using rule 194 (calculation -> expression RSHIFT expression .)
    error           reduce using rule 194 (calculation -> expression RSHIFT expression .)
    COLONCOLON      reduce using rule 194 (calculation -> expression RSHIFT expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 194 (calculation -> expression RSHIFT expression .) ]
  ! LBRACKET        [ reduce using rule 194 (calculation -> expression RSHIFT expression .) ]
  ! DOT             [ reduce using rule 194 (calculation -> expression RSHIFT expression .) ]
  ! PLUS            [ reduce using rule 194 (calculation -> expression RSHIFT expression .) ]
  ! MINUS           [ reduce using rule 194 (calculation -> expression RSHIFT expression .) ]
  ! TIMES           [ reduce using rule 194 (calculation -> expression RSHIFT expression .) ]
  ! DIVIDE          [ reduce using rule 194 (calculation -> expression RSHIFT expression .) ]
  ! INTDIV          [ reduce using rule 194 (calculation -> expression RSHIFT expression .) ]
  ! POW             [ reduce using rule 194 (calculation -> expression RSHIFT expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 242

    (203) calculation -> expression BOOLAND expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 203 (calculation -> expression BOOLAND expression .)
    BOOLOR          reduce using rule 203 (calculation -> expression BOOLAND expression .)
    BOOLAND         reduce using rule 203 (calculation -> expression BOOLAND expression .)
    OR              reduce using rule 203 (calculation -> expression BOOLAND expression .)
    AND             reduce using rule 203 (calculation -> expression BOOLAND expression .)
    CARET           reduce using rule 203 (calculation -> expression BOOLAND expression .)
    QMARK           reduce using rule 203 (calculation -> expression BOOLAND expression .)
    COMMA           reduce using rule 203 (calculation -> expression BOOLAND expression .)
    RBRACKET        reduce using rule 203 (calculation -> expression BOOLAND expression .)
    NL              reduce using rule 203 (calculation -> expression BOOLAND expression .)
    SEMICOLON       reduce using rule 203 (calculation -> expression BOOLAND expression .)
    RPAREN          reduce using rule 203 (calculation -> expression BOOLAND expression .)
    COLON           reduce using rule 203 (calculation -> expression BOOLAND expression .)
    RCURLY          reduce using rule 203 (calculation -> expression BOOLAND expression .)
    DOTDOT          reduce using rule 203 (calculation -> expression BOOLAND expression .)
    error           reduce using rule 203 (calculation -> expression BOOLAND expression .)
    COLONCOLON      reduce using rule 203 (calculation -> expression BOOLAND expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173

  ! LPAREN          [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! LBRACKET        [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! DOT             [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! PLUS            [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! MINUS           [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! TIMES           [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! DIVIDE          [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! INTDIV          [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! POW             [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! BITOR           [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! BITAND          [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! LSHIFT          [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! RSHIFT          [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! EQUALTO         [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! NEQUALTO        [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! LT              [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! LE              [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! GT              [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! GE              [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! REQUALTO        [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! IS              [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! ISNOT           [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! IN              [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! NOTIN           [ reduce using rule 203 (calculation -> expression BOOLAND expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]


state 243

    (122) slicing -> expression LBRACKET empty . COLON expression optslice RBRACKET
    (124) slicing -> expression LBRACKET empty . COLON empty optslice RBRACKET

    COLON           shift and go to state 350


state 244

    (274) indexing -> expression LBRACKET error . RBRACKET
    (275) slicing -> expression LBRACKET error . COLON expression optslice RBRACKET

    RBRACKET        shift and go to state 352
    COLON           shift and go to state 351


state 245

    (120) indexing -> expression LBRACKET expression . RBRACKET
    (121) slicing -> expression LBRACKET expression . COLON expression optslice RBRACKET
    (123) slicing -> expression LBRACKET expression . COLON empty optslice RBRACKET
    (276) slicing -> expression LBRACKET expression . COLON expression error RBRACKET
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    RBRACKET        shift and go to state 354
    COLON           shift and go to state 353
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 246

    (193) calculation -> expression LSHIFT expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 193 (calculation -> expression LSHIFT expression .)
    BITOR           reduce using rule 193 (calculation -> expression LSHIFT expression .)
    BITAND          reduce using rule 193 (calculation -> expression LSHIFT expression .)
    LSHIFT          reduce using rule 193 (calculation -> expression LSHIFT expression .)
    RSHIFT          reduce using rule 193 (calculation -> expression LSHIFT expression .)
    EQUALTO         reduce using rule 193 (calculation -> expression LSHIFT expression .)
    NEQUALTO        reduce using rule 193 (calculation -> expression LSHIFT expression .)
    LT              reduce using rule 193 (calculation -> expression LSHIFT expression .)
    LE              reduce using rule 193 (calculation -> expression LSHIFT expression .)
    GT              reduce using rule 193 (calculation -> expression LSHIFT expression .)
    GE              reduce using rule 193 (calculation -> expression LSHIFT expression .)
    REQUALTO        reduce using rule 193 (calculation -> expression LSHIFT expression .)
    BOOLOR          reduce using rule 193 (calculation -> expression LSHIFT expression .)
    BOOLAND         reduce using rule 193 (calculation -> expression LSHIFT expression .)
    OR              reduce using rule 193 (calculation -> expression LSHIFT expression .)
    AND             reduce using rule 193 (calculation -> expression LSHIFT expression .)
    CARET           reduce using rule 193 (calculation -> expression LSHIFT expression .)
    QMARK           reduce using rule 193 (calculation -> expression LSHIFT expression .)
    IS              reduce using rule 193 (calculation -> expression LSHIFT expression .)
    ISNOT           reduce using rule 193 (calculation -> expression LSHIFT expression .)
    IN              reduce using rule 193 (calculation -> expression LSHIFT expression .)
    NOTIN           reduce using rule 193 (calculation -> expression LSHIFT expression .)
    COMMA           reduce using rule 193 (calculation -> expression LSHIFT expression .)
    RBRACKET        reduce using rule 193 (calculation -> expression LSHIFT expression .)
    NL              reduce using rule 193 (calculation -> expression LSHIFT expression .)
    SEMICOLON       reduce using rule 193 (calculation -> expression LSHIFT expression .)
    RPAREN          reduce using rule 193 (calculation -> expression LSHIFT expression .)
    COLON           reduce using rule 193 (calculation -> expression LSHIFT expression .)
    RCURLY          reduce using rule 193 (calculation -> expression LSHIFT expression .)
    DOTDOT          reduce using rule 193 (calculation -> expression LSHIFT expression .)
    error           reduce using rule 193 (calculation -> expression LSHIFT expression .)
    COLONCOLON      reduce using rule 193 (calculation -> expression LSHIFT expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 193 (calculation -> expression LSHIFT expression .) ]
  ! LBRACKET        [ reduce using rule 193 (calculation -> expression LSHIFT expression .) ]
  ! DOT             [ reduce using rule 193 (calculation -> expression LSHIFT expression .) ]
  ! PLUS            [ reduce using rule 193 (calculation -> expression LSHIFT expression .) ]
  ! MINUS           [ reduce using rule 193 (calculation -> expression LSHIFT expression .) ]
  ! TIMES           [ reduce using rule 193 (calculation -> expression LSHIFT expression .) ]
  ! DIVIDE          [ reduce using rule 193 (calculation -> expression LSHIFT expression .) ]
  ! INTDIV          [ reduce using rule 193 (calculation -> expression LSHIFT expression .) ]
  ! POW             [ reduce using rule 193 (calculation -> expression LSHIFT expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 247

    (185) calculation -> expression MINUS expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 185 (calculation -> expression MINUS expression .)
    MINUS           reduce using rule 185 (calculation -> expression MINUS expression .)
    PERCENT         reduce using rule 185 (calculation -> expression MINUS expression .)
    BITOR           reduce using rule 185 (calculation -> expression MINUS expression .)
    BITAND          reduce using rule 185 (calculation -> expression MINUS expression .)
    LSHIFT          reduce using rule 185 (calculation -> expression MINUS expression .)
    RSHIFT          reduce using rule 185 (calculation -> expression MINUS expression .)
    EQUALTO         reduce using rule 185 (calculation -> expression MINUS expression .)
    NEQUALTO        reduce using rule 185 (calculation -> expression MINUS expression .)
    LT              reduce using rule 185 (calculation -> expression MINUS expression .)
    LE              reduce using rule 185 (calculation -> expression MINUS expression .)
    GT              reduce using rule 185 (calculation -> expression MINUS expression .)
    GE              reduce using rule 185 (calculation -> expression MINUS expression .)
    REQUALTO        reduce using rule 185 (calculation -> expression MINUS expression .)
    BOOLOR          reduce using rule 185 (calculation -> expression MINUS expression .)
    BOOLAND         reduce using rule 185 (calculation -> expression MINUS expression .)
    OR              reduce using rule 185 (calculation -> expression MINUS expression .)
    AND             reduce using rule 185 (calculation -> expression MINUS expression .)
    CARET           reduce using rule 185 (calculation -> expression MINUS expression .)
    QMARK           reduce using rule 185 (calculation -> expression MINUS expression .)
    IS              reduce using rule 185 (calculation -> expression MINUS expression .)
    ISNOT           reduce using rule 185 (calculation -> expression MINUS expression .)
    IN              reduce using rule 185 (calculation -> expression MINUS expression .)
    NOTIN           reduce using rule 185 (calculation -> expression MINUS expression .)
    COMMA           reduce using rule 185 (calculation -> expression MINUS expression .)
    RBRACKET        reduce using rule 185 (calculation -> expression MINUS expression .)
    NL              reduce using rule 185 (calculation -> expression MINUS expression .)
    SEMICOLON       reduce using rule 185 (calculation -> expression MINUS expression .)
    RPAREN          reduce using rule 185 (calculation -> expression MINUS expression .)
    COLON           reduce using rule 185 (calculation -> expression MINUS expression .)
    RCURLY          reduce using rule 185 (calculation -> expression MINUS expression .)
    DOTDOT          reduce using rule 185 (calculation -> expression MINUS expression .)
    error           reduce using rule 185 (calculation -> expression MINUS expression .)
    COLONCOLON      reduce using rule 185 (calculation -> expression MINUS expression .)
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 185 (calculation -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 185 (calculation -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 185 (calculation -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 185 (calculation -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 185 (calculation -> expression MINUS expression .) ]
  ! INTDIV          [ reduce using rule 185 (calculation -> expression MINUS expression .) ]
  ! POW             [ reduce using rule 185 (calculation -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 248

    (247) member -> expression DOT IDENTIFIER .

    PLUS            reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    MINUS           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    TIMES           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    DIVIDE          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    PERCENT         reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    INTDIV          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    POW             reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    BITOR           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    BITAND          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    LSHIFT          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    RSHIFT          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    EQUALTO         reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    NEQUALTO        reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    LT              reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    LE              reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    GT              reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    GE              reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    REQUALTO        reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    BOOLOR          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    BOOLAND         reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    OR              reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    AND             reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    CARET           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    LPAREN          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    LBRACKET        reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    QMARK           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    DOT             reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    IS              reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    ISNOT           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    IN              reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    NOTIN           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    COMMA           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    RBRACKET        reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    NL              reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    RPAREN          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    COLON           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    RCURLY          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    DOTDOT          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    error           reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    COLONCOLON      reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    EQUALS          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    PLUSEQU         reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    MINUSEQU        reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    TIMESEQU        reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    DIVEQU          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    MODEQU          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    BITANDEQU       reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    BITOREQU        reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    BITXOREQU       reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    LSHIFTEQU       reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    RSHIFTEQU       reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    POWEQU          reduce using rule 247 (member -> expression DOT IDENTIFIER .)
    INTDIVEQU       reduce using rule 247 (member -> expression DOT IDENTIFIER .)


state 249

    (198) calculation -> expression LE expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 198 (calculation -> expression LE expression .)
    EQUALTO         reduce using rule 198 (calculation -> expression LE expression .)
    NEQUALTO        reduce using rule 198 (calculation -> expression LE expression .)
    LT              reduce using rule 198 (calculation -> expression LE expression .)
    LE              reduce using rule 198 (calculation -> expression LE expression .)
    GT              reduce using rule 198 (calculation -> expression LE expression .)
    GE              reduce using rule 198 (calculation -> expression LE expression .)
    REQUALTO        reduce using rule 198 (calculation -> expression LE expression .)
    BOOLOR          reduce using rule 198 (calculation -> expression LE expression .)
    BOOLAND         reduce using rule 198 (calculation -> expression LE expression .)
    OR              reduce using rule 198 (calculation -> expression LE expression .)
    AND             reduce using rule 198 (calculation -> expression LE expression .)
    CARET           reduce using rule 198 (calculation -> expression LE expression .)
    QMARK           reduce using rule 198 (calculation -> expression LE expression .)
    IS              reduce using rule 198 (calculation -> expression LE expression .)
    ISNOT           reduce using rule 198 (calculation -> expression LE expression .)
    IN              reduce using rule 198 (calculation -> expression LE expression .)
    NOTIN           reduce using rule 198 (calculation -> expression LE expression .)
    COMMA           reduce using rule 198 (calculation -> expression LE expression .)
    RBRACKET        reduce using rule 198 (calculation -> expression LE expression .)
    NL              reduce using rule 198 (calculation -> expression LE expression .)
    SEMICOLON       reduce using rule 198 (calculation -> expression LE expression .)
    RPAREN          reduce using rule 198 (calculation -> expression LE expression .)
    COLON           reduce using rule 198 (calculation -> expression LE expression .)
    RCURLY          reduce using rule 198 (calculation -> expression LE expression .)
    DOTDOT          reduce using rule 198 (calculation -> expression LE expression .)
    error           reduce using rule 198 (calculation -> expression LE expression .)
    COLONCOLON      reduce using rule 198 (calculation -> expression LE expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! LBRACKET        [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! DOT             [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! INTDIV          [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! POW             [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! BITOR           [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! BITAND          [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! LSHIFT          [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! RSHIFT          [ reduce using rule 198 (calculation -> expression LE expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 250

    (190) calculation -> expression POW expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 190 (calculation -> expression POW expression .)
    MINUS           reduce using rule 190 (calculation -> expression POW expression .)
    TIMES           reduce using rule 190 (calculation -> expression POW expression .)
    DIVIDE          reduce using rule 190 (calculation -> expression POW expression .)
    PERCENT         reduce using rule 190 (calculation -> expression POW expression .)
    INTDIV          reduce using rule 190 (calculation -> expression POW expression .)
    BITOR           reduce using rule 190 (calculation -> expression POW expression .)
    BITAND          reduce using rule 190 (calculation -> expression POW expression .)
    LSHIFT          reduce using rule 190 (calculation -> expression POW expression .)
    RSHIFT          reduce using rule 190 (calculation -> expression POW expression .)
    EQUALTO         reduce using rule 190 (calculation -> expression POW expression .)
    NEQUALTO        reduce using rule 190 (calculation -> expression POW expression .)
    LT              reduce using rule 190 (calculation -> expression POW expression .)
    LE              reduce using rule 190 (calculation -> expression POW expression .)
    GT              reduce using rule 190 (calculation -> expression POW expression .)
    GE              reduce using rule 190 (calculation -> expression POW expression .)
    REQUALTO        reduce using rule 190 (calculation -> expression POW expression .)
    BOOLOR          reduce using rule 190 (calculation -> expression POW expression .)
    BOOLAND         reduce using rule 190 (calculation -> expression POW expression .)
    OR              reduce using rule 190 (calculation -> expression POW expression .)
    AND             reduce using rule 190 (calculation -> expression POW expression .)
    CARET           reduce using rule 190 (calculation -> expression POW expression .)
    QMARK           reduce using rule 190 (calculation -> expression POW expression .)
    IS              reduce using rule 190 (calculation -> expression POW expression .)
    ISNOT           reduce using rule 190 (calculation -> expression POW expression .)
    IN              reduce using rule 190 (calculation -> expression POW expression .)
    NOTIN           reduce using rule 190 (calculation -> expression POW expression .)
    COMMA           reduce using rule 190 (calculation -> expression POW expression .)
    RBRACKET        reduce using rule 190 (calculation -> expression POW expression .)
    NL              reduce using rule 190 (calculation -> expression POW expression .)
    SEMICOLON       reduce using rule 190 (calculation -> expression POW expression .)
    RPAREN          reduce using rule 190 (calculation -> expression POW expression .)
    COLON           reduce using rule 190 (calculation -> expression POW expression .)
    RCURLY          reduce using rule 190 (calculation -> expression POW expression .)
    DOTDOT          reduce using rule 190 (calculation -> expression POW expression .)
    error           reduce using rule 190 (calculation -> expression POW expression .)
    COLONCOLON      reduce using rule 190 (calculation -> expression POW expression .)
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 190 (calculation -> expression POW expression .) ]
  ! LBRACKET        [ reduce using rule 190 (calculation -> expression POW expression .) ]
  ! DOT             [ reduce using rule 190 (calculation -> expression POW expression .) ]
  ! POW             [ reduce using rule 190 (calculation -> expression POW expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! TIMES           [ shift and go to state 171 ]
  ! DIVIDE          [ shift and go to state 166 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! INTDIV          [ shift and go to state 151 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 251

    (195) calculation -> expression EQUALTO expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 195 (calculation -> expression EQUALTO expression .)
    EQUALTO         reduce using rule 195 (calculation -> expression EQUALTO expression .)
    NEQUALTO        reduce using rule 195 (calculation -> expression EQUALTO expression .)
    LT              reduce using rule 195 (calculation -> expression EQUALTO expression .)
    LE              reduce using rule 195 (calculation -> expression EQUALTO expression .)
    GT              reduce using rule 195 (calculation -> expression EQUALTO expression .)
    GE              reduce using rule 195 (calculation -> expression EQUALTO expression .)
    REQUALTO        reduce using rule 195 (calculation -> expression EQUALTO expression .)
    BOOLOR          reduce using rule 195 (calculation -> expression EQUALTO expression .)
    BOOLAND         reduce using rule 195 (calculation -> expression EQUALTO expression .)
    OR              reduce using rule 195 (calculation -> expression EQUALTO expression .)
    AND             reduce using rule 195 (calculation -> expression EQUALTO expression .)
    CARET           reduce using rule 195 (calculation -> expression EQUALTO expression .)
    QMARK           reduce using rule 195 (calculation -> expression EQUALTO expression .)
    IS              reduce using rule 195 (calculation -> expression EQUALTO expression .)
    ISNOT           reduce using rule 195 (calculation -> expression EQUALTO expression .)
    IN              reduce using rule 195 (calculation -> expression EQUALTO expression .)
    NOTIN           reduce using rule 195 (calculation -> expression EQUALTO expression .)
    COMMA           reduce using rule 195 (calculation -> expression EQUALTO expression .)
    RBRACKET        reduce using rule 195 (calculation -> expression EQUALTO expression .)
    NL              reduce using rule 195 (calculation -> expression EQUALTO expression .)
    SEMICOLON       reduce using rule 195 (calculation -> expression EQUALTO expression .)
    RPAREN          reduce using rule 195 (calculation -> expression EQUALTO expression .)
    COLON           reduce using rule 195 (calculation -> expression EQUALTO expression .)
    RCURLY          reduce using rule 195 (calculation -> expression EQUALTO expression .)
    DOTDOT          reduce using rule 195 (calculation -> expression EQUALTO expression .)
    error           reduce using rule 195 (calculation -> expression EQUALTO expression .)
    COLONCOLON      reduce using rule 195 (calculation -> expression EQUALTO expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! LBRACKET        [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! DOT             [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! PLUS            [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! MINUS           [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! TIMES           [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! DIVIDE          [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! INTDIV          [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! POW             [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! BITOR           [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! BITAND          [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! LSHIFT          [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! RSHIFT          [ reduce using rule 195 (calculation -> expression EQUALTO expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 252

    (197) calculation -> expression LT expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 197 (calculation -> expression LT expression .)
    EQUALTO         reduce using rule 197 (calculation -> expression LT expression .)
    NEQUALTO        reduce using rule 197 (calculation -> expression LT expression .)
    LT              reduce using rule 197 (calculation -> expression LT expression .)
    LE              reduce using rule 197 (calculation -> expression LT expression .)
    GT              reduce using rule 197 (calculation -> expression LT expression .)
    GE              reduce using rule 197 (calculation -> expression LT expression .)
    REQUALTO        reduce using rule 197 (calculation -> expression LT expression .)
    BOOLOR          reduce using rule 197 (calculation -> expression LT expression .)
    BOOLAND         reduce using rule 197 (calculation -> expression LT expression .)
    OR              reduce using rule 197 (calculation -> expression LT expression .)
    AND             reduce using rule 197 (calculation -> expression LT expression .)
    CARET           reduce using rule 197 (calculation -> expression LT expression .)
    QMARK           reduce using rule 197 (calculation -> expression LT expression .)
    IS              reduce using rule 197 (calculation -> expression LT expression .)
    ISNOT           reduce using rule 197 (calculation -> expression LT expression .)
    IN              reduce using rule 197 (calculation -> expression LT expression .)
    NOTIN           reduce using rule 197 (calculation -> expression LT expression .)
    COMMA           reduce using rule 197 (calculation -> expression LT expression .)
    RBRACKET        reduce using rule 197 (calculation -> expression LT expression .)
    NL              reduce using rule 197 (calculation -> expression LT expression .)
    SEMICOLON       reduce using rule 197 (calculation -> expression LT expression .)
    RPAREN          reduce using rule 197 (calculation -> expression LT expression .)
    COLON           reduce using rule 197 (calculation -> expression LT expression .)
    RCURLY          reduce using rule 197 (calculation -> expression LT expression .)
    DOTDOT          reduce using rule 197 (calculation -> expression LT expression .)
    error           reduce using rule 197 (calculation -> expression LT expression .)
    COLONCOLON      reduce using rule 197 (calculation -> expression LT expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! LBRACKET        [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! DOT             [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! INTDIV          [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! POW             [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! BITOR           [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! BITAND          [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! LSHIFT          [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! RSHIFT          [ reduce using rule 197 (calculation -> expression LT expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 253

    (184) calculation -> expression PLUS expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 184 (calculation -> expression PLUS expression .)
    MINUS           reduce using rule 184 (calculation -> expression PLUS expression .)
    PERCENT         reduce using rule 184 (calculation -> expression PLUS expression .)
    BITOR           reduce using rule 184 (calculation -> expression PLUS expression .)
    BITAND          reduce using rule 184 (calculation -> expression PLUS expression .)
    LSHIFT          reduce using rule 184 (calculation -> expression PLUS expression .)
    RSHIFT          reduce using rule 184 (calculation -> expression PLUS expression .)
    EQUALTO         reduce using rule 184 (calculation -> expression PLUS expression .)
    NEQUALTO        reduce using rule 184 (calculation -> expression PLUS expression .)
    LT              reduce using rule 184 (calculation -> expression PLUS expression .)
    LE              reduce using rule 184 (calculation -> expression PLUS expression .)
    GT              reduce using rule 184 (calculation -> expression PLUS expression .)
    GE              reduce using rule 184 (calculation -> expression PLUS expression .)
    REQUALTO        reduce using rule 184 (calculation -> expression PLUS expression .)
    BOOLOR          reduce using rule 184 (calculation -> expression PLUS expression .)
    BOOLAND         reduce using rule 184 (calculation -> expression PLUS expression .)
    OR              reduce using rule 184 (calculation -> expression PLUS expression .)
    AND             reduce using rule 184 (calculation -> expression PLUS expression .)
    CARET           reduce using rule 184 (calculation -> expression PLUS expression .)
    QMARK           reduce using rule 184 (calculation -> expression PLUS expression .)
    IS              reduce using rule 184 (calculation -> expression PLUS expression .)
    ISNOT           reduce using rule 184 (calculation -> expression PLUS expression .)
    IN              reduce using rule 184 (calculation -> expression PLUS expression .)
    NOTIN           reduce using rule 184 (calculation -> expression PLUS expression .)
    COMMA           reduce using rule 184 (calculation -> expression PLUS expression .)
    RBRACKET        reduce using rule 184 (calculation -> expression PLUS expression .)
    NL              reduce using rule 184 (calculation -> expression PLUS expression .)
    SEMICOLON       reduce using rule 184 (calculation -> expression PLUS expression .)
    RPAREN          reduce using rule 184 (calculation -> expression PLUS expression .)
    COLON           reduce using rule 184 (calculation -> expression PLUS expression .)
    RCURLY          reduce using rule 184 (calculation -> expression PLUS expression .)
    DOTDOT          reduce using rule 184 (calculation -> expression PLUS expression .)
    error           reduce using rule 184 (calculation -> expression PLUS expression .)
    COLONCOLON      reduce using rule 184 (calculation -> expression PLUS expression .)
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 184 (calculation -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 184 (calculation -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 184 (calculation -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 184 (calculation -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 184 (calculation -> expression PLUS expression .) ]
  ! INTDIV          [ reduce using rule 184 (calculation -> expression PLUS expression .) ]
  ! POW             [ reduce using rule 184 (calculation -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 254

    (249) identity -> expression ISNOT expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 249 (identity -> expression ISNOT expression .)
    EQUALTO         reduce using rule 249 (identity -> expression ISNOT expression .)
    NEQUALTO        reduce using rule 249 (identity -> expression ISNOT expression .)
    LT              reduce using rule 249 (identity -> expression ISNOT expression .)
    LE              reduce using rule 249 (identity -> expression ISNOT expression .)
    GT              reduce using rule 249 (identity -> expression ISNOT expression .)
    GE              reduce using rule 249 (identity -> expression ISNOT expression .)
    REQUALTO        reduce using rule 249 (identity -> expression ISNOT expression .)
    BOOLOR          reduce using rule 249 (identity -> expression ISNOT expression .)
    BOOLAND         reduce using rule 249 (identity -> expression ISNOT expression .)
    OR              reduce using rule 249 (identity -> expression ISNOT expression .)
    AND             reduce using rule 249 (identity -> expression ISNOT expression .)
    CARET           reduce using rule 249 (identity -> expression ISNOT expression .)
    QMARK           reduce using rule 249 (identity -> expression ISNOT expression .)
    IS              reduce using rule 249 (identity -> expression ISNOT expression .)
    ISNOT           reduce using rule 249 (identity -> expression ISNOT expression .)
    IN              reduce using rule 249 (identity -> expression ISNOT expression .)
    NOTIN           reduce using rule 249 (identity -> expression ISNOT expression .)
    COMMA           reduce using rule 249 (identity -> expression ISNOT expression .)
    RBRACKET        reduce using rule 249 (identity -> expression ISNOT expression .)
    NL              reduce using rule 249 (identity -> expression ISNOT expression .)
    SEMICOLON       reduce using rule 249 (identity -> expression ISNOT expression .)
    RPAREN          reduce using rule 249 (identity -> expression ISNOT expression .)
    COLON           reduce using rule 249 (identity -> expression ISNOT expression .)
    RCURLY          reduce using rule 249 (identity -> expression ISNOT expression .)
    DOTDOT          reduce using rule 249 (identity -> expression ISNOT expression .)
    error           reduce using rule 249 (identity -> expression ISNOT expression .)
    COLONCOLON      reduce using rule 249 (identity -> expression ISNOT expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! LBRACKET        [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! DOT             [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! PLUS            [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! MINUS           [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! TIMES           [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! DIVIDE          [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! INTDIV          [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! POW             [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! BITOR           [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! BITAND          [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! LSHIFT          [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! RSHIFT          [ reduce using rule 249 (identity -> expression ISNOT expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 255

    (191) calculation -> expression BITOR expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 191 (calculation -> expression BITOR expression .)
    BITOR           reduce using rule 191 (calculation -> expression BITOR expression .)
    EQUALTO         reduce using rule 191 (calculation -> expression BITOR expression .)
    NEQUALTO        reduce using rule 191 (calculation -> expression BITOR expression .)
    LT              reduce using rule 191 (calculation -> expression BITOR expression .)
    LE              reduce using rule 191 (calculation -> expression BITOR expression .)
    GT              reduce using rule 191 (calculation -> expression BITOR expression .)
    GE              reduce using rule 191 (calculation -> expression BITOR expression .)
    REQUALTO        reduce using rule 191 (calculation -> expression BITOR expression .)
    BOOLOR          reduce using rule 191 (calculation -> expression BITOR expression .)
    BOOLAND         reduce using rule 191 (calculation -> expression BITOR expression .)
    OR              reduce using rule 191 (calculation -> expression BITOR expression .)
    AND             reduce using rule 191 (calculation -> expression BITOR expression .)
    CARET           reduce using rule 191 (calculation -> expression BITOR expression .)
    QMARK           reduce using rule 191 (calculation -> expression BITOR expression .)
    IS              reduce using rule 191 (calculation -> expression BITOR expression .)
    ISNOT           reduce using rule 191 (calculation -> expression BITOR expression .)
    IN              reduce using rule 191 (calculation -> expression BITOR expression .)
    NOTIN           reduce using rule 191 (calculation -> expression BITOR expression .)
    COMMA           reduce using rule 191 (calculation -> expression BITOR expression .)
    RBRACKET        reduce using rule 191 (calculation -> expression BITOR expression .)
    NL              reduce using rule 191 (calculation -> expression BITOR expression .)
    SEMICOLON       reduce using rule 191 (calculation -> expression BITOR expression .)
    RPAREN          reduce using rule 191 (calculation -> expression BITOR expression .)
    COLON           reduce using rule 191 (calculation -> expression BITOR expression .)
    RCURLY          reduce using rule 191 (calculation -> expression BITOR expression .)
    DOTDOT          reduce using rule 191 (calculation -> expression BITOR expression .)
    error           reduce using rule 191 (calculation -> expression BITOR expression .)
    COLONCOLON      reduce using rule 191 (calculation -> expression BITOR expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! LBRACKET        [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! DOT             [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! PLUS            [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! MINUS           [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! TIMES           [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! DIVIDE          [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! INTDIV          [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! POW             [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! BITAND          [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! LSHIFT          [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! RSHIFT          [ reduce using rule 191 (calculation -> expression BITOR expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BITOR           [ shift and go to state 164 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 256

    (199) calculation -> expression GT expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 199 (calculation -> expression GT expression .)
    EQUALTO         reduce using rule 199 (calculation -> expression GT expression .)
    NEQUALTO        reduce using rule 199 (calculation -> expression GT expression .)
    LT              reduce using rule 199 (calculation -> expression GT expression .)
    LE              reduce using rule 199 (calculation -> expression GT expression .)
    GT              reduce using rule 199 (calculation -> expression GT expression .)
    GE              reduce using rule 199 (calculation -> expression GT expression .)
    REQUALTO        reduce using rule 199 (calculation -> expression GT expression .)
    BOOLOR          reduce using rule 199 (calculation -> expression GT expression .)
    BOOLAND         reduce using rule 199 (calculation -> expression GT expression .)
    OR              reduce using rule 199 (calculation -> expression GT expression .)
    AND             reduce using rule 199 (calculation -> expression GT expression .)
    CARET           reduce using rule 199 (calculation -> expression GT expression .)
    QMARK           reduce using rule 199 (calculation -> expression GT expression .)
    IS              reduce using rule 199 (calculation -> expression GT expression .)
    ISNOT           reduce using rule 199 (calculation -> expression GT expression .)
    IN              reduce using rule 199 (calculation -> expression GT expression .)
    NOTIN           reduce using rule 199 (calculation -> expression GT expression .)
    COMMA           reduce using rule 199 (calculation -> expression GT expression .)
    RBRACKET        reduce using rule 199 (calculation -> expression GT expression .)
    NL              reduce using rule 199 (calculation -> expression GT expression .)
    SEMICOLON       reduce using rule 199 (calculation -> expression GT expression .)
    RPAREN          reduce using rule 199 (calculation -> expression GT expression .)
    COLON           reduce using rule 199 (calculation -> expression GT expression .)
    RCURLY          reduce using rule 199 (calculation -> expression GT expression .)
    DOTDOT          reduce using rule 199 (calculation -> expression GT expression .)
    error           reduce using rule 199 (calculation -> expression GT expression .)
    COLONCOLON      reduce using rule 199 (calculation -> expression GT expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! LBRACKET        [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! DOT             [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! INTDIV          [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! POW             [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! BITOR           [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! BITAND          [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! LSHIFT          [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! RSHIFT          [ reduce using rule 199 (calculation -> expression GT expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 257

    (187) calculation -> expression DIVIDE expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 187 (calculation -> expression DIVIDE expression .)
    MINUS           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    TIMES           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 187 (calculation -> expression DIVIDE expression .)
    PERCENT         reduce using rule 187 (calculation -> expression DIVIDE expression .)
    INTDIV          reduce using rule 187 (calculation -> expression DIVIDE expression .)
    BITOR           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    BITAND          reduce using rule 187 (calculation -> expression DIVIDE expression .)
    LSHIFT          reduce using rule 187 (calculation -> expression DIVIDE expression .)
    RSHIFT          reduce using rule 187 (calculation -> expression DIVIDE expression .)
    EQUALTO         reduce using rule 187 (calculation -> expression DIVIDE expression .)
    NEQUALTO        reduce using rule 187 (calculation -> expression DIVIDE expression .)
    LT              reduce using rule 187 (calculation -> expression DIVIDE expression .)
    LE              reduce using rule 187 (calculation -> expression DIVIDE expression .)
    GT              reduce using rule 187 (calculation -> expression DIVIDE expression .)
    GE              reduce using rule 187 (calculation -> expression DIVIDE expression .)
    REQUALTO        reduce using rule 187 (calculation -> expression DIVIDE expression .)
    BOOLOR          reduce using rule 187 (calculation -> expression DIVIDE expression .)
    BOOLAND         reduce using rule 187 (calculation -> expression DIVIDE expression .)
    OR              reduce using rule 187 (calculation -> expression DIVIDE expression .)
    AND             reduce using rule 187 (calculation -> expression DIVIDE expression .)
    CARET           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    QMARK           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    IS              reduce using rule 187 (calculation -> expression DIVIDE expression .)
    ISNOT           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    IN              reduce using rule 187 (calculation -> expression DIVIDE expression .)
    NOTIN           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    COMMA           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 187 (calculation -> expression DIVIDE expression .)
    NL              reduce using rule 187 (calculation -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 187 (calculation -> expression DIVIDE expression .)
    RPAREN          reduce using rule 187 (calculation -> expression DIVIDE expression .)
    COLON           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    RCURLY          reduce using rule 187 (calculation -> expression DIVIDE expression .)
    DOTDOT          reduce using rule 187 (calculation -> expression DIVIDE expression .)
    error           reduce using rule 187 (calculation -> expression DIVIDE expression .)
    COLONCOLON      reduce using rule 187 (calculation -> expression DIVIDE expression .)
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 187 (calculation -> expression DIVIDE expression .) ]
  ! LBRACKET        [ reduce using rule 187 (calculation -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 187 (calculation -> expression DIVIDE expression .) ]
  ! POW             [ reduce using rule 187 (calculation -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! TIMES           [ shift and go to state 171 ]
  ! DIVIDE          [ shift and go to state 166 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! INTDIV          [ shift and go to state 151 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 258

    (202) calculation -> expression BOOLOR expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 202 (calculation -> expression BOOLOR expression .)
    BOOLOR          reduce using rule 202 (calculation -> expression BOOLOR expression .)
    OR              reduce using rule 202 (calculation -> expression BOOLOR expression .)
    CARET           reduce using rule 202 (calculation -> expression BOOLOR expression .)
    QMARK           reduce using rule 202 (calculation -> expression BOOLOR expression .)
    COMMA           reduce using rule 202 (calculation -> expression BOOLOR expression .)
    RBRACKET        reduce using rule 202 (calculation -> expression BOOLOR expression .)
    NL              reduce using rule 202 (calculation -> expression BOOLOR expression .)
    SEMICOLON       reduce using rule 202 (calculation -> expression BOOLOR expression .)
    RPAREN          reduce using rule 202 (calculation -> expression BOOLOR expression .)
    COLON           reduce using rule 202 (calculation -> expression BOOLOR expression .)
    RCURLY          reduce using rule 202 (calculation -> expression BOOLOR expression .)
    DOTDOT          reduce using rule 202 (calculation -> expression BOOLOR expression .)
    error           reduce using rule 202 (calculation -> expression BOOLOR expression .)
    COLONCOLON      reduce using rule 202 (calculation -> expression BOOLOR expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLAND         shift and go to state 153
    AND             shift and go to state 177
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173

  ! LPAREN          [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! LBRACKET        [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! DOT             [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! PLUS            [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! MINUS           [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! TIMES           [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! DIVIDE          [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! INTDIV          [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! POW             [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! BITOR           [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! BITAND          [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! LSHIFT          [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! RSHIFT          [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! EQUALTO         [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! NEQUALTO        [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! LT              [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! LE              [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! GT              [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! GE              [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! REQUALTO        [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! BOOLAND         [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! AND             [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! IS              [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! ISNOT           [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! IN              [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! NOTIN           [ reduce using rule 202 (calculation -> expression BOOLOR expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! OR              [ shift and go to state 180 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]


state 259

    (248) identity -> expression IS expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 248 (identity -> expression IS expression .)
    EQUALTO         reduce using rule 248 (identity -> expression IS expression .)
    NEQUALTO        reduce using rule 248 (identity -> expression IS expression .)
    LT              reduce using rule 248 (identity -> expression IS expression .)
    LE              reduce using rule 248 (identity -> expression IS expression .)
    GT              reduce using rule 248 (identity -> expression IS expression .)
    GE              reduce using rule 248 (identity -> expression IS expression .)
    REQUALTO        reduce using rule 248 (identity -> expression IS expression .)
    BOOLOR          reduce using rule 248 (identity -> expression IS expression .)
    BOOLAND         reduce using rule 248 (identity -> expression IS expression .)
    OR              reduce using rule 248 (identity -> expression IS expression .)
    AND             reduce using rule 248 (identity -> expression IS expression .)
    CARET           reduce using rule 248 (identity -> expression IS expression .)
    QMARK           reduce using rule 248 (identity -> expression IS expression .)
    IS              reduce using rule 248 (identity -> expression IS expression .)
    ISNOT           reduce using rule 248 (identity -> expression IS expression .)
    IN              reduce using rule 248 (identity -> expression IS expression .)
    NOTIN           reduce using rule 248 (identity -> expression IS expression .)
    COMMA           reduce using rule 248 (identity -> expression IS expression .)
    RBRACKET        reduce using rule 248 (identity -> expression IS expression .)
    NL              reduce using rule 248 (identity -> expression IS expression .)
    SEMICOLON       reduce using rule 248 (identity -> expression IS expression .)
    RPAREN          reduce using rule 248 (identity -> expression IS expression .)
    COLON           reduce using rule 248 (identity -> expression IS expression .)
    RCURLY          reduce using rule 248 (identity -> expression IS expression .)
    DOTDOT          reduce using rule 248 (identity -> expression IS expression .)
    error           reduce using rule 248 (identity -> expression IS expression .)
    COLONCOLON      reduce using rule 248 (identity -> expression IS expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! LBRACKET        [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! DOT             [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! PLUS            [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! MINUS           [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! TIMES           [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! DIVIDE          [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! INTDIV          [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! POW             [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! BITOR           [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! BITAND          [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! LSHIFT          [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! RSHIFT          [ reduce using rule 248 (identity -> expression IS expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 260

    (188) calculation -> expression PERCENT expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 188 (calculation -> expression PERCENT expression .)
    MINUS           reduce using rule 188 (calculation -> expression PERCENT expression .)
    TIMES           reduce using rule 188 (calculation -> expression PERCENT expression .)
    DIVIDE          reduce using rule 188 (calculation -> expression PERCENT expression .)
    PERCENT         reduce using rule 188 (calculation -> expression PERCENT expression .)
    INTDIV          reduce using rule 188 (calculation -> expression PERCENT expression .)
    BITOR           reduce using rule 188 (calculation -> expression PERCENT expression .)
    BITAND          reduce using rule 188 (calculation -> expression PERCENT expression .)
    LSHIFT          reduce using rule 188 (calculation -> expression PERCENT expression .)
    RSHIFT          reduce using rule 188 (calculation -> expression PERCENT expression .)
    EQUALTO         reduce using rule 188 (calculation -> expression PERCENT expression .)
    NEQUALTO        reduce using rule 188 (calculation -> expression PERCENT expression .)
    LT              reduce using rule 188 (calculation -> expression PERCENT expression .)
    LE              reduce using rule 188 (calculation -> expression PERCENT expression .)
    GT              reduce using rule 188 (calculation -> expression PERCENT expression .)
    GE              reduce using rule 188 (calculation -> expression PERCENT expression .)
    REQUALTO        reduce using rule 188 (calculation -> expression PERCENT expression .)
    BOOLOR          reduce using rule 188 (calculation -> expression PERCENT expression .)
    BOOLAND         reduce using rule 188 (calculation -> expression PERCENT expression .)
    OR              reduce using rule 188 (calculation -> expression PERCENT expression .)
    AND             reduce using rule 188 (calculation -> expression PERCENT expression .)
    CARET           reduce using rule 188 (calculation -> expression PERCENT expression .)
    QMARK           reduce using rule 188 (calculation -> expression PERCENT expression .)
    IS              reduce using rule 188 (calculation -> expression PERCENT expression .)
    ISNOT           reduce using rule 188 (calculation -> expression PERCENT expression .)
    IN              reduce using rule 188 (calculation -> expression PERCENT expression .)
    NOTIN           reduce using rule 188 (calculation -> expression PERCENT expression .)
    COMMA           reduce using rule 188 (calculation -> expression PERCENT expression .)
    RBRACKET        reduce using rule 188 (calculation -> expression PERCENT expression .)
    NL              reduce using rule 188 (calculation -> expression PERCENT expression .)
    SEMICOLON       reduce using rule 188 (calculation -> expression PERCENT expression .)
    RPAREN          reduce using rule 188 (calculation -> expression PERCENT expression .)
    COLON           reduce using rule 188 (calculation -> expression PERCENT expression .)
    RCURLY          reduce using rule 188 (calculation -> expression PERCENT expression .)
    DOTDOT          reduce using rule 188 (calculation -> expression PERCENT expression .)
    error           reduce using rule 188 (calculation -> expression PERCENT expression .)
    COLONCOLON      reduce using rule 188 (calculation -> expression PERCENT expression .)
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 188 (calculation -> expression PERCENT expression .) ]
  ! LBRACKET        [ reduce using rule 188 (calculation -> expression PERCENT expression .) ]
  ! DOT             [ reduce using rule 188 (calculation -> expression PERCENT expression .) ]
  ! POW             [ reduce using rule 188 (calculation -> expression PERCENT expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! TIMES           [ shift and go to state 171 ]
  ! DIVIDE          [ shift and go to state 166 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! INTDIV          [ shift and go to state 151 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 261

    (201) calculation -> expression REQUALTO expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 201 (calculation -> expression REQUALTO expression .)
    EQUALTO         reduce using rule 201 (calculation -> expression REQUALTO expression .)
    NEQUALTO        reduce using rule 201 (calculation -> expression REQUALTO expression .)
    LT              reduce using rule 201 (calculation -> expression REQUALTO expression .)
    LE              reduce using rule 201 (calculation -> expression REQUALTO expression .)
    GT              reduce using rule 201 (calculation -> expression REQUALTO expression .)
    GE              reduce using rule 201 (calculation -> expression REQUALTO expression .)
    REQUALTO        reduce using rule 201 (calculation -> expression REQUALTO expression .)
    BOOLOR          reduce using rule 201 (calculation -> expression REQUALTO expression .)
    BOOLAND         reduce using rule 201 (calculation -> expression REQUALTO expression .)
    OR              reduce using rule 201 (calculation -> expression REQUALTO expression .)
    AND             reduce using rule 201 (calculation -> expression REQUALTO expression .)
    CARET           reduce using rule 201 (calculation -> expression REQUALTO expression .)
    QMARK           reduce using rule 201 (calculation -> expression REQUALTO expression .)
    IS              reduce using rule 201 (calculation -> expression REQUALTO expression .)
    ISNOT           reduce using rule 201 (calculation -> expression REQUALTO expression .)
    IN              reduce using rule 201 (calculation -> expression REQUALTO expression .)
    NOTIN           reduce using rule 201 (calculation -> expression REQUALTO expression .)
    COMMA           reduce using rule 201 (calculation -> expression REQUALTO expression .)
    RBRACKET        reduce using rule 201 (calculation -> expression REQUALTO expression .)
    NL              reduce using rule 201 (calculation -> expression REQUALTO expression .)
    SEMICOLON       reduce using rule 201 (calculation -> expression REQUALTO expression .)
    RPAREN          reduce using rule 201 (calculation -> expression REQUALTO expression .)
    COLON           reduce using rule 201 (calculation -> expression REQUALTO expression .)
    RCURLY          reduce using rule 201 (calculation -> expression REQUALTO expression .)
    DOTDOT          reduce using rule 201 (calculation -> expression REQUALTO expression .)
    error           reduce using rule 201 (calculation -> expression REQUALTO expression .)
    COLONCOLON      reduce using rule 201 (calculation -> expression REQUALTO expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! LBRACKET        [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! DOT             [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! PLUS            [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! MINUS           [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! TIMES           [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! DIVIDE          [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! INTDIV          [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! POW             [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! BITOR           [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! BITAND          [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! LSHIFT          [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! RSHIFT          [ reduce using rule 201 (calculation -> expression REQUALTO expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 262

    (186) calculation -> expression TIMES expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PLUS            reduce using rule 186 (calculation -> expression TIMES expression .)
    MINUS           reduce using rule 186 (calculation -> expression TIMES expression .)
    TIMES           reduce using rule 186 (calculation -> expression TIMES expression .)
    DIVIDE          reduce using rule 186 (calculation -> expression TIMES expression .)
    PERCENT         reduce using rule 186 (calculation -> expression TIMES expression .)
    INTDIV          reduce using rule 186 (calculation -> expression TIMES expression .)
    BITOR           reduce using rule 186 (calculation -> expression TIMES expression .)
    BITAND          reduce using rule 186 (calculation -> expression TIMES expression .)
    LSHIFT          reduce using rule 186 (calculation -> expression TIMES expression .)
    RSHIFT          reduce using rule 186 (calculation -> expression TIMES expression .)
    EQUALTO         reduce using rule 186 (calculation -> expression TIMES expression .)
    NEQUALTO        reduce using rule 186 (calculation -> expression TIMES expression .)
    LT              reduce using rule 186 (calculation -> expression TIMES expression .)
    LE              reduce using rule 186 (calculation -> expression TIMES expression .)
    GT              reduce using rule 186 (calculation -> expression TIMES expression .)
    GE              reduce using rule 186 (calculation -> expression TIMES expression .)
    REQUALTO        reduce using rule 186 (calculation -> expression TIMES expression .)
    BOOLOR          reduce using rule 186 (calculation -> expression TIMES expression .)
    BOOLAND         reduce using rule 186 (calculation -> expression TIMES expression .)
    OR              reduce using rule 186 (calculation -> expression TIMES expression .)
    AND             reduce using rule 186 (calculation -> expression TIMES expression .)
    CARET           reduce using rule 186 (calculation -> expression TIMES expression .)
    QMARK           reduce using rule 186 (calculation -> expression TIMES expression .)
    IS              reduce using rule 186 (calculation -> expression TIMES expression .)
    ISNOT           reduce using rule 186 (calculation -> expression TIMES expression .)
    IN              reduce using rule 186 (calculation -> expression TIMES expression .)
    NOTIN           reduce using rule 186 (calculation -> expression TIMES expression .)
    COMMA           reduce using rule 186 (calculation -> expression TIMES expression .)
    RBRACKET        reduce using rule 186 (calculation -> expression TIMES expression .)
    NL              reduce using rule 186 (calculation -> expression TIMES expression .)
    SEMICOLON       reduce using rule 186 (calculation -> expression TIMES expression .)
    RPAREN          reduce using rule 186 (calculation -> expression TIMES expression .)
    COLON           reduce using rule 186 (calculation -> expression TIMES expression .)
    RCURLY          reduce using rule 186 (calculation -> expression TIMES expression .)
    DOTDOT          reduce using rule 186 (calculation -> expression TIMES expression .)
    error           reduce using rule 186 (calculation -> expression TIMES expression .)
    COLONCOLON      reduce using rule 186 (calculation -> expression TIMES expression .)
    POW             shift and go to state 159
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 186 (calculation -> expression TIMES expression .) ]
  ! LBRACKET        [ reduce using rule 186 (calculation -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 186 (calculation -> expression TIMES expression .) ]
  ! POW             [ reduce using rule 186 (calculation -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 162 ]
  ! MINUS           [ shift and go to state 156 ]
  ! TIMES           [ shift and go to state 171 ]
  ! DIVIDE          [ shift and go to state 166 ]
  ! PERCENT         [ shift and go to state 169 ]
  ! INTDIV          [ shift and go to state 151 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! LSHIFT          [ shift and go to state 155 ]
  ! RSHIFT          [ shift and go to state 152 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 263

    (192) calculation -> expression BITAND expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 192 (calculation -> expression BITAND expression .)
    BITOR           reduce using rule 192 (calculation -> expression BITAND expression .)
    BITAND          reduce using rule 192 (calculation -> expression BITAND expression .)
    EQUALTO         reduce using rule 192 (calculation -> expression BITAND expression .)
    NEQUALTO        reduce using rule 192 (calculation -> expression BITAND expression .)
    LT              reduce using rule 192 (calculation -> expression BITAND expression .)
    LE              reduce using rule 192 (calculation -> expression BITAND expression .)
    GT              reduce using rule 192 (calculation -> expression BITAND expression .)
    GE              reduce using rule 192 (calculation -> expression BITAND expression .)
    REQUALTO        reduce using rule 192 (calculation -> expression BITAND expression .)
    BOOLOR          reduce using rule 192 (calculation -> expression BITAND expression .)
    BOOLAND         reduce using rule 192 (calculation -> expression BITAND expression .)
    OR              reduce using rule 192 (calculation -> expression BITAND expression .)
    AND             reduce using rule 192 (calculation -> expression BITAND expression .)
    CARET           reduce using rule 192 (calculation -> expression BITAND expression .)
    QMARK           reduce using rule 192 (calculation -> expression BITAND expression .)
    IS              reduce using rule 192 (calculation -> expression BITAND expression .)
    ISNOT           reduce using rule 192 (calculation -> expression BITAND expression .)
    IN              reduce using rule 192 (calculation -> expression BITAND expression .)
    NOTIN           reduce using rule 192 (calculation -> expression BITAND expression .)
    COMMA           reduce using rule 192 (calculation -> expression BITAND expression .)
    RBRACKET        reduce using rule 192 (calculation -> expression BITAND expression .)
    NL              reduce using rule 192 (calculation -> expression BITAND expression .)
    SEMICOLON       reduce using rule 192 (calculation -> expression BITAND expression .)
    RPAREN          reduce using rule 192 (calculation -> expression BITAND expression .)
    COLON           reduce using rule 192 (calculation -> expression BITAND expression .)
    RCURLY          reduce using rule 192 (calculation -> expression BITAND expression .)
    DOTDOT          reduce using rule 192 (calculation -> expression BITAND expression .)
    error           reduce using rule 192 (calculation -> expression BITAND expression .)
    COLONCOLON      reduce using rule 192 (calculation -> expression BITAND expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! LBRACKET        [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! DOT             [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! PLUS            [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! MINUS           [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! TIMES           [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! DIVIDE          [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! INTDIV          [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! POW             [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! LSHIFT          [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! RSHIFT          [ reduce using rule 192 (calculation -> expression BITAND expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BITOR           [ shift and go to state 164 ]
  ! BITAND          [ shift and go to state 172 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 264

    (251) membership -> expression NOTIN expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 251 (membership -> expression NOTIN expression .)
    EQUALTO         reduce using rule 251 (membership -> expression NOTIN expression .)
    NEQUALTO        reduce using rule 251 (membership -> expression NOTIN expression .)
    LT              reduce using rule 251 (membership -> expression NOTIN expression .)
    LE              reduce using rule 251 (membership -> expression NOTIN expression .)
    GT              reduce using rule 251 (membership -> expression NOTIN expression .)
    GE              reduce using rule 251 (membership -> expression NOTIN expression .)
    REQUALTO        reduce using rule 251 (membership -> expression NOTIN expression .)
    BOOLOR          reduce using rule 251 (membership -> expression NOTIN expression .)
    BOOLAND         reduce using rule 251 (membership -> expression NOTIN expression .)
    OR              reduce using rule 251 (membership -> expression NOTIN expression .)
    AND             reduce using rule 251 (membership -> expression NOTIN expression .)
    CARET           reduce using rule 251 (membership -> expression NOTIN expression .)
    QMARK           reduce using rule 251 (membership -> expression NOTIN expression .)
    IS              reduce using rule 251 (membership -> expression NOTIN expression .)
    ISNOT           reduce using rule 251 (membership -> expression NOTIN expression .)
    IN              reduce using rule 251 (membership -> expression NOTIN expression .)
    NOTIN           reduce using rule 251 (membership -> expression NOTIN expression .)
    COMMA           reduce using rule 251 (membership -> expression NOTIN expression .)
    RBRACKET        reduce using rule 251 (membership -> expression NOTIN expression .)
    NL              reduce using rule 251 (membership -> expression NOTIN expression .)
    SEMICOLON       reduce using rule 251 (membership -> expression NOTIN expression .)
    RPAREN          reduce using rule 251 (membership -> expression NOTIN expression .)
    COLON           reduce using rule 251 (membership -> expression NOTIN expression .)
    RCURLY          reduce using rule 251 (membership -> expression NOTIN expression .)
    DOTDOT          reduce using rule 251 (membership -> expression NOTIN expression .)
    error           reduce using rule 251 (membership -> expression NOTIN expression .)
    COLONCOLON      reduce using rule 251 (membership -> expression NOTIN expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! PLUS            [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! MINUS           [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! TIMES           [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! DIVIDE          [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! INTDIV          [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! POW             [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! BITOR           [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! BITAND          [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! LSHIFT          [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! RSHIFT          [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! LPAREN          [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! LBRACKET        [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! DOT             [ reduce using rule 251 (membership -> expression NOTIN expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 265

    (128) procedure_call -> expression LPAREN expressionlist . RPAREN
    (212) function_call -> expression LPAREN expressionlist . RPAREN

    RPAREN          shift and go to state 355


state 266

    (277) procedure_call -> expression LPAREN error . RPAREN

    RPAREN          shift and go to state 356


state 267

    (250) membership -> expression IN expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 250 (membership -> expression IN expression .)
    EQUALTO         reduce using rule 250 (membership -> expression IN expression .)
    NEQUALTO        reduce using rule 250 (membership -> expression IN expression .)
    LT              reduce using rule 250 (membership -> expression IN expression .)
    LE              reduce using rule 250 (membership -> expression IN expression .)
    GT              reduce using rule 250 (membership -> expression IN expression .)
    GE              reduce using rule 250 (membership -> expression IN expression .)
    REQUALTO        reduce using rule 250 (membership -> expression IN expression .)
    BOOLOR          reduce using rule 250 (membership -> expression IN expression .)
    BOOLAND         reduce using rule 250 (membership -> expression IN expression .)
    OR              reduce using rule 250 (membership -> expression IN expression .)
    AND             reduce using rule 250 (membership -> expression IN expression .)
    CARET           reduce using rule 250 (membership -> expression IN expression .)
    QMARK           reduce using rule 250 (membership -> expression IN expression .)
    IS              reduce using rule 250 (membership -> expression IN expression .)
    ISNOT           reduce using rule 250 (membership -> expression IN expression .)
    IN              reduce using rule 250 (membership -> expression IN expression .)
    NOTIN           reduce using rule 250 (membership -> expression IN expression .)
    COMMA           reduce using rule 250 (membership -> expression IN expression .)
    RBRACKET        reduce using rule 250 (membership -> expression IN expression .)
    NL              reduce using rule 250 (membership -> expression IN expression .)
    SEMICOLON       reduce using rule 250 (membership -> expression IN expression .)
    RPAREN          reduce using rule 250 (membership -> expression IN expression .)
    COLON           reduce using rule 250 (membership -> expression IN expression .)
    RCURLY          reduce using rule 250 (membership -> expression IN expression .)
    DOTDOT          reduce using rule 250 (membership -> expression IN expression .)
    error           reduce using rule 250 (membership -> expression IN expression .)
    COLONCOLON      reduce using rule 250 (membership -> expression IN expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! PLUS            [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! MINUS           [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! TIMES           [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! DIVIDE          [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! INTDIV          [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! POW             [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! BITOR           [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! BITAND          [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! LSHIFT          [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! RSHIFT          [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! LPAREN          [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! LBRACKET        [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! DOT             [ reduce using rule 250 (membership -> expression IN expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 268

    (196) calculation -> expression NEQUALTO expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    EQUALTO         reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    NEQUALTO        reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    LT              reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    LE              reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    GT              reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    GE              reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    REQUALTO        reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    BOOLOR          reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    BOOLAND         reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    OR              reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    AND             reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    CARET           reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    QMARK           reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    IS              reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    ISNOT           reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    IN              reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    NOTIN           reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    COMMA           reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    RBRACKET        reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    NL              reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    SEMICOLON       reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    RPAREN          reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    COLON           reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    RCURLY          reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    DOTDOT          reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    error           reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    COLONCOLON      reduce using rule 196 (calculation -> expression NEQUALTO expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! LBRACKET        [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! DOT             [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! PLUS            [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! MINUS           [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! TIMES           [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! DIVIDE          [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! INTDIV          [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! POW             [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! BITOR           [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! BITAND          [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! LSHIFT          [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! RSHIFT          [ reduce using rule 196 (calculation -> expression NEQUALTO expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 269

    (205) calculation -> expression AND expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 205 (calculation -> expression AND expression .)
    BOOLOR          reduce using rule 205 (calculation -> expression AND expression .)
    BOOLAND         reduce using rule 205 (calculation -> expression AND expression .)
    OR              reduce using rule 205 (calculation -> expression AND expression .)
    AND             reduce using rule 205 (calculation -> expression AND expression .)
    CARET           reduce using rule 205 (calculation -> expression AND expression .)
    QMARK           reduce using rule 205 (calculation -> expression AND expression .)
    COMMA           reduce using rule 205 (calculation -> expression AND expression .)
    RBRACKET        reduce using rule 205 (calculation -> expression AND expression .)
    NL              reduce using rule 205 (calculation -> expression AND expression .)
    SEMICOLON       reduce using rule 205 (calculation -> expression AND expression .)
    RPAREN          reduce using rule 205 (calculation -> expression AND expression .)
    COLON           reduce using rule 205 (calculation -> expression AND expression .)
    RCURLY          reduce using rule 205 (calculation -> expression AND expression .)
    DOTDOT          reduce using rule 205 (calculation -> expression AND expression .)
    error           reduce using rule 205 (calculation -> expression AND expression .)
    COLONCOLON      reduce using rule 205 (calculation -> expression AND expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173

  ! LPAREN          [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! DOT             [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! INTDIV          [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! POW             [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! BITOR           [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! BITAND          [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! LSHIFT          [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! RSHIFT          [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! EQUALTO         [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! NEQUALTO        [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! LT              [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! LE              [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! GT              [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! GE              [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! REQUALTO        [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! IS              [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! ISNOT           [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! IN              [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! NOTIN           [ reduce using rule 205 (calculation -> expression AND expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]


state 270

    (246) ternary -> expression QMARK expression . COLON expression
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 357
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 271

    (200) calculation -> expression GE expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 200 (calculation -> expression GE expression .)
    EQUALTO         reduce using rule 200 (calculation -> expression GE expression .)
    NEQUALTO        reduce using rule 200 (calculation -> expression GE expression .)
    LT              reduce using rule 200 (calculation -> expression GE expression .)
    LE              reduce using rule 200 (calculation -> expression GE expression .)
    GT              reduce using rule 200 (calculation -> expression GE expression .)
    GE              reduce using rule 200 (calculation -> expression GE expression .)
    REQUALTO        reduce using rule 200 (calculation -> expression GE expression .)
    BOOLOR          reduce using rule 200 (calculation -> expression GE expression .)
    BOOLAND         reduce using rule 200 (calculation -> expression GE expression .)
    OR              reduce using rule 200 (calculation -> expression GE expression .)
    AND             reduce using rule 200 (calculation -> expression GE expression .)
    CARET           reduce using rule 200 (calculation -> expression GE expression .)
    QMARK           reduce using rule 200 (calculation -> expression GE expression .)
    IS              reduce using rule 200 (calculation -> expression GE expression .)
    ISNOT           reduce using rule 200 (calculation -> expression GE expression .)
    IN              reduce using rule 200 (calculation -> expression GE expression .)
    NOTIN           reduce using rule 200 (calculation -> expression GE expression .)
    COMMA           reduce using rule 200 (calculation -> expression GE expression .)
    RBRACKET        reduce using rule 200 (calculation -> expression GE expression .)
    NL              reduce using rule 200 (calculation -> expression GE expression .)
    SEMICOLON       reduce using rule 200 (calculation -> expression GE expression .)
    RPAREN          reduce using rule 200 (calculation -> expression GE expression .)
    COLON           reduce using rule 200 (calculation -> expression GE expression .)
    RCURLY          reduce using rule 200 (calculation -> expression GE expression .)
    DOTDOT          reduce using rule 200 (calculation -> expression GE expression .)
    error           reduce using rule 200 (calculation -> expression GE expression .)
    COLONCOLON      reduce using rule 200 (calculation -> expression GE expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157

  ! LPAREN          [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! LBRACKET        [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! DOT             [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! INTDIV          [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! POW             [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! BITOR           [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! BITAND          [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! LSHIFT          [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! RSHIFT          [ reduce using rule 200 (calculation -> expression GE expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! EQUALTO         [ shift and go to state 160 ]
  ! NEQUALTO        [ shift and go to state 176 ]
  ! LT              [ shift and go to state 161 ]
  ! LE              [ shift and go to state 158 ]
  ! GT              [ shift and go to state 165 ]
  ! GE              [ shift and go to state 179 ]
  ! REQUALTO        [ shift and go to state 170 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! BOOLAND         [ shift and go to state 153 ]
  ! OR              [ shift and go to state 180 ]
  ! AND             [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]
  ! IS              [ shift and go to state 168 ]
  ! ISNOT           [ shift and go to state 163 ]
  ! IN              [ shift and go to state 175 ]
  ! NOTIN           [ shift and go to state 173 ]


state 272

    (204) calculation -> expression OR expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 204 (calculation -> expression OR expression .)
    BOOLOR          reduce using rule 204 (calculation -> expression OR expression .)
    OR              reduce using rule 204 (calculation -> expression OR expression .)
    CARET           reduce using rule 204 (calculation -> expression OR expression .)
    QMARK           reduce using rule 204 (calculation -> expression OR expression .)
    COMMA           reduce using rule 204 (calculation -> expression OR expression .)
    RBRACKET        reduce using rule 204 (calculation -> expression OR expression .)
    NL              reduce using rule 204 (calculation -> expression OR expression .)
    SEMICOLON       reduce using rule 204 (calculation -> expression OR expression .)
    RPAREN          reduce using rule 204 (calculation -> expression OR expression .)
    COLON           reduce using rule 204 (calculation -> expression OR expression .)
    RCURLY          reduce using rule 204 (calculation -> expression OR expression .)
    DOTDOT          reduce using rule 204 (calculation -> expression OR expression .)
    error           reduce using rule 204 (calculation -> expression OR expression .)
    COLONCOLON      reduce using rule 204 (calculation -> expression OR expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLAND         shift and go to state 153
    AND             shift and go to state 177
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173

  ! LPAREN          [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! DOT             [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! INTDIV          [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! POW             [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! BITOR           [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! BITAND          [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! LSHIFT          [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! RSHIFT          [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! EQUALTO         [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! NEQUALTO        [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! LT              [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! LE              [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! GT              [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! GE              [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! REQUALTO        [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! BOOLAND         [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! AND             [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! IS              [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! ISNOT           [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! IN              [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! NOTIN           [ reduce using rule 204 (calculation -> expression OR expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! BOOLOR          [ shift and go to state 167 ]
  ! OR              [ shift and go to state 180 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]


state 273

    (230) function_literal -> LAMBDA LPAREN argumentlist . RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> LAMBDA LPAREN argumentlist . RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> LAMBDA LPAREN argumentlist . RPAREN ARROW type COLON LPAREN error RPAREN
    (289) procedure_literal -> LAMBDA LPAREN argumentlist . RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> LAMBDA LPAREN argumentlist . RPAREN COLON LPAREN error RPAREN

    RPAREN          shift and go to state 358


state 274

    (47) nonempty_argumentlist -> IDENTIFIER . COLON type
    (50) nonempty_defaultlist -> IDENTIFIER . COLON type EQUALS expression
    (262) nonempty_defaultlist -> IDENTIFIER . COLON error EQUALS expression

    COLON           shift and go to state 359


state 275

    (46) argumentlist -> nonempty_defaultlist . empty empty
    (49) nonempty_defaultlist -> nonempty_defaultlist . COMMA nonempty_defaultlist
    (3) empty -> .

    COMMA           shift and go to state 360
    RPAREN          reduce using rule 3 (empty -> .)
    error           reduce using rule 3 (empty -> .)

    empty                          shift and go to state 361

state 276

    (45) argumentlist -> empty . empty empty
    (3) empty -> .

    RPAREN          reduce using rule 3 (empty -> .)
    error           reduce using rule 3 (empty -> .)

    empty                          shift and go to state 362

state 277

    (285) function_literal -> LAMBDA LPAREN error . RPAREN ARROW type COLON LPAREN expression RPAREN
    (288) procedure_literal -> LAMBDA LPAREN error . RPAREN COLON LPAREN statement_simple RPAREN
    (261) nonempty_argumentlist -> error . COLON type

    RPAREN          shift and go to state 363
    COLON           shift and go to state 364


state 278

    (43) argumentlist -> nonempty_argumentlist . COMMA nonempty_defaultlist
    (44) argumentlist -> nonempty_argumentlist . empty empty
    (48) nonempty_argumentlist -> nonempty_argumentlist . COMMA nonempty_argumentlist
    (3) empty -> .

    COMMA           shift and go to state 365
    RPAREN          reduce using rule 3 (empty -> .)
    error           reduce using rule 3 (empty -> .)

    empty                          shift and go to state 366

state 279

    (263) while_loop -> WHILE error COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 367
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 280

    (79) while_loop -> WHILE expression COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 368
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 281

    (134) assertmessage -> ASSERT expression COMMA . literal
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LPAREN          shift and go to state 369
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    list_literal                   shift and go to state 90
    tuple_literal                  shift and go to state 31
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    set_literal                    shift and go to state 61
    literal                        shift and go to state 370
    function_literal               shift and go to state 49

state 282

    (239) dictionary_literal -> LCURLY dictionarylist RCURLY .

    COLON           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    PLUS            reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    MINUS           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    TIMES           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    DIVIDE          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    PERCENT         reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    INTDIV          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    POW             reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    BITOR           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    BITAND          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    LSHIFT          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    RSHIFT          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    EQUALTO         reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    NEQUALTO        reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    LT              reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    LE              reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    GT              reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    GE              reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    REQUALTO        reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    BOOLOR          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    BOOLAND         reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    OR              reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    AND             reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    CARET           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    LPAREN          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    LBRACKET        reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    QMARK           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    DOT             reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    IS              reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    ISNOT           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    IN              reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    NOTIN           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    COLONCOLON      reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    COMMA           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    RBRACKET        reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    NL              reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    SEMICOLON       reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    RPAREN          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    RCURLY          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    DOTDOT          reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)
    error           reduce using rule 239 (dictionary_literal -> LCURLY dictionarylist RCURLY .)


state 283

    (243) nonempty_dictionarylist -> nonempty_dictionarylist COMMA . nonempty_dictionarylist
    (242) nonempty_dictionarylist -> . expression COLON expression
    (243) nonempty_dictionarylist -> . nonempty_dictionarylist COMMA nonempty_dictionarylist
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    nonempty_dictionarylist        shift and go to state 371
    ternary                        shift and go to state 92
    expression                     shift and go to state 372
    grouping                       shift and go to state 42

state 284

    (244) set_literal -> LCURLY nonempty_expressionlist RCURLY .

    COLON           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    PLUS            reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    MINUS           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    TIMES           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    DIVIDE          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    PERCENT         reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    INTDIV          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    POW             reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    BITOR           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    BITAND          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    LSHIFT          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    RSHIFT          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    EQUALTO         reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    NEQUALTO        reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    LT              reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    LE              reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    GT              reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    GE              reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    REQUALTO        reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    BOOLOR          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    BOOLAND         reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    OR              reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    AND             reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    CARET           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    LPAREN          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    LBRACKET        reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    QMARK           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    DOT             reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    IS              reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    ISNOT           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    IN              reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    NOTIN           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    COMMA           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    RBRACKET        reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    NL              reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    SEMICOLON       reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    RPAREN          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    RCURLY          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    DOTDOT          reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    error           reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)
    COLONCOLON      reduce using rule 244 (set_literal -> LCURLY nonempty_expressionlist RCURLY .)


state 285

    (292) dictionary_literal -> LCURLY error RCURLY .

    COLON           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    PLUS            reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    MINUS           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    TIMES           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    DIVIDE          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    PERCENT         reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    INTDIV          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    POW             reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    BITOR           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    BITAND          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    LSHIFT          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    RSHIFT          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    EQUALTO         reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    NEQUALTO        reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    LT              reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    LE              reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    GT              reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    GE              reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    REQUALTO        reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    BOOLOR          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    BOOLAND         reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    OR              reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    AND             reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    CARET           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    LPAREN          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    LBRACKET        reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    QMARK           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    DOT             reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    IS              reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    ISNOT           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    IN              reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    NOTIN           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    COLONCOLON      reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    COMMA           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    RBRACKET        reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    NL              reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    SEMICOLON       reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    RPAREN          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    RCURLY          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    DOTDOT          reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)
    error           reduce using rule 292 (dictionary_literal -> LCURLY error RCURLY .)


state 286

    (242) nonempty_dictionarylist -> expression COLON . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 373
    grouping                       shift and go to state 42

state 287

    (106) assignment -> member assignment_operator expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    NL              reduce using rule 106 (assignment -> member assignment_operator expression .)
    SEMICOLON       reduce using rule 106 (assignment -> member assignment_operator expression .)
    RPAREN          reduce using rule 106 (assignment -> member assignment_operator expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 288

    (231) tuple_literal -> LPAREN tuplelist RPAREN .

    PLUS            reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    MINUS           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    TIMES           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    DIVIDE          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    PERCENT         reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    INTDIV          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    POW             reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    BITOR           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    BITAND          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    LSHIFT          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    RSHIFT          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    EQUALTO         reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    NEQUALTO        reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    LT              reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    LE              reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    GT              reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    GE              reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    REQUALTO        reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    BOOLOR          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    BOOLAND         reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    OR              reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    AND             reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    CARET           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    LPAREN          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    LBRACKET        reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    QMARK           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    DOT             reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    IS              reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    ISNOT           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    IN              reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    NOTIN           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    NL              reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    SEMICOLON       reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    RPAREN          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    COMMA           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    RBRACKET        reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    COLON           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    RCURLY          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    DOTDOT          reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    error           reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)
    COLONCOLON      reduce using rule 231 (tuple_literal -> LPAREN tuplelist RPAREN .)


state 289

    (236) singletontuple -> nonempty_expressionlist COMMA .
    (216) nonempty_expressionlist -> nonempty_expressionlist COMMA . nonempty_expressionlist
    (215) nonempty_expressionlist -> . expression
    (216) nonempty_expressionlist -> . nonempty_expressionlist COMMA nonempty_expressionlist
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    RPAREN          reduce using rule 236 (singletontuple -> nonempty_expressionlist COMMA .)
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    nonempty_expressionlist        shift and go to state 337
    ternary                        shift and go to state 92
    expression                     shift and go to state 121
    grouping                       shift and go to state 42

state 290

    (217) grouping -> LPAREN expression RPAREN .

    PLUS            reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    PERCENT         reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    INTDIV          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    POW             reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    BITOR           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    BITAND          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    NEQUALTO        reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    LT              reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    LE              reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    GT              reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    GE              reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    REQUALTO        reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    BOOLOR          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    BOOLAND         reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    OR              reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    AND             reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    CARET           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    QMARK           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    DOT             reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    IS              reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    ISNOT           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    IN              reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    NOTIN           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    NL              reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    COLON           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    RCURLY          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    error           reduce using rule 217 (grouping -> LPAREN expression RPAREN .)
    COLONCOLON      reduce using rule 217 (grouping -> LPAREN expression RPAREN .)


state 291

    (105) assignment -> variable assignment_operator expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    NL              reduce using rule 105 (assignment -> variable assignment_operator expression .)
    SEMICOLON       reduce using rule 105 (assignment -> variable assignment_operator expression .)
    RPAREN          reduce using rule 105 (assignment -> variable assignment_operator expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 292

    (269) conditional -> IF error COLON . suite conditional_extension
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 374
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    tuple_literal                  shift and go to state 31
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 293

    (82) conditional -> IF expression COLON . suite conditional_extension
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 375
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    tuple_literal                  shift and go to state 31
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 294

    (25) variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .

    CLASS           reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    DEF             reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    DEDENT          reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    IF              reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    TRY             reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    WHILE           reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    FOR             reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    CONTINUE        reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    BREAK           reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    PASS            reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    RETURN          reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    YIELD           reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    RAISE           reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    DEL             reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    IDENTIFIER      reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    MINUS           reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    PLUS            reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    TILDE           reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    EXMARK          reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    NOT             reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    ASSERT          reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    LPAREN          reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    INTLITERAL      reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    FLOATLITERAL    reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    BOOLLITERAL     reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    STRINGLITERAL   reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    DOCSTRING       reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    NONE            reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    LAMBDA          reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    LBRACKET        reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    LCURLY          reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)
    $end            reduce using rule 25 (variableblock -> COLONCOLON nonempty_variableblock COLONCOLON NL .)


state 295

    (28) nonempty_variableblock -> nonempty_variableblock COMMA nonempty_variableblock .
    (28) nonempty_variableblock -> nonempty_variableblock . COMMA nonempty_variableblock

    COMMA           reduce using rule 28 (nonempty_variableblock -> nonempty_variableblock COMMA nonempty_variableblock .)
    COLONCOLON      reduce using rule 28 (nonempty_variableblock -> nonempty_variableblock COMMA nonempty_variableblock .)

  ! COMMA           [ shift and go to state 210 ]


state 296

    (252) variableblock -> COLONCOLON error COLONCOLON NL .

    CLASS           reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    DEF             reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    DEDENT          reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    IF              reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    TRY             reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    WHILE           reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    FOR             reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    CONTINUE        reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    BREAK           reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    PASS            reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    RETURN          reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    YIELD           reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    RAISE           reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    DEL             reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    IDENTIFIER      reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    MINUS           reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    PLUS            reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    TILDE           reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    EXMARK          reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    NOT             reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    ASSERT          reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    LPAREN          reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    INTLITERAL      reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    FLOATLITERAL    reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    BOOLLITERAL     reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    STRINGLITERAL   reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    DOCSTRING       reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    NONE            reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    LAMBDA          reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    LBRACKET        reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    LCURLY          reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)
    $end            reduce using rule 252 (variableblock -> COLONCOLON error COLONCOLON NL .)


state 297

    (147) generator_type -> GENERATOR . OF type

    OF              shift and go to state 376


state 298

    (143) type -> generator_type .

    EQUALS          reduce using rule 143 (type -> generator_type .)
    COLONCOLON      reduce using rule 143 (type -> generator_type .)
    COMMA           reduce using rule 143 (type -> generator_type .)
    COLON           reduce using rule 143 (type -> generator_type .)
    error           reduce using rule 143 (type -> generator_type .)
    RBRACKET        reduce using rule 143 (type -> generator_type .)
    TIMES           reduce using rule 143 (type -> generator_type .)
    RPAREN          reduce using rule 143 (type -> generator_type .)
    BITOR           reduce using rule 143 (type -> generator_type .)


state 299

    (144) type -> member_type .

    EQUALS          reduce using rule 144 (type -> member_type .)
    COLONCOLON      reduce using rule 144 (type -> member_type .)
    COMMA           reduce using rule 144 (type -> member_type .)
    COLON           reduce using rule 144 (type -> member_type .)
    error           reduce using rule 144 (type -> member_type .)
    RBRACKET        reduce using rule 144 (type -> member_type .)
    TIMES           reduce using rule 144 (type -> member_type .)
    RPAREN          reduce using rule 144 (type -> member_type .)
    BITOR           reduce using rule 144 (type -> member_type .)


state 300

    (169) listbracket -> LBRACKET . type RBRACKET
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 377

state 301

    (136) type -> function_type .

    EQUALS          reduce using rule 136 (type -> function_type .)
    COLONCOLON      reduce using rule 136 (type -> function_type .)
    COMMA           reduce using rule 136 (type -> function_type .)
    COLON           reduce using rule 136 (type -> function_type .)
    error           reduce using rule 136 (type -> function_type .)
    RBRACKET        reduce using rule 136 (type -> function_type .)
    TIMES           reduce using rule 136 (type -> function_type .)
    RPAREN          reduce using rule 136 (type -> function_type .)
    BITOR           reduce using rule 136 (type -> function_type .)


state 302

    (142) type -> frozenset_type .

    EQUALS          reduce using rule 142 (type -> frozenset_type .)
    COLONCOLON      reduce using rule 142 (type -> frozenset_type .)
    COMMA           reduce using rule 142 (type -> frozenset_type .)
    COLON           reduce using rule 142 (type -> frozenset_type .)
    error           reduce using rule 142 (type -> frozenset_type .)
    RBRACKET        reduce using rule 142 (type -> frozenset_type .)
    TIMES           reduce using rule 142 (type -> frozenset_type .)
    RPAREN          reduce using rule 142 (type -> frozenset_type .)
    BITOR           reduce using rule 142 (type -> frozenset_type .)


state 303

    (137) type -> procedure_type .

    EQUALS          reduce using rule 137 (type -> procedure_type .)
    COLONCOLON      reduce using rule 137 (type -> procedure_type .)
    COMMA           reduce using rule 137 (type -> procedure_type .)
    COLON           reduce using rule 137 (type -> procedure_type .)
    error           reduce using rule 137 (type -> procedure_type .)
    RBRACKET        reduce using rule 137 (type -> procedure_type .)
    TIMES           reduce using rule 137 (type -> procedure_type .)
    RPAREN          reduce using rule 137 (type -> procedure_type .)
    BITOR           reduce using rule 137 (type -> procedure_type .)


state 304

    (140) type -> dictionary_type .

    EQUALS          reduce using rule 140 (type -> dictionary_type .)
    COLONCOLON      reduce using rule 140 (type -> dictionary_type .)
    COMMA           reduce using rule 140 (type -> dictionary_type .)
    COLON           reduce using rule 140 (type -> dictionary_type .)
    error           reduce using rule 140 (type -> dictionary_type .)
    RBRACKET        reduce using rule 140 (type -> dictionary_type .)
    TIMES           reduce using rule 140 (type -> dictionary_type .)
    RPAREN          reduce using rule 140 (type -> dictionary_type .)
    BITOR           reduce using rule 140 (type -> dictionary_type .)


state 305

    (148) function_type -> FN . LPAREN typelist RPAREN ARROW type
    (278) function_type -> FN . LPAREN error RPAREN ARROW type

    LPAREN          shift and go to state 378


state 306

    (170) set_type -> SET . OF type

    OF              shift and go to state 379


state 307

    (166) list_type -> listof .

    BITOR           reduce using rule 166 (list_type -> listof .)
    COLON           reduce using rule 166 (list_type -> listof .)
    TIMES           reduce using rule 166 (list_type -> listof .)
    RPAREN          reduce using rule 166 (list_type -> listof .)
    EQUALS          reduce using rule 166 (list_type -> listof .)
    COLONCOLON      reduce using rule 166 (list_type -> listof .)
    COMMA           reduce using rule 166 (list_type -> listof .)
    error           reduce using rule 166 (list_type -> listof .)
    RBRACKET        reduce using rule 166 (list_type -> listof .)


state 308

    (167) list_type -> listbracket .

    BITOR           reduce using rule 167 (list_type -> listbracket .)
    COLON           reduce using rule 167 (list_type -> listbracket .)
    TIMES           reduce using rule 167 (list_type -> listbracket .)
    RPAREN          reduce using rule 167 (list_type -> listbracket .)
    EQUALS          reduce using rule 167 (list_type -> listbracket .)
    COLONCOLON      reduce using rule 167 (list_type -> listbracket .)
    COMMA           reduce using rule 167 (list_type -> listbracket .)
    error           reduce using rule 167 (list_type -> listbracket .)
    RBRACKET        reduce using rule 167 (list_type -> listbracket .)


state 309

    (145) type -> IDENTIFIER .
    (146) member_type -> IDENTIFIER . DOT IDENTIFIER

    EQUALS          reduce using rule 145 (type -> IDENTIFIER .)
    COLONCOLON      reduce using rule 145 (type -> IDENTIFIER .)
    COMMA           reduce using rule 145 (type -> IDENTIFIER .)
    COLON           reduce using rule 145 (type -> IDENTIFIER .)
    error           reduce using rule 145 (type -> IDENTIFIER .)
    RBRACKET        reduce using rule 145 (type -> IDENTIFIER .)
    TIMES           reduce using rule 145 (type -> IDENTIFIER .)
    RPAREN          reduce using rule 145 (type -> IDENTIFIER .)
    BITOR           reduce using rule 145 (type -> IDENTIFIER .)
    DOT             shift and go to state 380


state 310

    (29) declaration -> IDENTIFIER COLON type .
    (30) declaration -> IDENTIFIER COLON type . EQUALS expression

    COMMA           reduce using rule 29 (declaration -> IDENTIFIER COLON type .)
    COLONCOLON      reduce using rule 29 (declaration -> IDENTIFIER COLON type .)
    EQUALS          shift and go to state 381


state 311

    (171) frozenset_type -> FROZENSET . OF type

    OF              shift and go to state 382


state 312

    (159) tuple_type -> tupleparens .

    EQUALS          reduce using rule 159 (tuple_type -> tupleparens .)
    RBRACKET        reduce using rule 159 (tuple_type -> tupleparens .)
    COLON           reduce using rule 159 (tuple_type -> tupleparens .)
    COLONCOLON      reduce using rule 159 (tuple_type -> tupleparens .)
    COMMA           reduce using rule 159 (tuple_type -> tupleparens .)
    error           reduce using rule 159 (tuple_type -> tupleparens .)
    TIMES           reduce using rule 159 (tuple_type -> tupleparens .)
    RPAREN          reduce using rule 159 (tuple_type -> tupleparens .)
    BITOR           reduce using rule 159 (tuple_type -> tupleparens .)


state 313

    (141) type -> set_type .

    EQUALS          reduce using rule 141 (type -> set_type .)
    COLONCOLON      reduce using rule 141 (type -> set_type .)
    COMMA           reduce using rule 141 (type -> set_type .)
    COLON           reduce using rule 141 (type -> set_type .)
    error           reduce using rule 141 (type -> set_type .)
    RBRACKET        reduce using rule 141 (type -> set_type .)
    TIMES           reduce using rule 141 (type -> set_type .)
    RPAREN          reduce using rule 141 (type -> set_type .)
    BITOR           reduce using rule 141 (type -> set_type .)


state 314

    (161) tupleparens -> LPAREN . tuple_typelist RPAREN
    (162) tuple_typelist -> . nonempty_tuple_typelist
    (163) tuple_typelist -> . empty
    (164) nonempty_tuple_typelist -> . type
    (165) nonempty_tuple_typelist -> . nonempty_tuple_typelist TIMES nonempty_tuple_typelist
    (3) empty -> .
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    RPAREN          reduce using rule 3 (empty -> .)
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tuple_typelist                 shift and go to state 385
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 383
    nonempty_tuple_typelist        shift and go to state 386
    empty                          shift and go to state 384

state 315

    (158) tuple_type -> tupleof .

    EQUALS          reduce using rule 158 (tuple_type -> tupleof .)
    RBRACKET        reduce using rule 158 (tuple_type -> tupleof .)
    COLON           reduce using rule 158 (tuple_type -> tupleof .)
    COLONCOLON      reduce using rule 158 (tuple_type -> tupleof .)
    COMMA           reduce using rule 158 (tuple_type -> tupleof .)
    error           reduce using rule 158 (tuple_type -> tupleof .)
    TIMES           reduce using rule 158 (tuple_type -> tupleof .)
    RPAREN          reduce using rule 158 (tuple_type -> tupleof .)
    BITOR           reduce using rule 158 (tuple_type -> tupleof .)


state 316

    (138) type -> tuple_type .

    EQUALS          reduce using rule 138 (type -> tuple_type .)
    COLONCOLON      reduce using rule 138 (type -> tuple_type .)
    COMMA           reduce using rule 138 (type -> tuple_type .)
    COLON           reduce using rule 138 (type -> tuple_type .)
    error           reduce using rule 138 (type -> tuple_type .)
    RBRACKET        reduce using rule 138 (type -> tuple_type .)
    TIMES           reduce using rule 138 (type -> tuple_type .)
    RPAREN          reduce using rule 138 (type -> tuple_type .)
    BITOR           reduce using rule 138 (type -> tuple_type .)


state 317

    (283) tuple_type -> TUPLE . error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> TUPLE . OF LPAREN error RPAREN
    (160) tupleof -> TUPLE . OF LPAREN tuple_typelist RPAREN

    error           shift and go to state 388
    OF              shift and go to state 387


state 318

    (149) procedure_type -> PROC . LPAREN typelist RPAREN
    (279) procedure_type -> PROC . LPAREN error RPAREN

    LPAREN          shift and go to state 389


state 319

    (168) listof -> LIST . OF type

    OF              shift and go to state 390


state 320

    (172) dictionary_type -> DICT . OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> DICT . error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> DICT . OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> DICT . OF LBRACKET type BITOR error RBRACKET

    OF              shift and go to state 391
    error           shift and go to state 392


state 321

    (139) type -> list_type .

    EQUALS          reduce using rule 139 (type -> list_type .)
    COLONCOLON      reduce using rule 139 (type -> list_type .)
    COMMA           reduce using rule 139 (type -> list_type .)
    COLON           reduce using rule 139 (type -> list_type .)
    error           reduce using rule 139 (type -> list_type .)
    RBRACKET        reduce using rule 139 (type -> list_type .)
    TIMES           reduce using rule 139 (type -> list_type .)
    RPAREN          reduce using rule 139 (type -> list_type .)
    BITOR           reduce using rule 139 (type -> list_type .)


state 322

    (253) declaration -> IDENTIFIER COLON error . EQUALS expression

    EQUALS          shift and go to state 393


state 323

    (20) pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .

    IMPORT          reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    FROM            reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    PYIMPORT        reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    PASS            reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    COLONCOLON      reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    IF              reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    TRY             reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    WHILE           reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    FOR             reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    CONTINUE        reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    BREAK           reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    RETURN          reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    YIELD           reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    RAISE           reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    DEL             reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    IDENTIFIER      reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    MINUS           reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    PLUS            reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    TILDE           reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    EXMARK          reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    NOT             reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    ASSERT          reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    LPAREN          reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    INTLITERAL      reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    FLOATLITERAL    reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    BOOLLITERAL     reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    STRINGLITERAL   reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    DOCSTRING       reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    NONE            reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    LAMBDA          reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    LBRACKET        reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    LCURLY          reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    CLASS           reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    DEF             reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)
    $end            reduce using rule 20 (pyimport_statement -> PYIMPORT IDENTIFIER AS IDENTIFIER NL .)


state 324

    (15) import_statement -> FROM IDENTIFIER IMPORT importlist NL .

    IMPORT          reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    FROM            reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    PYIMPORT        reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    PASS            reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    COLONCOLON      reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    IF              reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    TRY             reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    WHILE           reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    FOR             reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    CONTINUE        reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    BREAK           reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    RETURN          reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    YIELD           reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    RAISE           reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    DEL             reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    IDENTIFIER      reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    MINUS           reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    PLUS            reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    TILDE           reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    EXMARK          reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    NOT             reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    ASSERT          reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    LPAREN          reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    INTLITERAL      reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    FLOATLITERAL    reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    BOOLLITERAL     reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    STRINGLITERAL   reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    DOCSTRING       reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    NONE            reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    LAMBDA          reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    LBRACKET        reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    LCURLY          reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    CLASS           reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    DEF             reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)
    $end            reduce using rule 15 (import_statement -> FROM IDENTIFIER IMPORT importlist NL .)


state 325

    (18) importlist -> importlist COMMA . importlist
    (16) importlist -> . IDENTIFIER
    (17) importlist -> . IDENTIFIER AS IDENTIFIER
    (18) importlist -> . importlist COMMA importlist

    IDENTIFIER      shift and go to state 216

    importlist                     shift and go to state 394

state 326

    (14) import_statement -> FROM IDENTIFIER IMPORT TIMES NL .

    IMPORT          reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    FROM            reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    PYIMPORT        reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    PASS            reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    COLONCOLON      reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    IF              reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    TRY             reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    WHILE           reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    FOR             reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    CONTINUE        reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    BREAK           reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    RETURN          reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    YIELD           reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    RAISE           reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    DEL             reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    IDENTIFIER      reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    MINUS           reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    PLUS            reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    TILDE           reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    EXMARK          reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    NOT             reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    ASSERT          reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    LPAREN          reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    INTLITERAL      reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    FLOATLITERAL    reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    BOOLLITERAL     reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    STRINGLITERAL   reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    DOCSTRING       reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    NONE            reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    LAMBDA          reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    LBRACKET        reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    LCURLY          reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    CLASS           reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    DEF             reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)
    $end            reduce using rule 14 (import_statement -> FROM IDENTIFIER IMPORT TIMES NL .)


state 327

    (17) importlist -> IDENTIFIER AS . IDENTIFIER

    IDENTIFIER      shift and go to state 395


state 328

    (22) pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .

    IMPORT          reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    FROM            reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    PYIMPORT        reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    PASS            reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    COLONCOLON      reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    IF              reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    TRY             reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    WHILE           reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    FOR             reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    CONTINUE        reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    BREAK           reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    RETURN          reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    YIELD           reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    RAISE           reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    DEL             reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    IDENTIFIER      reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    MINUS           reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    PLUS            reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    TILDE           reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    EXMARK          reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    NOT             reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    ASSERT          reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    LPAREN          reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    INTLITERAL      reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    FLOATLITERAL    reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    BOOLLITERAL     reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    STRINGLITERAL   reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    DOCSTRING       reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    NONE            reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    LAMBDA          reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    LBRACKET        reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    LCURLY          reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    CLASS           reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    DEF             reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)
    $end            reduce using rule 22 (pyimport_statement -> FROM IDENTIFIER PYIMPORT importlist NL .)


state 329

    (21) pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .

    IMPORT          reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    FROM            reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    PYIMPORT        reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    PASS            reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    COLONCOLON      reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    IF              reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    TRY             reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    WHILE           reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    FOR             reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    CONTINUE        reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    BREAK           reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    RETURN          reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    YIELD           reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    RAISE           reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    DEL             reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    IDENTIFIER      reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    MINUS           reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    PLUS            reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    TILDE           reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    EXMARK          reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    NOT             reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    ASSERT          reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    LPAREN          reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    INTLITERAL      reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    FLOATLITERAL    reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    BOOLLITERAL     reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    STRINGLITERAL   reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    DOCSTRING       reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    NONE            reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    LAMBDA          reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    LBRACKET        reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    LCURLY          reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    CLASS           reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    DEF             reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)
    $end            reduce using rule 21 (pyimport_statement -> FROM IDENTIFIER PYIMPORT TIMES NL .)


state 330

    (13) import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .

    IMPORT          reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    FROM            reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    PYIMPORT        reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    PASS            reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    COLONCOLON      reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    IF              reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    TRY             reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    WHILE           reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    FOR             reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    CONTINUE        reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    BREAK           reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    RETURN          reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    YIELD           reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    RAISE           reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    DEL             reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    IDENTIFIER      reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    MINUS           reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    PLUS            reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    TILDE           reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    EXMARK          reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    NOT             reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    ASSERT          reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    LPAREN          reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    INTLITERAL      reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    FLOATLITERAL    reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    BOOLLITERAL     reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    STRINGLITERAL   reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    DOCSTRING       reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    NONE            reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    LAMBDA          reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    LBRACKET        reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    LCURLY          reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    CLASS           reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    DEF             reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)
    $end            reduce using rule 13 (import_statement -> IMPORT IDENTIFIER AS IDENTIFIER NL .)


state 331

    (256) function_definition -> DEF error LPAREN . argumentlist RPAREN ARROW type COLON suite
    (259) procedure_definition -> DEF error LPAREN . argumentlist RPAREN COLON suite
    (43) argumentlist -> . nonempty_argumentlist COMMA nonempty_defaultlist
    (44) argumentlist -> . nonempty_argumentlist empty empty
    (45) argumentlist -> . empty empty empty
    (46) argumentlist -> . nonempty_defaultlist empty empty
    (47) nonempty_argumentlist -> . IDENTIFIER COLON type
    (48) nonempty_argumentlist -> . nonempty_argumentlist COMMA nonempty_argumentlist
    (261) nonempty_argumentlist -> . error COLON type
    (3) empty -> .
    (49) nonempty_defaultlist -> . nonempty_defaultlist COMMA nonempty_defaultlist
    (50) nonempty_defaultlist -> . IDENTIFIER COLON type EQUALS expression
    (262) nonempty_defaultlist -> . IDENTIFIER COLON error EQUALS expression

    IDENTIFIER      shift and go to state 274
    error           shift and go to state 397
    RPAREN          reduce using rule 3 (empty -> .)

    argumentlist                   shift and go to state 396
    nonempty_defaultlist           shift and go to state 275
    nonempty_argumentlist          shift and go to state 278
    empty                          shift and go to state 276

state 332

    (41) function_definition -> DEF IDENTIFIER LPAREN . argumentlist RPAREN ARROW type COLON suite
    (257) function_definition -> DEF IDENTIFIER LPAREN . argumentlist error ARROW type COLON suite
    (258) function_definition -> DEF IDENTIFIER LPAREN . argumentlist RPAREN ARROW error COLON suite
    (42) procedure_definition -> DEF IDENTIFIER LPAREN . argumentlist RPAREN COLON suite
    (260) procedure_definition -> DEF IDENTIFIER LPAREN . argumentlist error COLON suite
    (43) argumentlist -> . nonempty_argumentlist COMMA nonempty_defaultlist
    (44) argumentlist -> . nonempty_argumentlist empty empty
    (45) argumentlist -> . empty empty empty
    (46) argumentlist -> . nonempty_defaultlist empty empty
    (47) nonempty_argumentlist -> . IDENTIFIER COLON type
    (48) nonempty_argumentlist -> . nonempty_argumentlist COMMA nonempty_argumentlist
    (261) nonempty_argumentlist -> . error COLON type
    (3) empty -> .
    (49) nonempty_defaultlist -> . nonempty_defaultlist COMMA nonempty_defaultlist
    (50) nonempty_defaultlist -> . IDENTIFIER COLON type EQUALS expression
    (262) nonempty_defaultlist -> . IDENTIFIER COLON error EQUALS expression

    IDENTIFIER      shift and go to state 274
    RPAREN          reduce using rule 3 (empty -> .)
    error           reduce using rule 3 (empty -> .)

  ! error           [ shift and go to state 397 ]

    argumentlist                   shift and go to state 398
    nonempty_defaultlist           shift and go to state 275
    nonempty_argumentlist          shift and go to state 278
    empty                          shift and go to state 276

state 333

    (33) class_definition -> CLASS IDENTIFIER opt_extends COLON . NL INDENT class_suite DEDENT
    (255) class_definition -> CLASS IDENTIFIER opt_extends COLON . NL INDENT error DEDENT

    NL              shift and go to state 399


state 334

    (254) class_definition -> CLASS IDENTIFIER opt_extends error . NL INDENT class_suite DEDENT

    NL              shift and go to state 400


state 335

    (35) opt_extends -> EXTENDS type .

    COLON           reduce using rule 35 (opt_extends -> EXTENDS type .)
    error           reduce using rule 35 (opt_extends -> EXTENDS type .)


state 336

    (36) opt_extends -> empty empty .

    COLON           reduce using rule 36 (opt_extends -> empty empty .)
    error           reduce using rule 36 (opt_extends -> empty empty .)


state 337

    (216) nonempty_expressionlist -> nonempty_expressionlist COMMA nonempty_expressionlist .
    (216) nonempty_expressionlist -> nonempty_expressionlist . COMMA nonempty_expressionlist

    COMMA           reduce using rule 216 (nonempty_expressionlist -> nonempty_expressionlist COMMA nonempty_expressionlist .)
    RPAREN          reduce using rule 216 (nonempty_expressionlist -> nonempty_expressionlist COMMA nonempty_expressionlist .)
    RBRACKET        reduce using rule 216 (nonempty_expressionlist -> nonempty_expressionlist COMMA nonempty_expressionlist .)
    RCURLY          reduce using rule 216 (nonempty_expressionlist -> nonempty_expressionlist COMMA nonempty_expressionlist .)

  ! COMMA           [ shift and go to state 227 ]


state 338

    (212) function_call -> expression LPAREN expressionlist . RPAREN

    RPAREN          shift and go to state 401


state 339

    (264) for_loop -> FOR error IN expression . COLON suite
    (266) for_loop -> FOR error IN expression . DOTDOT expression COLON suite
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 403
    DOTDOT          shift and go to state 402
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 340

    (265) for_loop -> FOR IDENTIFIER IN error . COLON suite
    (267) for_loop -> FOR IDENTIFIER IN error . DOTDOT expression COLON suite

    COLON           shift and go to state 405
    DOTDOT          shift and go to state 404


state 341

    (80) for_loop -> FOR IDENTIFIER IN expression . COLON suite
    (81) for_loop -> FOR IDENTIFIER IN expression . DOTDOT expression COLON suite
    (268) for_loop -> FOR IDENTIFIER IN expression . DOTDOT error COLON suite
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 407
    DOTDOT          shift and go to state 406
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 342

    (96) exceptlist_nonempty -> except_simple .

    ELSE            reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    FINALLY         reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    IF              reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    TRY             reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    WHILE           reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    FOR             reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    CONTINUE        reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    BREAK           reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    PASS            reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    RETURN          reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    YIELD           reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    RAISE           reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    DEL             reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    IDENTIFIER      reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    MINUS           reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    PLUS            reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    TILDE           reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    EXMARK          reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    NOT             reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    ASSERT          reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    LPAREN          reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    INTLITERAL      reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    FLOATLITERAL    reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    BOOLLITERAL     reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    STRINGLITERAL   reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    DOCSTRING       reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    NONE            reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    LAMBDA          reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    LBRACKET        reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    LCURLY          reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    $end            reduce using rule 96 (exceptlist_nonempty -> except_simple .)
    DEDENT          reduce using rule 96 (exceptlist_nonempty -> except_simple .)


state 343

    (98) exceptlist_nonempty -> except_specific .

    ELSE            reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    FINALLY         reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    IF              reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    TRY             reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    WHILE           reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    FOR             reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    CONTINUE        reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    BREAK           reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    PASS            reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    RETURN          reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    YIELD           reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    RAISE           reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    DEL             reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    IDENTIFIER      reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    MINUS           reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    PLUS            reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    TILDE           reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    EXMARK          reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    NOT             reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    ASSERT          reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    LPAREN          reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    INTLITERAL      reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    FLOATLITERAL    reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    BOOLLITERAL     reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    STRINGLITERAL   reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    DOCSTRING       reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    NONE            reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    LAMBDA          reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    LBRACKET        reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    LCURLY          reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    $end            reduce using rule 98 (exceptlist_nonempty -> except_specific .)
    DEDENT          reduce using rule 98 (exceptlist_nonempty -> except_specific .)


state 344

    (86) try_except -> TRY COLON suite exceptlist_nonempty . empty empty
    (87) try_except -> TRY COLON suite exceptlist_nonempty . except_else empty
    (88) try_except -> TRY COLON suite exceptlist_nonempty . empty except_finally
    (89) try_except -> TRY COLON suite exceptlist_nonempty . except_else except_finally
    (3) empty -> .
    (94) except_else -> . ELSE COLON suite

    FINALLY         reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)
    ELSE            shift and go to state 409

    except_else                    shift and go to state 408
    empty                          shift and go to state 410

state 345

    (91) except_simple -> EXCEPT . COLON suite
    (92) except_alias -> EXCEPT . IDENTIFIER AS IDENTIFIER COLON suite exceptlist
    (271) except_alias -> EXCEPT . error AS IDENTIFIER COLON suite exceptlist
    (272) except_alias -> EXCEPT . IDENTIFIER AS error COLON suite exceptlist
    (93) except_specific -> EXCEPT . IDENTIFIER COLON suite exceptlist
    (273) except_specific -> EXCEPT . error COLON suite exceptlist

    COLON           shift and go to state 411
    IDENTIFIER      shift and go to state 413
    error           shift and go to state 412


state 346

    (97) exceptlist_nonempty -> except_alias .

    ELSE            reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    FINALLY         reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    IF              reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    TRY             reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    WHILE           reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    FOR             reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    CONTINUE        reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    BREAK           reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    PASS            reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    RETURN          reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    YIELD           reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    RAISE           reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    DEL             reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    IDENTIFIER      reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    MINUS           reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    PLUS            reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    TILDE           reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    EXMARK          reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    NOT             reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    ASSERT          reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    LPAREN          reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    INTLITERAL      reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    FLOATLITERAL    reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    BOOLLITERAL     reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    STRINGLITERAL   reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    DOCSTRING       reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    NONE            reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    LAMBDA          reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    LBRACKET        reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    LCURLY          reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    $end            reduce using rule 97 (exceptlist_nonempty -> except_alias .)
    DEDENT          reduce using rule 97 (exceptlist_nonempty -> except_alias .)


state 347

    (90) try_except -> TRY COLON suite empty . empty except_finally
    (3) empty -> .

    FINALLY         reduce using rule 3 (empty -> .)

    empty                          shift and go to state 414

state 348

    (51) suite -> NL INDENT . optdoc block DEDENT
    (4) optdoc -> . DOCSTRING NL
    (5) optdoc -> . empty
    (3) empty -> .

  ! shift/reduce conflict for DOCSTRING resolved as shift
    DOCSTRING       shift and go to state 1
    COLONCOLON      reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)

  ! DOCSTRING       [ reduce using rule 3 (empty -> .) ]

    empty                          shift and go to state 4
    optdoc                         shift and go to state 415

state 349

    (52) suite -> statement_simple NL .

    ELIF            reduce using rule 52 (suite -> statement_simple NL .)
    ELSE            reduce using rule 52 (suite -> statement_simple NL .)
    IF              reduce using rule 52 (suite -> statement_simple NL .)
    TRY             reduce using rule 52 (suite -> statement_simple NL .)
    WHILE           reduce using rule 52 (suite -> statement_simple NL .)
    FOR             reduce using rule 52 (suite -> statement_simple NL .)
    CONTINUE        reduce using rule 52 (suite -> statement_simple NL .)
    BREAK           reduce using rule 52 (suite -> statement_simple NL .)
    PASS            reduce using rule 52 (suite -> statement_simple NL .)
    RETURN          reduce using rule 52 (suite -> statement_simple NL .)
    YIELD           reduce using rule 52 (suite -> statement_simple NL .)
    RAISE           reduce using rule 52 (suite -> statement_simple NL .)
    DEL             reduce using rule 52 (suite -> statement_simple NL .)
    IDENTIFIER      reduce using rule 52 (suite -> statement_simple NL .)
    MINUS           reduce using rule 52 (suite -> statement_simple NL .)
    PLUS            reduce using rule 52 (suite -> statement_simple NL .)
    TILDE           reduce using rule 52 (suite -> statement_simple NL .)
    EXMARK          reduce using rule 52 (suite -> statement_simple NL .)
    NOT             reduce using rule 52 (suite -> statement_simple NL .)
    ASSERT          reduce using rule 52 (suite -> statement_simple NL .)
    LPAREN          reduce using rule 52 (suite -> statement_simple NL .)
    INTLITERAL      reduce using rule 52 (suite -> statement_simple NL .)
    FLOATLITERAL    reduce using rule 52 (suite -> statement_simple NL .)
    BOOLLITERAL     reduce using rule 52 (suite -> statement_simple NL .)
    STRINGLITERAL   reduce using rule 52 (suite -> statement_simple NL .)
    DOCSTRING       reduce using rule 52 (suite -> statement_simple NL .)
    NONE            reduce using rule 52 (suite -> statement_simple NL .)
    LAMBDA          reduce using rule 52 (suite -> statement_simple NL .)
    LBRACKET        reduce using rule 52 (suite -> statement_simple NL .)
    LCURLY          reduce using rule 52 (suite -> statement_simple NL .)
    $end            reduce using rule 52 (suite -> statement_simple NL .)
    DEDENT          reduce using rule 52 (suite -> statement_simple NL .)
    DEF             reduce using rule 52 (suite -> statement_simple NL .)
    EXCEPT          reduce using rule 52 (suite -> statement_simple NL .)
    FINALLY         reduce using rule 52 (suite -> statement_simple NL .)


state 350

    (122) slicing -> expression LBRACKET empty COLON . expression optslice RBRACKET
    (124) slicing -> expression LBRACKET empty COLON . empty optslice RBRACKET
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (3) empty -> .
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    COLON           reduce using rule 3 (empty -> .)
    RBRACKET        reduce using rule 3 (empty -> .)
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    empty                          shift and go to state 416
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 417
    grouping                       shift and go to state 42

state 351

    (275) slicing -> expression LBRACKET error COLON . expression optslice RBRACKET
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 418
    grouping                       shift and go to state 42

state 352

    (274) indexing -> expression LBRACKET error RBRACKET .

    PLUS            reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    MINUS           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    TIMES           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    DIVIDE          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    PERCENT         reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    INTDIV          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    POW             reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    BITOR           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    BITAND          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    LSHIFT          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    RSHIFT          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    EQUALTO         reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    NEQUALTO        reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    LT              reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    LE              reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    GT              reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    GE              reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    REQUALTO        reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    BOOLOR          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    BOOLAND         reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    OR              reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    AND             reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    CARET           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    LPAREN          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    LBRACKET        reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    QMARK           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    DOT             reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    IS              reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    ISNOT           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    IN              reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    NOTIN           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    NL              reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    SEMICOLON       reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    RPAREN          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    COMMA           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    RBRACKET        reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    COLON           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    RCURLY          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    DOTDOT          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    error           reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    COLONCOLON      reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    EQUALS          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    PLUSEQU         reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    MINUSEQU        reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    TIMESEQU        reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    DIVEQU          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    MODEQU          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    BITANDEQU       reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    BITOREQU        reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    BITXOREQU       reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    LSHIFTEQU       reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    RSHIFTEQU       reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    POWEQU          reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)
    INTDIVEQU       reduce using rule 274 (indexing -> expression LBRACKET error RBRACKET .)


state 353

    (121) slicing -> expression LBRACKET expression COLON . expression optslice RBRACKET
    (123) slicing -> expression LBRACKET expression COLON . empty optslice RBRACKET
    (276) slicing -> expression LBRACKET expression COLON . expression error RBRACKET
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (3) empty -> .
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    COLON           reduce using rule 3 (empty -> .)
    RBRACKET        reduce using rule 3 (empty -> .)
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    empty                          shift and go to state 419
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 420
    grouping                       shift and go to state 42

state 354

    (120) indexing -> expression LBRACKET expression RBRACKET .

    PLUS            reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    PERCENT         reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    INTDIV          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    POW             reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    BITOR           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    BITAND          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    LSHIFT          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    RSHIFT          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    EQUALTO         reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    NEQUALTO        reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    REQUALTO        reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    BOOLOR          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    BOOLAND         reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    CARET           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    QMARK           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    IS              reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    ISNOT           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    IN              reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    NOTIN           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    NL              reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    COLON           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    RCURLY          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    DOTDOT          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    error           reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    COLONCOLON      reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    PLUSEQU         reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    MINUSEQU        reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    TIMESEQU        reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    DIVEQU          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    MODEQU          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    BITANDEQU       reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    BITOREQU        reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    BITXOREQU       reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    LSHIFTEQU       reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    RSHIFTEQU       reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    POWEQU          reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)
    INTDIVEQU       reduce using rule 120 (indexing -> expression LBRACKET expression RBRACKET .)


state 355

    (128) procedure_call -> expression LPAREN expressionlist RPAREN .
    (212) function_call -> expression LPAREN expressionlist RPAREN .

    NL              reduce using rule 128 (procedure_call -> expression LPAREN expressionlist RPAREN .)
    RPAREN          reduce using rule 128 (procedure_call -> expression LPAREN expressionlist RPAREN .)
    SEMICOLON       reduce using rule 128 (procedure_call -> expression LPAREN expressionlist RPAREN .)
    LPAREN          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    LBRACKET        reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    DOT             reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    PLUS            reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    MINUS           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    TIMES           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    DIVIDE          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    PERCENT         reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    INTDIV          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    POW             reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    BITOR           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    BITAND          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    LSHIFT          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    RSHIFT          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    EQUALTO         reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    NEQUALTO        reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    LT              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    LE              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    GT              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    GE              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    REQUALTO        reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    BOOLOR          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    BOOLAND         reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    OR              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    AND             reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    CARET           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    QMARK           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    IS              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    ISNOT           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    IN              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    NOTIN           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)


state 356

    (277) procedure_call -> expression LPAREN error RPAREN .

    NL              reduce using rule 277 (procedure_call -> expression LPAREN error RPAREN .)
    RPAREN          reduce using rule 277 (procedure_call -> expression LPAREN error RPAREN .)
    SEMICOLON       reduce using rule 277 (procedure_call -> expression LPAREN error RPAREN .)


state 357

    (246) ternary -> expression QMARK expression COLON . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 421
    grouping                       shift and go to state 42

state 358

    (230) function_literal -> LAMBDA LPAREN argumentlist RPAREN . ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> LAMBDA LPAREN argumentlist RPAREN . ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> LAMBDA LPAREN argumentlist RPAREN . ARROW type COLON LPAREN error RPAREN
    (289) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN . error LPAREN statement_simple RPAREN
    (290) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN . COLON LPAREN error RPAREN

    ARROW           shift and go to state 423
    error           shift and go to state 424
    COLON           shift and go to state 422


state 359

    (47) nonempty_argumentlist -> IDENTIFIER COLON . type
    (50) nonempty_defaultlist -> IDENTIFIER COLON . type EQUALS expression
    (262) nonempty_defaultlist -> IDENTIFIER COLON . error EQUALS expression
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 426
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    type                           shift and go to state 425
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    dictionary_type                shift and go to state 304
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    member_type                    shift and go to state 299
    list_type                      shift and go to state 321
    tupleparens                    shift and go to state 312
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316

state 360

    (49) nonempty_defaultlist -> nonempty_defaultlist COMMA . nonempty_defaultlist
    (49) nonempty_defaultlist -> . nonempty_defaultlist COMMA nonempty_defaultlist
    (50) nonempty_defaultlist -> . IDENTIFIER COLON type EQUALS expression
    (262) nonempty_defaultlist -> . IDENTIFIER COLON error EQUALS expression

    IDENTIFIER      shift and go to state 428

    nonempty_defaultlist           shift and go to state 427

state 361

    (46) argumentlist -> nonempty_defaultlist empty . empty
    (3) empty -> .

    RPAREN          reduce using rule 3 (empty -> .)
    error           reduce using rule 3 (empty -> .)

    empty                          shift and go to state 429

state 362

    (45) argumentlist -> empty empty . empty
    (3) empty -> .

    RPAREN          reduce using rule 3 (empty -> .)
    error           reduce using rule 3 (empty -> .)

    empty                          shift and go to state 430

state 363

    (285) function_literal -> LAMBDA LPAREN error RPAREN . ARROW type COLON LPAREN expression RPAREN
    (288) procedure_literal -> LAMBDA LPAREN error RPAREN . COLON LPAREN statement_simple RPAREN

    ARROW           shift and go to state 432
    COLON           shift and go to state 431


state 364

    (261) nonempty_argumentlist -> error COLON . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 433

state 365

    (43) argumentlist -> nonempty_argumentlist COMMA . nonempty_defaultlist
    (48) nonempty_argumentlist -> nonempty_argumentlist COMMA . nonempty_argumentlist
    (49) nonempty_defaultlist -> . nonempty_defaultlist COMMA nonempty_defaultlist
    (50) nonempty_defaultlist -> . IDENTIFIER COLON type EQUALS expression
    (262) nonempty_defaultlist -> . IDENTIFIER COLON error EQUALS expression
    (47) nonempty_argumentlist -> . IDENTIFIER COLON type
    (48) nonempty_argumentlist -> . nonempty_argumentlist COMMA nonempty_argumentlist
    (261) nonempty_argumentlist -> . error COLON type

    IDENTIFIER      shift and go to state 436
    error           shift and go to state 397

    nonempty_defaultlist           shift and go to state 435
    nonempty_argumentlist          shift and go to state 434

state 366

    (44) argumentlist -> nonempty_argumentlist empty . empty
    (3) empty -> .

    RPAREN          reduce using rule 3 (empty -> .)
    error           reduce using rule 3 (empty -> .)

    empty                          shift and go to state 437

state 367

    (263) while_loop -> WHILE error COLON suite .

    IF              reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    TRY             reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    WHILE           reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    FOR             reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    CONTINUE        reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    BREAK           reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    PASS            reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    RETURN          reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    YIELD           reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    RAISE           reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    DEL             reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    IDENTIFIER      reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    MINUS           reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    PLUS            reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    TILDE           reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    EXMARK          reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    NOT             reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    ASSERT          reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    LPAREN          reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    INTLITERAL      reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    FLOATLITERAL    reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    BOOLLITERAL     reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    STRINGLITERAL   reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    DOCSTRING       reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    NONE            reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    LAMBDA          reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    LBRACKET        reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    LCURLY          reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    $end            reduce using rule 263 (while_loop -> WHILE error COLON suite .)
    DEDENT          reduce using rule 263 (while_loop -> WHILE error COLON suite .)


state 368

    (79) while_loop -> WHILE expression COLON suite .

    IF              reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    TRY             reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    WHILE           reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    FOR             reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    CONTINUE        reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    BREAK           reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    PASS            reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    RETURN          reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    YIELD           reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    RAISE           reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    DEL             reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    IDENTIFIER      reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    MINUS           reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    PLUS            reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    TILDE           reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    EXMARK          reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    NOT             reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    ASSERT          reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    LPAREN          reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    INTLITERAL      reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    FLOATLITERAL    reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    BOOLLITERAL     reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    STRINGLITERAL   reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    DOCSTRING       reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    NONE            reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    LAMBDA          reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    LBRACKET        reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    LCURLY          reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    $end            reduce using rule 79 (while_loop -> WHILE expression COLON suite .)
    DEDENT          reduce using rule 79 (while_loop -> WHILE expression COLON suite .)


state 369

    (231) tuple_literal -> LPAREN . tuplelist RPAREN
    (232) tuplelist -> . nonempty_tuple
    (233) tuplelist -> . empty
    (234) nonempty_tuple -> . singletontuple
    (235) nonempty_tuple -> . crosstuple
    (3) empty -> .
    (236) singletontuple -> . nonempty_expressionlist COMMA
    (237) crosstuple -> . nonempty_expressionlist
    (215) nonempty_expressionlist -> . expression
    (216) nonempty_expressionlist -> . nonempty_expressionlist COMMA nonempty_expressionlist
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    RPAREN          reduce using rule 3 (empty -> .)
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    crosstuple                     shift and go to state 199
    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    singletontuple                 shift and go to state 200
    function_literal               shift and go to state 49
    tuplelist                      shift and go to state 201
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    empty                          shift and go to state 202
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    nonempty_tuple                 shift and go to state 204
    nonempty_expressionlist        shift and go to state 203
    ternary                        shift and go to state 92
    expression                     shift and go to state 121
    grouping                       shift and go to state 42

state 370

    (134) assertmessage -> ASSERT expression COMMA literal .

    NL              reduce using rule 134 (assertmessage -> ASSERT expression COMMA literal .)
    SEMICOLON       reduce using rule 134 (assertmessage -> ASSERT expression COMMA literal .)
    RPAREN          reduce using rule 134 (assertmessage -> ASSERT expression COMMA literal .)


state 371

    (243) nonempty_dictionarylist -> nonempty_dictionarylist COMMA nonempty_dictionarylist .
    (243) nonempty_dictionarylist -> nonempty_dictionarylist . COMMA nonempty_dictionarylist

    COMMA           reduce using rule 243 (nonempty_dictionarylist -> nonempty_dictionarylist COMMA nonempty_dictionarylist .)
    RCURLY          reduce using rule 243 (nonempty_dictionarylist -> nonempty_dictionarylist COMMA nonempty_dictionarylist .)

  ! COMMA           [ shift and go to state 283 ]


state 372

    (242) nonempty_dictionarylist -> expression . COLON expression
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 286
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 373

    (242) nonempty_dictionarylist -> expression COLON expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COMMA           reduce using rule 242 (nonempty_dictionarylist -> expression COLON expression .)
    RCURLY          reduce using rule 242 (nonempty_dictionarylist -> expression COLON expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 374

    (269) conditional -> IF error COLON suite . conditional_extension
    (83) conditional_extension -> . empty
    (84) conditional_extension -> . ELIF expression COLON suite conditional_extension
    (85) conditional_extension -> . ELSE COLON suite
    (270) conditional_extension -> . ELIF error COLON suite conditional_extension
    (3) empty -> .

    ELIF            shift and go to state 438
    ELSE            shift and go to state 440
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    conditional_extension          shift and go to state 439
    empty                          shift and go to state 441

state 375

    (82) conditional -> IF expression COLON suite . conditional_extension
    (83) conditional_extension -> . empty
    (84) conditional_extension -> . ELIF expression COLON suite conditional_extension
    (85) conditional_extension -> . ELSE COLON suite
    (270) conditional_extension -> . ELIF error COLON suite conditional_extension
    (3) empty -> .

    ELIF            shift and go to state 438
    ELSE            shift and go to state 440
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    conditional_extension          shift and go to state 442
    empty                          shift and go to state 441

state 376

    (147) generator_type -> GENERATOR OF . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 443

state 377

    (169) listbracket -> LBRACKET type . RBRACKET

    RBRACKET        shift and go to state 444


state 378

    (148) function_type -> FN LPAREN . typelist RPAREN ARROW type
    (278) function_type -> FN LPAREN . error RPAREN ARROW type
    (150) typelist -> . nonempty_typelist COMMA nonempty_default_typelist
    (151) typelist -> . nonempty_typelist empty empty
    (152) typelist -> . empty empty nonempty_default_typelist
    (153) typelist -> . empty empty empty
    (154) nonempty_typelist -> . type
    (155) nonempty_typelist -> . nonempty_typelist COMMA nonempty_typelist
    (3) empty -> .
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 449
    QMARK           reduce using rule 3 (empty -> .)
    RPAREN          reduce using rule 3 (empty -> .)
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    typelist                       shift and go to state 448
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    nonempty_typelist              shift and go to state 445
    tuple_type                     shift and go to state 316
    type                           shift and go to state 446
    tupleof                        shift and go to state 315
    empty                          shift and go to state 447

state 379

    (170) set_type -> SET OF . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 450

state 380

    (146) member_type -> IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 451


state 381

    (30) declaration -> IDENTIFIER COLON type EQUALS . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 452
    grouping                       shift and go to state 42

state 382

    (171) frozenset_type -> FROZENSET OF . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 453

state 383

    (164) nonempty_tuple_typelist -> type .

    TIMES           reduce using rule 164 (nonempty_tuple_typelist -> type .)
    RPAREN          reduce using rule 164 (nonempty_tuple_typelist -> type .)


state 384

    (163) tuple_typelist -> empty .

    RPAREN          reduce using rule 163 (tuple_typelist -> empty .)


state 385

    (161) tupleparens -> LPAREN tuple_typelist . RPAREN

    RPAREN          shift and go to state 454


state 386

    (162) tuple_typelist -> nonempty_tuple_typelist .
    (165) nonempty_tuple_typelist -> nonempty_tuple_typelist . TIMES nonempty_tuple_typelist

    RPAREN          reduce using rule 162 (tuple_typelist -> nonempty_tuple_typelist .)
    TIMES           shift and go to state 455


state 387

    (284) tuple_type -> TUPLE OF . LPAREN error RPAREN
    (160) tupleof -> TUPLE OF . LPAREN tuple_typelist RPAREN

    LPAREN          shift and go to state 456


state 388

    (283) tuple_type -> TUPLE error . LPAREN tuple_typelist RPAREN

    LPAREN          shift and go to state 457


state 389

    (149) procedure_type -> PROC LPAREN . typelist RPAREN
    (279) procedure_type -> PROC LPAREN . error RPAREN
    (150) typelist -> . nonempty_typelist COMMA nonempty_default_typelist
    (151) typelist -> . nonempty_typelist empty empty
    (152) typelist -> . empty empty nonempty_default_typelist
    (153) typelist -> . empty empty empty
    (154) nonempty_typelist -> . type
    (155) nonempty_typelist -> . nonempty_typelist COMMA nonempty_typelist
    (3) empty -> .
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 459
    QMARK           reduce using rule 3 (empty -> .)
    RPAREN          reduce using rule 3 (empty -> .)
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    typelist                       shift and go to state 458
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    nonempty_typelist              shift and go to state 445
    tuple_type                     shift and go to state 316
    type                           shift and go to state 446
    tupleof                        shift and go to state 315
    empty                          shift and go to state 447

state 390

    (168) listof -> LIST OF . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 460

state 391

    (172) dictionary_type -> DICT OF . LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> DICT OF . LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> DICT OF . LBRACKET type BITOR error RBRACKET

    LBRACKET        shift and go to state 461


state 392

    (280) dictionary_type -> DICT error . LBRACKET type BITOR type RBRACKET

    LBRACKET        shift and go to state 462


state 393

    (253) declaration -> IDENTIFIER COLON error EQUALS . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 463
    grouping                       shift and go to state 42

state 394

    (18) importlist -> importlist COMMA importlist .
    (18) importlist -> importlist . COMMA importlist

    COMMA           reduce using rule 18 (importlist -> importlist COMMA importlist .)
    NL              reduce using rule 18 (importlist -> importlist COMMA importlist .)

  ! COMMA           [ shift and go to state 325 ]


state 395

    (17) importlist -> IDENTIFIER AS IDENTIFIER .

    COMMA           reduce using rule 17 (importlist -> IDENTIFIER AS IDENTIFIER .)
    NL              reduce using rule 17 (importlist -> IDENTIFIER AS IDENTIFIER .)


state 396

    (256) function_definition -> DEF error LPAREN argumentlist . RPAREN ARROW type COLON suite
    (259) procedure_definition -> DEF error LPAREN argumentlist . RPAREN COLON suite

    RPAREN          shift and go to state 464


state 397

    (261) nonempty_argumentlist -> error . COLON type

    COLON           shift and go to state 364


state 398

    (41) function_definition -> DEF IDENTIFIER LPAREN argumentlist . RPAREN ARROW type COLON suite
    (257) function_definition -> DEF IDENTIFIER LPAREN argumentlist . error ARROW type COLON suite
    (258) function_definition -> DEF IDENTIFIER LPAREN argumentlist . RPAREN ARROW error COLON suite
    (42) procedure_definition -> DEF IDENTIFIER LPAREN argumentlist . RPAREN COLON suite
    (260) procedure_definition -> DEF IDENTIFIER LPAREN argumentlist . error COLON suite

    RPAREN          shift and go to state 465
    error           shift and go to state 466


state 399

    (33) class_definition -> CLASS IDENTIFIER opt_extends COLON NL . INDENT class_suite DEDENT
    (255) class_definition -> CLASS IDENTIFIER opt_extends COLON NL . INDENT error DEDENT

    INDENT          shift and go to state 467


state 400

    (254) class_definition -> CLASS IDENTIFIER opt_extends error NL . INDENT class_suite DEDENT

    INDENT          shift and go to state 468


state 401

    (212) function_call -> expression LPAREN expressionlist RPAREN .

    COLON           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    DOTDOT          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    PLUS            reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    MINUS           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    TIMES           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    DIVIDE          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    PERCENT         reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    INTDIV          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    POW             reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    BITOR           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    BITAND          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    LSHIFT          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    RSHIFT          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    EQUALTO         reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    NEQUALTO        reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    LT              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    LE              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    GT              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    GE              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    REQUALTO        reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    BOOLOR          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    BOOLAND         reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    OR              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    AND             reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    CARET           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    LPAREN          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    LBRACKET        reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    QMARK           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    DOT             reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    IS              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    ISNOT           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    IN              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    NOTIN           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    RCURLY          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    COMMA           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    RBRACKET        reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    NL              reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    SEMICOLON       reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    RPAREN          reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    error           reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)
    COLONCOLON      reduce using rule 212 (function_call -> expression LPAREN expressionlist RPAREN .)


state 402

    (266) for_loop -> FOR error IN expression DOTDOT . expression COLON suite
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 469
    grouping                       shift and go to state 42

state 403

    (264) for_loop -> FOR error IN expression COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 470
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 404

    (267) for_loop -> FOR IDENTIFIER IN error DOTDOT . expression COLON suite
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 471
    grouping                       shift and go to state 42

state 405

    (265) for_loop -> FOR IDENTIFIER IN error COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 472
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 406

    (81) for_loop -> FOR IDENTIFIER IN expression DOTDOT . expression COLON suite
    (268) for_loop -> FOR IDENTIFIER IN expression DOTDOT . error COLON suite
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 473
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 474
    grouping                       shift and go to state 42

state 407

    (80) for_loop -> FOR IDENTIFIER IN expression COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 475
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 408

    (87) try_except -> TRY COLON suite exceptlist_nonempty except_else . empty
    (89) try_except -> TRY COLON suite exceptlist_nonempty except_else . except_finally
    (3) empty -> .
    (95) except_finally -> . FINALLY COLON suite

    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)
    FINALLY         shift and go to state 476

    empty                          shift and go to state 478
    except_finally                 shift and go to state 477

state 409

    (94) except_else -> ELSE . COLON suite

    COLON           shift and go to state 479


state 410

    (86) try_except -> TRY COLON suite exceptlist_nonempty empty . empty
    (88) try_except -> TRY COLON suite exceptlist_nonempty empty . except_finally
    (3) empty -> .
    (95) except_finally -> . FINALLY COLON suite

    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)
    FINALLY         shift and go to state 476

    empty                          shift and go to state 481
    except_finally                 shift and go to state 480

state 411

    (91) except_simple -> EXCEPT COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 482
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 412

    (271) except_alias -> EXCEPT error . AS IDENTIFIER COLON suite exceptlist
    (273) except_specific -> EXCEPT error . COLON suite exceptlist

    AS              shift and go to state 483
    COLON           shift and go to state 484


state 413

    (92) except_alias -> EXCEPT IDENTIFIER . AS IDENTIFIER COLON suite exceptlist
    (272) except_alias -> EXCEPT IDENTIFIER . AS error COLON suite exceptlist
    (93) except_specific -> EXCEPT IDENTIFIER . COLON suite exceptlist

    AS              shift and go to state 485
    COLON           shift and go to state 486


state 414

    (90) try_except -> TRY COLON suite empty empty . except_finally
    (95) except_finally -> . FINALLY COLON suite

    FINALLY         shift and go to state 476

    except_finally                 shift and go to state 487

state 415

    (51) suite -> NL INDENT optdoc . block DEDENT
    (53) block -> . variableblock nonempty_block
    (25) variableblock -> . COLONCOLON nonempty_variableblock COLONCOLON NL
    (26) variableblock -> . empty empty
    (252) variableblock -> . COLONCOLON error COLONCOLON NL
    (3) empty -> .

    COLONCOLON      shift and go to state 18
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)

    variableblock                  shift and go to state 488
    block                          shift and go to state 489
    empty                          shift and go to state 19

state 416

    (124) slicing -> expression LBRACKET empty COLON empty . optslice RBRACKET
    (125) optslice -> . empty empty
    (126) optslice -> . COLON empty
    (127) optslice -> . COLON expression
    (3) empty -> .

    COLON           shift and go to state 491
    RBRACKET        reduce using rule 3 (empty -> .)

    empty                          shift and go to state 492
    optslice                       shift and go to state 490

state 417

    (122) slicing -> expression LBRACKET empty COLON expression . optslice RBRACKET
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression
    (125) optslice -> . empty empty
    (126) optslice -> . COLON empty
    (127) optslice -> . COLON expression
    (3) empty -> .

    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173
    COLON           shift and go to state 491
    RBRACKET        reduce using rule 3 (empty -> .)

    empty                          shift and go to state 492
    optslice                       shift and go to state 493

state 418

    (275) slicing -> expression LBRACKET error COLON expression . optslice RBRACKET
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression
    (125) optslice -> . empty empty
    (126) optslice -> . COLON empty
    (127) optslice -> . COLON expression
    (3) empty -> .

    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173
    COLON           shift and go to state 491
    RBRACKET        reduce using rule 3 (empty -> .)

    empty                          shift and go to state 492
    optslice                       shift and go to state 494

state 419

    (123) slicing -> expression LBRACKET expression COLON empty . optslice RBRACKET
    (125) optslice -> . empty empty
    (126) optslice -> . COLON empty
    (127) optslice -> . COLON expression
    (3) empty -> .

    COLON           shift and go to state 491
    RBRACKET        reduce using rule 3 (empty -> .)

    empty                          shift and go to state 492
    optslice                       shift and go to state 495

state 420

    (121) slicing -> expression LBRACKET expression COLON expression . optslice RBRACKET
    (276) slicing -> expression LBRACKET expression COLON expression . error RBRACKET
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression
    (125) optslice -> . empty empty
    (126) optslice -> . COLON empty
    (127) optslice -> . COLON expression
    (3) empty -> .

    error           shift and go to state 497
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173
    COLON           shift and go to state 491
    RBRACKET        reduce using rule 3 (empty -> .)

    empty                          shift and go to state 492
    optslice                       shift and go to state 496

state 421

    (246) ternary -> expression QMARK expression COLON expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    PERCENT         reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    CARET           reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    QMARK           reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    COMMA           reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    RPAREN          reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    error           reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    RBRACKET        reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    NL              reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    SEMICOLON       reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    COLON           reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    RCURLY          reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    DOTDOT          reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    COLONCOLON      reduce using rule 246 (ternary -> expression QMARK expression COLON expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173

  ! PLUS            [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! MINUS           [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! TIMES           [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! INTDIV          [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! POW             [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! BITOR           [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! BITAND          [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! LSHIFT          [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! RSHIFT          [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! EQUALTO         [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! NEQUALTO        [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! LT              [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! LE              [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! GT              [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! GE              [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! REQUALTO        [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! BOOLOR          [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! BOOLAND         [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! OR              [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! AND             [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! LPAREN          [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! LBRACKET        [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! DOT             [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! IS              [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! ISNOT           [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! IN              [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! NOTIN           [ reduce using rule 246 (ternary -> expression QMARK expression COLON expression .) ]
  ! PERCENT         [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 150 ]
  ! QMARK           [ shift and go to state 178 ]


state 422

    (290) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON . LPAREN error RPAREN

    LPAREN          shift and go to state 498


state 423

    (230) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW . type COLON LPAREN expression RPAREN
    (286) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW . error COLON LPAREN expression RPAREN
    (287) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW . type COLON LPAREN error RPAREN
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 500
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    dictionary_type                shift and go to state 304
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    member_type                    shift and go to state 299
    list_type                      shift and go to state 321
    tupleparens                    shift and go to state 312
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 499

state 424

    (289) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error . LPAREN statement_simple RPAREN

    LPAREN          shift and go to state 501


state 425

    (47) nonempty_argumentlist -> IDENTIFIER COLON type .
    (50) nonempty_defaultlist -> IDENTIFIER COLON type . EQUALS expression

    COMMA           reduce using rule 47 (nonempty_argumentlist -> IDENTIFIER COLON type .)
    RPAREN          reduce using rule 47 (nonempty_argumentlist -> IDENTIFIER COLON type .)
    error           reduce using rule 47 (nonempty_argumentlist -> IDENTIFIER COLON type .)
    EQUALS          shift and go to state 502


state 426

    (262) nonempty_defaultlist -> IDENTIFIER COLON error . EQUALS expression

    EQUALS          shift and go to state 503


state 427

    (49) nonempty_defaultlist -> nonempty_defaultlist COMMA nonempty_defaultlist .
    (49) nonempty_defaultlist -> nonempty_defaultlist . COMMA nonempty_defaultlist

    COMMA           reduce using rule 49 (nonempty_defaultlist -> nonempty_defaultlist COMMA nonempty_defaultlist .)
    RPAREN          reduce using rule 49 (nonempty_defaultlist -> nonempty_defaultlist COMMA nonempty_defaultlist .)
    error           reduce using rule 49 (nonempty_defaultlist -> nonempty_defaultlist COMMA nonempty_defaultlist .)

  ! COMMA           [ shift and go to state 360 ]


state 428

    (50) nonempty_defaultlist -> IDENTIFIER . COLON type EQUALS expression
    (262) nonempty_defaultlist -> IDENTIFIER . COLON error EQUALS expression

    COLON           shift and go to state 504


state 429

    (46) argumentlist -> nonempty_defaultlist empty empty .

    RPAREN          reduce using rule 46 (argumentlist -> nonempty_defaultlist empty empty .)
    error           reduce using rule 46 (argumentlist -> nonempty_defaultlist empty empty .)


state 430

    (45) argumentlist -> empty empty empty .

    RPAREN          reduce using rule 45 (argumentlist -> empty empty empty .)
    error           reduce using rule 45 (argumentlist -> empty empty empty .)


state 431

    (288) procedure_literal -> LAMBDA LPAREN error RPAREN COLON . LPAREN statement_simple RPAREN

    LPAREN          shift and go to state 505


state 432

    (285) function_literal -> LAMBDA LPAREN error RPAREN ARROW . type COLON LPAREN expression RPAREN
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    type                           shift and go to state 506
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    dictionary_type                shift and go to state 304
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    member_type                    shift and go to state 299
    list_type                      shift and go to state 321
    tupleparens                    shift and go to state 312
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316

state 433

    (261) nonempty_argumentlist -> error COLON type .

    COMMA           reduce using rule 261 (nonempty_argumentlist -> error COLON type .)
    RPAREN          reduce using rule 261 (nonempty_argumentlist -> error COLON type .)
    error           reduce using rule 261 (nonempty_argumentlist -> error COLON type .)


state 434

    (48) nonempty_argumentlist -> nonempty_argumentlist COMMA nonempty_argumentlist .
    (48) nonempty_argumentlist -> nonempty_argumentlist . COMMA nonempty_argumentlist

    COMMA           reduce using rule 48 (nonempty_argumentlist -> nonempty_argumentlist COMMA nonempty_argumentlist .)
    RPAREN          reduce using rule 48 (nonempty_argumentlist -> nonempty_argumentlist COMMA nonempty_argumentlist .)
    error           reduce using rule 48 (nonempty_argumentlist -> nonempty_argumentlist COMMA nonempty_argumentlist .)

  ! COMMA           [ shift and go to state 507 ]


state 435

    (43) argumentlist -> nonempty_argumentlist COMMA nonempty_defaultlist .
    (49) nonempty_defaultlist -> nonempty_defaultlist . COMMA nonempty_defaultlist

    RPAREN          reduce using rule 43 (argumentlist -> nonempty_argumentlist COMMA nonempty_defaultlist .)
    error           reduce using rule 43 (argumentlist -> nonempty_argumentlist COMMA nonempty_defaultlist .)
    COMMA           shift and go to state 360


state 436

    (50) nonempty_defaultlist -> IDENTIFIER . COLON type EQUALS expression
    (262) nonempty_defaultlist -> IDENTIFIER . COLON error EQUALS expression
    (47) nonempty_argumentlist -> IDENTIFIER . COLON type

    COLON           shift and go to state 508


state 437

    (44) argumentlist -> nonempty_argumentlist empty empty .

    RPAREN          reduce using rule 44 (argumentlist -> nonempty_argumentlist empty empty .)
    error           reduce using rule 44 (argumentlist -> nonempty_argumentlist empty empty .)


state 438

    (84) conditional_extension -> ELIF . expression COLON suite conditional_extension
    (270) conditional_extension -> ELIF . error COLON suite conditional_extension
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 509
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    tuple_literal                  shift and go to state 31
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 510
    grouping                       shift and go to state 42

state 439

    (269) conditional -> IF error COLON suite conditional_extension .

    IF              reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    TRY             reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    WHILE           reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    FOR             reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    CONTINUE        reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    BREAK           reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    PASS            reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    RETURN          reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    YIELD           reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    RAISE           reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    DEL             reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    IDENTIFIER      reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    MINUS           reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    PLUS            reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    TILDE           reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    EXMARK          reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    NOT             reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    ASSERT          reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    LPAREN          reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    INTLITERAL      reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    FLOATLITERAL    reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    BOOLLITERAL     reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    STRINGLITERAL   reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    DOCSTRING       reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    NONE            reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    LAMBDA          reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    LBRACKET        reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    LCURLY          reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    DEDENT          reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)
    $end            reduce using rule 269 (conditional -> IF error COLON suite conditional_extension .)


state 440

    (85) conditional_extension -> ELSE . COLON suite

    COLON           shift and go to state 511


state 441

    (83) conditional_extension -> empty .

    IF              reduce using rule 83 (conditional_extension -> empty .)
    TRY             reduce using rule 83 (conditional_extension -> empty .)
    WHILE           reduce using rule 83 (conditional_extension -> empty .)
    FOR             reduce using rule 83 (conditional_extension -> empty .)
    CONTINUE        reduce using rule 83 (conditional_extension -> empty .)
    BREAK           reduce using rule 83 (conditional_extension -> empty .)
    PASS            reduce using rule 83 (conditional_extension -> empty .)
    RETURN          reduce using rule 83 (conditional_extension -> empty .)
    YIELD           reduce using rule 83 (conditional_extension -> empty .)
    RAISE           reduce using rule 83 (conditional_extension -> empty .)
    DEL             reduce using rule 83 (conditional_extension -> empty .)
    IDENTIFIER      reduce using rule 83 (conditional_extension -> empty .)
    MINUS           reduce using rule 83 (conditional_extension -> empty .)
    PLUS            reduce using rule 83 (conditional_extension -> empty .)
    TILDE           reduce using rule 83 (conditional_extension -> empty .)
    EXMARK          reduce using rule 83 (conditional_extension -> empty .)
    NOT             reduce using rule 83 (conditional_extension -> empty .)
    ASSERT          reduce using rule 83 (conditional_extension -> empty .)
    LPAREN          reduce using rule 83 (conditional_extension -> empty .)
    INTLITERAL      reduce using rule 83 (conditional_extension -> empty .)
    FLOATLITERAL    reduce using rule 83 (conditional_extension -> empty .)
    BOOLLITERAL     reduce using rule 83 (conditional_extension -> empty .)
    STRINGLITERAL   reduce using rule 83 (conditional_extension -> empty .)
    DOCSTRING       reduce using rule 83 (conditional_extension -> empty .)
    NONE            reduce using rule 83 (conditional_extension -> empty .)
    LAMBDA          reduce using rule 83 (conditional_extension -> empty .)
    LBRACKET        reduce using rule 83 (conditional_extension -> empty .)
    LCURLY          reduce using rule 83 (conditional_extension -> empty .)
    $end            reduce using rule 83 (conditional_extension -> empty .)
    DEDENT          reduce using rule 83 (conditional_extension -> empty .)


state 442

    (82) conditional -> IF expression COLON suite conditional_extension .

    IF              reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    TRY             reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    WHILE           reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    FOR             reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    CONTINUE        reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    BREAK           reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    PASS            reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    RETURN          reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    YIELD           reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    RAISE           reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    DEL             reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    IDENTIFIER      reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    MINUS           reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    PLUS            reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    TILDE           reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    EXMARK          reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    NOT             reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    ASSERT          reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    LPAREN          reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    INTLITERAL      reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    FLOATLITERAL    reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    BOOLLITERAL     reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    STRINGLITERAL   reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    DOCSTRING       reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    NONE            reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    LAMBDA          reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    LBRACKET        reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    LCURLY          reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    DEDENT          reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)
    $end            reduce using rule 82 (conditional -> IF expression COLON suite conditional_extension .)


state 443

    (147) generator_type -> GENERATOR OF type .

    COLON           reduce using rule 147 (generator_type -> GENERATOR OF type .)
    BITOR           reduce using rule 147 (generator_type -> GENERATOR OF type .)
    EQUALS          reduce using rule 147 (generator_type -> GENERATOR OF type .)
    COLONCOLON      reduce using rule 147 (generator_type -> GENERATOR OF type .)
    COMMA           reduce using rule 147 (generator_type -> GENERATOR OF type .)
    error           reduce using rule 147 (generator_type -> GENERATOR OF type .)
    RBRACKET        reduce using rule 147 (generator_type -> GENERATOR OF type .)
    TIMES           reduce using rule 147 (generator_type -> GENERATOR OF type .)
    RPAREN          reduce using rule 147 (generator_type -> GENERATOR OF type .)


state 444

    (169) listbracket -> LBRACKET type RBRACKET .

    COLON           reduce using rule 169 (listbracket -> LBRACKET type RBRACKET .)
    TIMES           reduce using rule 169 (listbracket -> LBRACKET type RBRACKET .)
    RPAREN          reduce using rule 169 (listbracket -> LBRACKET type RBRACKET .)
    RBRACKET        reduce using rule 169 (listbracket -> LBRACKET type RBRACKET .)
    COMMA           reduce using rule 169 (listbracket -> LBRACKET type RBRACKET .)
    error           reduce using rule 169 (listbracket -> LBRACKET type RBRACKET .)
    EQUALS          reduce using rule 169 (listbracket -> LBRACKET type RBRACKET .)
    COLONCOLON      reduce using rule 169 (listbracket -> LBRACKET type RBRACKET .)
    BITOR           reduce using rule 169 (listbracket -> LBRACKET type RBRACKET .)


state 445

    (150) typelist -> nonempty_typelist . COMMA nonempty_default_typelist
    (151) typelist -> nonempty_typelist . empty empty
    (155) nonempty_typelist -> nonempty_typelist . COMMA nonempty_typelist
    (3) empty -> .

    COMMA           shift and go to state 512
    RPAREN          reduce using rule 3 (empty -> .)

    empty                          shift and go to state 513

state 446

    (154) nonempty_typelist -> type .

    COMMA           reduce using rule 154 (nonempty_typelist -> type .)
    RPAREN          reduce using rule 154 (nonempty_typelist -> type .)


state 447

    (152) typelist -> empty . empty nonempty_default_typelist
    (153) typelist -> empty . empty empty
    (3) empty -> .

    QMARK           reduce using rule 3 (empty -> .)
    RPAREN          reduce using rule 3 (empty -> .)

    empty                          shift and go to state 514

state 448

    (148) function_type -> FN LPAREN typelist . RPAREN ARROW type

    RPAREN          shift and go to state 515


state 449

    (278) function_type -> FN LPAREN error . RPAREN ARROW type

    RPAREN          shift and go to state 516


state 450

    (170) set_type -> SET OF type .

    COLON           reduce using rule 170 (set_type -> SET OF type .)
    RBRACKET        reduce using rule 170 (set_type -> SET OF type .)
    BITOR           reduce using rule 170 (set_type -> SET OF type .)
    COMMA           reduce using rule 170 (set_type -> SET OF type .)
    RPAREN          reduce using rule 170 (set_type -> SET OF type .)
    EQUALS          reduce using rule 170 (set_type -> SET OF type .)
    COLONCOLON      reduce using rule 170 (set_type -> SET OF type .)
    error           reduce using rule 170 (set_type -> SET OF type .)
    TIMES           reduce using rule 170 (set_type -> SET OF type .)


state 451

    (146) member_type -> IDENTIFIER DOT IDENTIFIER .

    EQUALS          reduce using rule 146 (member_type -> IDENTIFIER DOT IDENTIFIER .)
    COLONCOLON      reduce using rule 146 (member_type -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 146 (member_type -> IDENTIFIER DOT IDENTIFIER .)
    COLON           reduce using rule 146 (member_type -> IDENTIFIER DOT IDENTIFIER .)
    error           reduce using rule 146 (member_type -> IDENTIFIER DOT IDENTIFIER .)
    RBRACKET        reduce using rule 146 (member_type -> IDENTIFIER DOT IDENTIFIER .)
    TIMES           reduce using rule 146 (member_type -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 146 (member_type -> IDENTIFIER DOT IDENTIFIER .)
    BITOR           reduce using rule 146 (member_type -> IDENTIFIER DOT IDENTIFIER .)


state 452

    (30) declaration -> IDENTIFIER COLON type EQUALS expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COMMA           reduce using rule 30 (declaration -> IDENTIFIER COLON type EQUALS expression .)
    COLONCOLON      reduce using rule 30 (declaration -> IDENTIFIER COLON type EQUALS expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 453

    (171) frozenset_type -> FROZENSET OF type .

    EQUALS          reduce using rule 171 (frozenset_type -> FROZENSET OF type .)
    COLONCOLON      reduce using rule 171 (frozenset_type -> FROZENSET OF type .)
    COMMA           reduce using rule 171 (frozenset_type -> FROZENSET OF type .)
    COLON           reduce using rule 171 (frozenset_type -> FROZENSET OF type .)
    error           reduce using rule 171 (frozenset_type -> FROZENSET OF type .)
    RBRACKET        reduce using rule 171 (frozenset_type -> FROZENSET OF type .)
    TIMES           reduce using rule 171 (frozenset_type -> FROZENSET OF type .)
    RPAREN          reduce using rule 171 (frozenset_type -> FROZENSET OF type .)
    BITOR           reduce using rule 171 (frozenset_type -> FROZENSET OF type .)


state 454

    (161) tupleparens -> LPAREN tuple_typelist RPAREN .

    BITOR           reduce using rule 161 (tupleparens -> LPAREN tuple_typelist RPAREN .)
    RBRACKET        reduce using rule 161 (tupleparens -> LPAREN tuple_typelist RPAREN .)
    EQUALS          reduce using rule 161 (tupleparens -> LPAREN tuple_typelist RPAREN .)
    COLONCOLON      reduce using rule 161 (tupleparens -> LPAREN tuple_typelist RPAREN .)
    COMMA           reduce using rule 161 (tupleparens -> LPAREN tuple_typelist RPAREN .)
    TIMES           reduce using rule 161 (tupleparens -> LPAREN tuple_typelist RPAREN .)
    RPAREN          reduce using rule 161 (tupleparens -> LPAREN tuple_typelist RPAREN .)
    COLON           reduce using rule 161 (tupleparens -> LPAREN tuple_typelist RPAREN .)
    error           reduce using rule 161 (tupleparens -> LPAREN tuple_typelist RPAREN .)


state 455

    (165) nonempty_tuple_typelist -> nonempty_tuple_typelist TIMES . nonempty_tuple_typelist
    (164) nonempty_tuple_typelist -> . type
    (165) nonempty_tuple_typelist -> . nonempty_tuple_typelist TIMES nonempty_tuple_typelist
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 383
    nonempty_tuple_typelist        shift and go to state 517

state 456

    (284) tuple_type -> TUPLE OF LPAREN . error RPAREN
    (160) tupleof -> TUPLE OF LPAREN . tuple_typelist RPAREN
    (162) tuple_typelist -> . nonempty_tuple_typelist
    (163) tuple_typelist -> . empty
    (164) nonempty_tuple_typelist -> . type
    (165) nonempty_tuple_typelist -> . nonempty_tuple_typelist TIMES nonempty_tuple_typelist
    (3) empty -> .
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 519
    RPAREN          reduce using rule 3 (empty -> .)
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tuple_typelist                 shift and go to state 518
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 383
    nonempty_tuple_typelist        shift and go to state 386
    empty                          shift and go to state 384

state 457

    (283) tuple_type -> TUPLE error LPAREN . tuple_typelist RPAREN
    (162) tuple_typelist -> . nonempty_tuple_typelist
    (163) tuple_typelist -> . empty
    (164) nonempty_tuple_typelist -> . type
    (165) nonempty_tuple_typelist -> . nonempty_tuple_typelist TIMES nonempty_tuple_typelist
    (3) empty -> .
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    RPAREN          reduce using rule 3 (empty -> .)
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tuple_typelist                 shift and go to state 520
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 383
    nonempty_tuple_typelist        shift and go to state 386
    empty                          shift and go to state 384

state 458

    (149) procedure_type -> PROC LPAREN typelist . RPAREN

    RPAREN          shift and go to state 521


state 459

    (279) procedure_type -> PROC LPAREN error . RPAREN

    RPAREN          shift and go to state 522


state 460

    (168) listof -> LIST OF type .

    EQUALS          reduce using rule 168 (listof -> LIST OF type .)
    COLONCOLON      reduce using rule 168 (listof -> LIST OF type .)
    COMMA           reduce using rule 168 (listof -> LIST OF type .)
    COLON           reduce using rule 168 (listof -> LIST OF type .)
    error           reduce using rule 168 (listof -> LIST OF type .)
    RBRACKET        reduce using rule 168 (listof -> LIST OF type .)
    TIMES           reduce using rule 168 (listof -> LIST OF type .)
    RPAREN          reduce using rule 168 (listof -> LIST OF type .)
    BITOR           reduce using rule 168 (listof -> LIST OF type .)


state 461

    (172) dictionary_type -> DICT OF LBRACKET . type BITOR type RBRACKET
    (281) dictionary_type -> DICT OF LBRACKET . error BITOR type RBRACKET
    (282) dictionary_type -> DICT OF LBRACKET . type BITOR error RBRACKET
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 524
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 523

state 462

    (280) dictionary_type -> DICT error LBRACKET . type BITOR type RBRACKET
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 525

state 463

    (253) declaration -> IDENTIFIER COLON error EQUALS expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COMMA           reduce using rule 253 (declaration -> IDENTIFIER COLON error EQUALS expression .)
    COLONCOLON      reduce using rule 253 (declaration -> IDENTIFIER COLON error EQUALS expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 464

    (256) function_definition -> DEF error LPAREN argumentlist RPAREN . ARROW type COLON suite
    (259) procedure_definition -> DEF error LPAREN argumentlist RPAREN . COLON suite

    ARROW           shift and go to state 527
    COLON           shift and go to state 526


state 465

    (41) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN . ARROW type COLON suite
    (258) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN . ARROW error COLON suite
    (42) procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN . COLON suite

    ARROW           shift and go to state 529
    COLON           shift and go to state 528


state 466

    (257) function_definition -> DEF IDENTIFIER LPAREN argumentlist error . ARROW type COLON suite
    (260) procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error . COLON suite

    ARROW           shift and go to state 531
    COLON           shift and go to state 530


state 467

    (33) class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT . class_suite DEDENT
    (255) class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT . error DEDENT
    (34) class_suite -> . optdoc declaration_suite
    (4) optdoc -> . DOCSTRING NL
    (5) optdoc -> . empty
    (3) empty -> .

    error           shift and go to state 533
    DOCSTRING       shift and go to state 1
    PASS            reduce using rule 3 (empty -> .)
    COLONCOLON      reduce using rule 3 (empty -> .)
    CLASS           reduce using rule 3 (empty -> .)
    DEF             reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    empty                          shift and go to state 4
    class_suite                    shift and go to state 534
    optdoc                         shift and go to state 532

state 468

    (254) class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT . class_suite DEDENT
    (34) class_suite -> . optdoc declaration_suite
    (4) optdoc -> . DOCSTRING NL
    (5) optdoc -> . empty
    (3) empty -> .

    DOCSTRING       shift and go to state 1
    PASS            reduce using rule 3 (empty -> .)
    COLONCOLON      reduce using rule 3 (empty -> .)
    CLASS           reduce using rule 3 (empty -> .)
    DEF             reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    empty                          shift and go to state 4
    class_suite                    shift and go to state 535
    optdoc                         shift and go to state 532

state 469

    (266) for_loop -> FOR error IN expression DOTDOT expression . COLON suite
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 536
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 470

    (264) for_loop -> FOR error IN expression COLON suite .

    IF              reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    TRY             reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    WHILE           reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    FOR             reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    CONTINUE        reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    BREAK           reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    PASS            reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    RETURN          reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    YIELD           reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    RAISE           reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    DEL             reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    IDENTIFIER      reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    MINUS           reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    PLUS            reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    TILDE           reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    EXMARK          reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    NOT             reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    ASSERT          reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    LPAREN          reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    INTLITERAL      reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    FLOATLITERAL    reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    BOOLLITERAL     reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    STRINGLITERAL   reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    DOCSTRING       reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    NONE            reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    LAMBDA          reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    LBRACKET        reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    LCURLY          reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    $end            reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)
    DEDENT          reduce using rule 264 (for_loop -> FOR error IN expression COLON suite .)


state 471

    (267) for_loop -> FOR IDENTIFIER IN error DOTDOT expression . COLON suite
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 537
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 472

    (265) for_loop -> FOR IDENTIFIER IN error COLON suite .

    IF              reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    TRY             reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    WHILE           reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    FOR             reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    CONTINUE        reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    BREAK           reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    PASS            reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    RETURN          reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    YIELD           reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    RAISE           reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    DEL             reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    IDENTIFIER      reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    MINUS           reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    PLUS            reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    TILDE           reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    EXMARK          reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    NOT             reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    ASSERT          reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    LPAREN          reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    INTLITERAL      reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    FLOATLITERAL    reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    BOOLLITERAL     reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    STRINGLITERAL   reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    DOCSTRING       reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    NONE            reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    LAMBDA          reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    LBRACKET        reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    LCURLY          reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    $end            reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)
    DEDENT          reduce using rule 265 (for_loop -> FOR IDENTIFIER IN error COLON suite .)


state 473

    (268) for_loop -> FOR IDENTIFIER IN expression DOTDOT error . COLON suite

    COLON           shift and go to state 538


state 474

    (81) for_loop -> FOR IDENTIFIER IN expression DOTDOT expression . COLON suite
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 539
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 475

    (80) for_loop -> FOR IDENTIFIER IN expression COLON suite .

    IF              reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    TRY             reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    WHILE           reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    FOR             reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    CONTINUE        reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    BREAK           reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    PASS            reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    RETURN          reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    YIELD           reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    RAISE           reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    DEL             reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    IDENTIFIER      reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    MINUS           reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    PLUS            reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    TILDE           reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    EXMARK          reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    NOT             reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    ASSERT          reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    LPAREN          reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    INTLITERAL      reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    FLOATLITERAL    reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    BOOLLITERAL     reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    STRINGLITERAL   reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    DOCSTRING       reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    NONE            reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    LAMBDA          reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    LBRACKET        reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    LCURLY          reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    $end            reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)
    DEDENT          reduce using rule 80 (for_loop -> FOR IDENTIFIER IN expression COLON suite .)


state 476

    (95) except_finally -> FINALLY . COLON suite

    COLON           shift and go to state 540


state 477

    (89) try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .

    IF              reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    TRY             reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    WHILE           reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    FOR             reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    CONTINUE        reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    BREAK           reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    PASS            reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    RETURN          reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    YIELD           reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    RAISE           reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    DEL             reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    IDENTIFIER      reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    MINUS           reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    PLUS            reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    TILDE           reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    EXMARK          reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    NOT             reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    ASSERT          reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    LPAREN          reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    INTLITERAL      reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    FLOATLITERAL    reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    BOOLLITERAL     reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    STRINGLITERAL   reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    DOCSTRING       reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    NONE            reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    LAMBDA          reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    LBRACKET        reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    LCURLY          reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    DEDENT          reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)
    $end            reduce using rule 89 (try_except -> TRY COLON suite exceptlist_nonempty except_else except_finally .)


state 478

    (87) try_except -> TRY COLON suite exceptlist_nonempty except_else empty .

    IF              reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    TRY             reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    WHILE           reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    FOR             reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    CONTINUE        reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    BREAK           reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    PASS            reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    RETURN          reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    YIELD           reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    RAISE           reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    DEL             reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    IDENTIFIER      reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    MINUS           reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    PLUS            reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    TILDE           reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    EXMARK          reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    NOT             reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    ASSERT          reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    LPAREN          reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    INTLITERAL      reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    FLOATLITERAL    reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    BOOLLITERAL     reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    STRINGLITERAL   reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    DOCSTRING       reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    NONE            reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    LAMBDA          reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    LBRACKET        reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    LCURLY          reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    DEDENT          reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)
    $end            reduce using rule 87 (try_except -> TRY COLON suite exceptlist_nonempty except_else empty .)


state 479

    (94) except_else -> ELSE COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 541
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 480

    (88) try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .

    IF              reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    TRY             reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    WHILE           reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    FOR             reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    CONTINUE        reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    BREAK           reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    PASS            reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    RETURN          reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    YIELD           reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    RAISE           reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    DEL             reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    IDENTIFIER      reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    MINUS           reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    PLUS            reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    TILDE           reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    EXMARK          reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    NOT             reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    ASSERT          reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    LPAREN          reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    INTLITERAL      reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    FLOATLITERAL    reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    BOOLLITERAL     reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    STRINGLITERAL   reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    DOCSTRING       reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    NONE            reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    LAMBDA          reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    LBRACKET        reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    LCURLY          reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    DEDENT          reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)
    $end            reduce using rule 88 (try_except -> TRY COLON suite exceptlist_nonempty empty except_finally .)


state 481

    (86) try_except -> TRY COLON suite exceptlist_nonempty empty empty .

    IF              reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    TRY             reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    WHILE           reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    FOR             reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    CONTINUE        reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    BREAK           reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    PASS            reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    RETURN          reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    YIELD           reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    RAISE           reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    DEL             reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    IDENTIFIER      reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    MINUS           reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    PLUS            reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    TILDE           reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    EXMARK          reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    NOT             reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    ASSERT          reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    LPAREN          reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    INTLITERAL      reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    FLOATLITERAL    reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    BOOLLITERAL     reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    STRINGLITERAL   reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    DOCSTRING       reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    NONE            reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    LAMBDA          reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    LBRACKET        reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    LCURLY          reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    DEDENT          reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)
    $end            reduce using rule 86 (try_except -> TRY COLON suite exceptlist_nonempty empty empty .)


state 482

    (91) except_simple -> EXCEPT COLON suite .

    ELSE            reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    FINALLY         reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    IF              reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    TRY             reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    WHILE           reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    FOR             reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    CONTINUE        reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    BREAK           reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    PASS            reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    RETURN          reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    YIELD           reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    RAISE           reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    DEL             reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    IDENTIFIER      reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    MINUS           reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    PLUS            reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    TILDE           reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    EXMARK          reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    NOT             reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    ASSERT          reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    LPAREN          reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    INTLITERAL      reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    FLOATLITERAL    reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    BOOLLITERAL     reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    STRINGLITERAL   reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    DOCSTRING       reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    NONE            reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    LAMBDA          reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    LBRACKET        reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    LCURLY          reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    $end            reduce using rule 91 (except_simple -> EXCEPT COLON suite .)
    DEDENT          reduce using rule 91 (except_simple -> EXCEPT COLON suite .)


state 483

    (271) except_alias -> EXCEPT error AS . IDENTIFIER COLON suite exceptlist

    IDENTIFIER      shift and go to state 542


state 484

    (273) except_specific -> EXCEPT error COLON . suite exceptlist
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 543
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 485

    (92) except_alias -> EXCEPT IDENTIFIER AS . IDENTIFIER COLON suite exceptlist
    (272) except_alias -> EXCEPT IDENTIFIER AS . error COLON suite exceptlist

    IDENTIFIER      shift and go to state 545
    error           shift and go to state 544


state 486

    (93) except_specific -> EXCEPT IDENTIFIER COLON . suite exceptlist
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 546
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 487

    (90) try_except -> TRY COLON suite empty empty except_finally .

    IF              reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    TRY             reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    WHILE           reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    FOR             reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    CONTINUE        reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    BREAK           reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    PASS            reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    RETURN          reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    YIELD           reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    RAISE           reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    DEL             reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    IDENTIFIER      reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    MINUS           reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    PLUS            reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    TILDE           reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    EXMARK          reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    NOT             reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    ASSERT          reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    LPAREN          reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    INTLITERAL      reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    FLOATLITERAL    reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    BOOLLITERAL     reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    STRINGLITERAL   reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    DOCSTRING       reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    NONE            reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    LAMBDA          reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    LBRACKET        reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    LCURLY          reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    DEDENT          reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)
    $end            reduce using rule 90 (try_except -> TRY COLON suite empty empty except_finally .)


state 488

    (53) block -> variableblock . nonempty_block
    (54) nonempty_block -> . statement_complex empty
    (55) nonempty_block -> . statement_complex nonempty_block
    (56) statement_complex -> . loop
    (57) statement_complex -> . conditional
    (58) statement_complex -> . try_except
    (59) statement_complex -> . statement_multi NL
    (60) statement_complex -> . statement_multi SEMICOLON NL
    (77) loop -> . while_loop
    (78) loop -> . for_loop
    (82) conditional -> . IF expression COLON suite conditional_extension
    (269) conditional -> . IF error COLON suite conditional_extension
    (86) try_except -> . TRY COLON suite exceptlist_nonempty empty empty
    (87) try_except -> . TRY COLON suite exceptlist_nonempty except_else empty
    (88) try_except -> . TRY COLON suite exceptlist_nonempty empty except_finally
    (89) try_except -> . TRY COLON suite exceptlist_nonempty except_else except_finally
    (90) try_except -> . TRY COLON suite empty empty except_finally
    (61) statement_multi -> . statement_multi SEMICOLON statement_simple
    (62) statement_multi -> . statement_simple
    (79) while_loop -> . WHILE expression COLON suite
    (263) while_loop -> . WHILE error COLON suite
    (80) for_loop -> . FOR IDENTIFIER IN expression COLON suite
    (81) for_loop -> . FOR IDENTIFIER IN expression DOTDOT expression COLON suite
    (264) for_loop -> . FOR error IN expression COLON suite
    (265) for_loop -> . FOR IDENTIFIER IN error COLON suite
    (266) for_loop -> . FOR error IN expression DOTDOT expression COLON suite
    (267) for_loop -> . FOR IDENTIFIER IN error DOTDOT expression COLON suite
    (268) for_loop -> . FOR IDENTIFIER IN expression DOTDOT error COLON suite
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    IF              shift and go to state 89
    TRY             shift and go to state 53
    WHILE           shift and go to state 62
    FOR             shift and go to state 51
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    conditional                    shift and go to state 44
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    yield                          shift and go to state 41
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    statement_complex              shift and go to state 33
    assertnomessage                shift and go to state 65
    list_literal                   shift and go to state 90
    for_loop                       shift and go to state 35
    return                         shift and go to state 36
    while_loop                     shift and go to state 68
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    tuple_literal                  shift and go to state 31
    procedure_literal              shift and go to state 79
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    nonempty_block                 shift and go to state 547
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 91
    statement_multi                shift and go to state 54
    try_except                     shift and go to state 72
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    loop                           shift and go to state 74
    delete                         shift and go to state 75

state 489

    (51) suite -> NL INDENT optdoc block . DEDENT

    DEDENT          shift and go to state 548


state 490

    (124) slicing -> expression LBRACKET empty COLON empty optslice . RBRACKET

    RBRACKET        shift and go to state 549


state 491

    (126) optslice -> COLON . empty
    (127) optslice -> COLON . expression
    (3) empty -> .
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    RBRACKET        reduce using rule 3 (empty -> .)
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    empty                          shift and go to state 550
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 551
    grouping                       shift and go to state 42

state 492

    (125) optslice -> empty . empty
    (3) empty -> .

    RBRACKET        reduce using rule 3 (empty -> .)

    empty                          shift and go to state 552

state 493

    (122) slicing -> expression LBRACKET empty COLON expression optslice . RBRACKET

    RBRACKET        shift and go to state 553


state 494

    (275) slicing -> expression LBRACKET error COLON expression optslice . RBRACKET

    RBRACKET        shift and go to state 554


state 495

    (123) slicing -> expression LBRACKET expression COLON empty optslice . RBRACKET

    RBRACKET        shift and go to state 555


state 496

    (121) slicing -> expression LBRACKET expression COLON expression optslice . RBRACKET

    RBRACKET        shift and go to state 556


state 497

    (276) slicing -> expression LBRACKET expression COLON expression error . RBRACKET

    RBRACKET        shift and go to state 557


state 498

    (290) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN . error RPAREN

    error           shift and go to state 558


state 499

    (230) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type . COLON LPAREN expression RPAREN
    (287) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type . COLON LPAREN error RPAREN

    COLON           shift and go to state 559


state 500

    (286) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error . COLON LPAREN expression RPAREN

    COLON           shift and go to state 560


state 501

    (289) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN . statement_simple RPAREN
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 561
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 502

    (50) nonempty_defaultlist -> IDENTIFIER COLON type EQUALS . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 562
    grouping                       shift and go to state 42

state 503

    (262) nonempty_defaultlist -> IDENTIFIER COLON error EQUALS . expression
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 563
    grouping                       shift and go to state 42

state 504

    (50) nonempty_defaultlist -> IDENTIFIER COLON . type EQUALS expression
    (262) nonempty_defaultlist -> IDENTIFIER COLON . error EQUALS expression
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 426
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    type                           shift and go to state 564
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    dictionary_type                shift and go to state 304
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    member_type                    shift and go to state 299
    list_type                      shift and go to state 321
    tupleparens                    shift and go to state 312
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316

state 505

    (288) procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN . statement_simple RPAREN
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    slicing                        shift and go to state 38
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    assert                         shift and go to state 71
    statement_simple               shift and go to state 565
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    delete                         shift and go to state 75
    expression                     shift and go to state 58
    grouping                       shift and go to state 42

state 506

    (285) function_literal -> LAMBDA LPAREN error RPAREN ARROW type . COLON LPAREN expression RPAREN

    COLON           shift and go to state 566


state 507

    (48) nonempty_argumentlist -> nonempty_argumentlist COMMA . nonempty_argumentlist
    (47) nonempty_argumentlist -> . IDENTIFIER COLON type
    (48) nonempty_argumentlist -> . nonempty_argumentlist COMMA nonempty_argumentlist
    (261) nonempty_argumentlist -> . error COLON type

    IDENTIFIER      shift and go to state 567
    error           shift and go to state 397

    nonempty_argumentlist          shift and go to state 434

state 508

    (50) nonempty_defaultlist -> IDENTIFIER COLON . type EQUALS expression
    (262) nonempty_defaultlist -> IDENTIFIER COLON . error EQUALS expression
    (47) nonempty_argumentlist -> IDENTIFIER COLON . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 426
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    type                           shift and go to state 568
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    dictionary_type                shift and go to state 304
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    member_type                    shift and go to state 299
    list_type                      shift and go to state 321
    tupleparens                    shift and go to state 312
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316

state 509

    (270) conditional_extension -> ELIF error . COLON suite conditional_extension

    COLON           shift and go to state 569


state 510

    (84) conditional_extension -> ELIF expression . COLON suite conditional_extension
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COLON           shift and go to state 570
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 511

    (85) conditional_extension -> ELSE COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 571
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 512

    (150) typelist -> nonempty_typelist COMMA . nonempty_default_typelist
    (155) nonempty_typelist -> nonempty_typelist COMMA . nonempty_typelist
    (156) nonempty_default_typelist -> . QMARK type
    (157) nonempty_default_typelist -> . nonempty_default_typelist COMMA nonempty_default_typelist
    (154) nonempty_typelist -> . type
    (155) nonempty_typelist -> . nonempty_typelist COMMA nonempty_typelist
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    QMARK           shift and go to state 573
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    nonempty_default_typelist      shift and go to state 574
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    nonempty_typelist              shift and go to state 572
    tuple_type                     shift and go to state 316
    type                           shift and go to state 446
    tupleof                        shift and go to state 315

state 513

    (151) typelist -> nonempty_typelist empty . empty
    (3) empty -> .

    RPAREN          reduce using rule 3 (empty -> .)

    empty                          shift and go to state 575

state 514

    (152) typelist -> empty empty . nonempty_default_typelist
    (153) typelist -> empty empty . empty
    (156) nonempty_default_typelist -> . QMARK type
    (157) nonempty_default_typelist -> . nonempty_default_typelist COMMA nonempty_default_typelist
    (3) empty -> .

    QMARK           shift and go to state 573
    RPAREN          reduce using rule 3 (empty -> .)

    nonempty_default_typelist      shift and go to state 576
    empty                          shift and go to state 577

state 515

    (148) function_type -> FN LPAREN typelist RPAREN . ARROW type

    ARROW           shift and go to state 578


state 516

    (278) function_type -> FN LPAREN error RPAREN . ARROW type

    ARROW           shift and go to state 579


state 517

    (165) nonempty_tuple_typelist -> nonempty_tuple_typelist TIMES nonempty_tuple_typelist .
    (165) nonempty_tuple_typelist -> nonempty_tuple_typelist . TIMES nonempty_tuple_typelist

    TIMES           reduce using rule 165 (nonempty_tuple_typelist -> nonempty_tuple_typelist TIMES nonempty_tuple_typelist .)
    RPAREN          reduce using rule 165 (nonempty_tuple_typelist -> nonempty_tuple_typelist TIMES nonempty_tuple_typelist .)

  ! TIMES           [ shift and go to state 455 ]


state 518

    (160) tupleof -> TUPLE OF LPAREN tuple_typelist . RPAREN

    RPAREN          shift and go to state 580


state 519

    (284) tuple_type -> TUPLE OF LPAREN error . RPAREN

    RPAREN          shift and go to state 581


state 520

    (283) tuple_type -> TUPLE error LPAREN tuple_typelist . RPAREN

    RPAREN          shift and go to state 582


state 521

    (149) procedure_type -> PROC LPAREN typelist RPAREN .

    COLON           reduce using rule 149 (procedure_type -> PROC LPAREN typelist RPAREN .)
    EQUALS          reduce using rule 149 (procedure_type -> PROC LPAREN typelist RPAREN .)
    COMMA           reduce using rule 149 (procedure_type -> PROC LPAREN typelist RPAREN .)
    RPAREN          reduce using rule 149 (procedure_type -> PROC LPAREN typelist RPAREN .)
    error           reduce using rule 149 (procedure_type -> PROC LPAREN typelist RPAREN .)
    RBRACKET        reduce using rule 149 (procedure_type -> PROC LPAREN typelist RPAREN .)
    TIMES           reduce using rule 149 (procedure_type -> PROC LPAREN typelist RPAREN .)
    BITOR           reduce using rule 149 (procedure_type -> PROC LPAREN typelist RPAREN .)
    COLONCOLON      reduce using rule 149 (procedure_type -> PROC LPAREN typelist RPAREN .)


state 522

    (279) procedure_type -> PROC LPAREN error RPAREN .

    COLON           reduce using rule 279 (procedure_type -> PROC LPAREN error RPAREN .)
    EQUALS          reduce using rule 279 (procedure_type -> PROC LPAREN error RPAREN .)
    COMMA           reduce using rule 279 (procedure_type -> PROC LPAREN error RPAREN .)
    RPAREN          reduce using rule 279 (procedure_type -> PROC LPAREN error RPAREN .)
    error           reduce using rule 279 (procedure_type -> PROC LPAREN error RPAREN .)
    RBRACKET        reduce using rule 279 (procedure_type -> PROC LPAREN error RPAREN .)
    TIMES           reduce using rule 279 (procedure_type -> PROC LPAREN error RPAREN .)
    BITOR           reduce using rule 279 (procedure_type -> PROC LPAREN error RPAREN .)
    COLONCOLON      reduce using rule 279 (procedure_type -> PROC LPAREN error RPAREN .)


state 523

    (172) dictionary_type -> DICT OF LBRACKET type . BITOR type RBRACKET
    (282) dictionary_type -> DICT OF LBRACKET type . BITOR error RBRACKET

    BITOR           shift and go to state 583


state 524

    (281) dictionary_type -> DICT OF LBRACKET error . BITOR type RBRACKET

    BITOR           shift and go to state 584


state 525

    (280) dictionary_type -> DICT error LBRACKET type . BITOR type RBRACKET

    BITOR           shift and go to state 585


state 526

    (259) procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 586
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 527

    (256) function_definition -> DEF error LPAREN argumentlist RPAREN ARROW . type COLON suite
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 587

state 528

    (42) procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 588
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 529

    (41) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW . type COLON suite
    (258) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW . error COLON suite
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 590
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 589

state 530

    (260) procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 591
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 531

    (257) function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW . type COLON suite
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 592

state 532

    (34) class_suite -> optdoc . declaration_suite
    (23) declaration_suite -> . variableblock classblock methodblock
    (24) declaration_suite -> . PASS NL
    (25) variableblock -> . COLONCOLON nonempty_variableblock COLONCOLON NL
    (26) variableblock -> . empty empty
    (252) variableblock -> . COLONCOLON error COLONCOLON NL
    (3) empty -> .

    PASS            shift and go to state 17
    COLONCOLON      shift and go to state 18
    CLASS           reduce using rule 3 (empty -> .)
    DEF             reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    variableblock                  shift and go to state 15
    declaration_suite              shift and go to state 593
    empty                          shift and go to state 19

state 533

    (255) class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error . DEDENT

    DEDENT          shift and go to state 594


state 534

    (33) class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite . DEDENT

    DEDENT          shift and go to state 595


state 535

    (254) class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite . DEDENT

    DEDENT          shift and go to state 596


state 536

    (266) for_loop -> FOR error IN expression DOTDOT expression COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 597
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 537

    (267) for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 598
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 538

    (268) for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 599
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 539

    (81) for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 600
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 540

    (95) except_finally -> FINALLY COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 601
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 541

    (94) except_else -> ELSE COLON suite .

    FINALLY         reduce using rule 94 (except_else -> ELSE COLON suite .)
    IF              reduce using rule 94 (except_else -> ELSE COLON suite .)
    TRY             reduce using rule 94 (except_else -> ELSE COLON suite .)
    WHILE           reduce using rule 94 (except_else -> ELSE COLON suite .)
    FOR             reduce using rule 94 (except_else -> ELSE COLON suite .)
    CONTINUE        reduce using rule 94 (except_else -> ELSE COLON suite .)
    BREAK           reduce using rule 94 (except_else -> ELSE COLON suite .)
    PASS            reduce using rule 94 (except_else -> ELSE COLON suite .)
    RETURN          reduce using rule 94 (except_else -> ELSE COLON suite .)
    YIELD           reduce using rule 94 (except_else -> ELSE COLON suite .)
    RAISE           reduce using rule 94 (except_else -> ELSE COLON suite .)
    DEL             reduce using rule 94 (except_else -> ELSE COLON suite .)
    IDENTIFIER      reduce using rule 94 (except_else -> ELSE COLON suite .)
    MINUS           reduce using rule 94 (except_else -> ELSE COLON suite .)
    PLUS            reduce using rule 94 (except_else -> ELSE COLON suite .)
    TILDE           reduce using rule 94 (except_else -> ELSE COLON suite .)
    EXMARK          reduce using rule 94 (except_else -> ELSE COLON suite .)
    NOT             reduce using rule 94 (except_else -> ELSE COLON suite .)
    ASSERT          reduce using rule 94 (except_else -> ELSE COLON suite .)
    LPAREN          reduce using rule 94 (except_else -> ELSE COLON suite .)
    INTLITERAL      reduce using rule 94 (except_else -> ELSE COLON suite .)
    FLOATLITERAL    reduce using rule 94 (except_else -> ELSE COLON suite .)
    BOOLLITERAL     reduce using rule 94 (except_else -> ELSE COLON suite .)
    STRINGLITERAL   reduce using rule 94 (except_else -> ELSE COLON suite .)
    DOCSTRING       reduce using rule 94 (except_else -> ELSE COLON suite .)
    NONE            reduce using rule 94 (except_else -> ELSE COLON suite .)
    LAMBDA          reduce using rule 94 (except_else -> ELSE COLON suite .)
    LBRACKET        reduce using rule 94 (except_else -> ELSE COLON suite .)
    LCURLY          reduce using rule 94 (except_else -> ELSE COLON suite .)
    $end            reduce using rule 94 (except_else -> ELSE COLON suite .)
    DEDENT          reduce using rule 94 (except_else -> ELSE COLON suite .)


state 542

    (271) except_alias -> EXCEPT error AS IDENTIFIER . COLON suite exceptlist

    COLON           shift and go to state 602


state 543

    (273) except_specific -> EXCEPT error COLON suite . exceptlist
    (99) exceptlist -> . except_simple
    (100) exceptlist -> . except_alias
    (101) exceptlist -> . except_specific
    (102) exceptlist -> . empty
    (91) except_simple -> . EXCEPT COLON suite
    (92) except_alias -> . EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist
    (271) except_alias -> . EXCEPT error AS IDENTIFIER COLON suite exceptlist
    (272) except_alias -> . EXCEPT IDENTIFIER AS error COLON suite exceptlist
    (93) except_specific -> . EXCEPT IDENTIFIER COLON suite exceptlist
    (273) except_specific -> . EXCEPT error COLON suite exceptlist
    (3) empty -> .

    EXCEPT          shift and go to state 345
    ELSE            reduce using rule 3 (empty -> .)
    FINALLY         reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    except_simple                  shift and go to state 603
    except_specific                shift and go to state 604
    except_alias                   shift and go to state 605
    exceptlist                     shift and go to state 606
    empty                          shift and go to state 607

state 544

    (272) except_alias -> EXCEPT IDENTIFIER AS error . COLON suite exceptlist

    COLON           shift and go to state 608


state 545

    (92) except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER . COLON suite exceptlist

    COLON           shift and go to state 609


state 546

    (93) except_specific -> EXCEPT IDENTIFIER COLON suite . exceptlist
    (99) exceptlist -> . except_simple
    (100) exceptlist -> . except_alias
    (101) exceptlist -> . except_specific
    (102) exceptlist -> . empty
    (91) except_simple -> . EXCEPT COLON suite
    (92) except_alias -> . EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist
    (271) except_alias -> . EXCEPT error AS IDENTIFIER COLON suite exceptlist
    (272) except_alias -> . EXCEPT IDENTIFIER AS error COLON suite exceptlist
    (93) except_specific -> . EXCEPT IDENTIFIER COLON suite exceptlist
    (273) except_specific -> . EXCEPT error COLON suite exceptlist
    (3) empty -> .

    EXCEPT          shift and go to state 345
    ELSE            reduce using rule 3 (empty -> .)
    FINALLY         reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    except_simple                  shift and go to state 603
    except_specific                shift and go to state 604
    except_alias                   shift and go to state 605
    exceptlist                     shift and go to state 610
    empty                          shift and go to state 607

state 547

    (53) block -> variableblock nonempty_block .

    DEDENT          reduce using rule 53 (block -> variableblock nonempty_block .)


state 548

    (51) suite -> NL INDENT optdoc block DEDENT .

    ELIF            reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    ELSE            reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    IF              reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    TRY             reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    WHILE           reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    FOR             reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    CONTINUE        reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    BREAK           reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    PASS            reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    RETURN          reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    YIELD           reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    RAISE           reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    DEL             reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    IDENTIFIER      reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    MINUS           reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    PLUS            reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    TILDE           reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    EXMARK          reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    NOT             reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    ASSERT          reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    LPAREN          reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    INTLITERAL      reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    FLOATLITERAL    reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    BOOLLITERAL     reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    STRINGLITERAL   reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    DOCSTRING       reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    NONE            reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    LAMBDA          reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    LBRACKET        reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    LCURLY          reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    $end            reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    DEDENT          reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    DEF             reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    EXCEPT          reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)
    FINALLY         reduce using rule 51 (suite -> NL INDENT optdoc block DEDENT .)


state 549

    (124) slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .

    COLON           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    PLUS            reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    MINUS           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    TIMES           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    DIVIDE          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    PERCENT         reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    INTDIV          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    POW             reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    BITOR           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    BITAND          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    LSHIFT          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    RSHIFT          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    EQUALTO         reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    NEQUALTO        reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    LT              reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    LE              reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    GT              reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    GE              reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    REQUALTO        reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    BOOLOR          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    BOOLAND         reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    OR              reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    AND             reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    CARET           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    LPAREN          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    LBRACKET        reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    QMARK           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    DOT             reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    IS              reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    ISNOT           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    IN              reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    NOTIN           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    RBRACKET        reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    NL              reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    SEMICOLON       reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    RPAREN          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    COMMA           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    RCURLY          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    DOTDOT          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    error           reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    COLONCOLON      reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    EQUALS          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    PLUSEQU         reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    MINUSEQU        reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    TIMESEQU        reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    DIVEQU          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    MODEQU          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    BITANDEQU       reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    BITOREQU        reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    BITXOREQU       reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    LSHIFTEQU       reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    RSHIFTEQU       reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    POWEQU          reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)
    INTDIVEQU       reduce using rule 124 (slicing -> expression LBRACKET empty COLON empty optslice RBRACKET .)


state 550

    (126) optslice -> COLON empty .

    RBRACKET        reduce using rule 126 (optslice -> COLON empty .)


state 551

    (127) optslice -> COLON expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    RBRACKET        reduce using rule 127 (optslice -> COLON expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 552

    (125) optslice -> empty empty .

    RBRACKET        reduce using rule 125 (optslice -> empty empty .)


state 553

    (122) slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .

    COLON           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    PLUS            reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    MINUS           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    TIMES           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    DIVIDE          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    PERCENT         reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    INTDIV          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    POW             reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    BITOR           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    BITAND          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    LSHIFT          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    RSHIFT          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    EQUALTO         reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    NEQUALTO        reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    LT              reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    LE              reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    GT              reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    GE              reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    REQUALTO        reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    BOOLOR          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    BOOLAND         reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    OR              reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    AND             reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    CARET           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    LPAREN          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    LBRACKET        reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    QMARK           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    DOT             reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    IS              reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    ISNOT           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    IN              reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    NOTIN           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    RBRACKET        reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    NL              reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    SEMICOLON       reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    RPAREN          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    COMMA           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    RCURLY          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    DOTDOT          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    error           reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    COLONCOLON      reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    EQUALS          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    PLUSEQU         reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    MINUSEQU        reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    TIMESEQU        reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    DIVEQU          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    MODEQU          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    BITANDEQU       reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    BITOREQU        reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    BITXOREQU       reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    LSHIFTEQU       reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    RSHIFTEQU       reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    POWEQU          reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)
    INTDIVEQU       reduce using rule 122 (slicing -> expression LBRACKET empty COLON expression optslice RBRACKET .)


state 554

    (275) slicing -> expression LBRACKET error COLON expression optslice RBRACKET .

    COLON           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    PLUS            reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    MINUS           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    TIMES           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    DIVIDE          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    PERCENT         reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    INTDIV          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    POW             reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    BITOR           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    BITAND          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    LSHIFT          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    RSHIFT          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    EQUALTO         reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    NEQUALTO        reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    LT              reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    LE              reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    GT              reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    GE              reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    REQUALTO        reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    BOOLOR          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    BOOLAND         reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    OR              reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    AND             reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    CARET           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    LPAREN          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    LBRACKET        reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    QMARK           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    DOT             reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    IS              reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    ISNOT           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    IN              reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    NOTIN           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    RBRACKET        reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    NL              reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    SEMICOLON       reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    RPAREN          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    COMMA           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    RCURLY          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    DOTDOT          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    error           reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    COLONCOLON      reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    EQUALS          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    PLUSEQU         reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    MINUSEQU        reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    TIMESEQU        reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    DIVEQU          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    MODEQU          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    BITANDEQU       reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    BITOREQU        reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    BITXOREQU       reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    LSHIFTEQU       reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    RSHIFTEQU       reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    POWEQU          reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)
    INTDIVEQU       reduce using rule 275 (slicing -> expression LBRACKET error COLON expression optslice RBRACKET .)


state 555

    (123) slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .

    COLON           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    PLUS            reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    MINUS           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    TIMES           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    DIVIDE          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    PERCENT         reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    INTDIV          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    POW             reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    BITOR           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    BITAND          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    LSHIFT          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    RSHIFT          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    EQUALTO         reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    NEQUALTO        reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    LT              reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    LE              reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    GT              reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    GE              reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    REQUALTO        reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    BOOLOR          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    BOOLAND         reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    OR              reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    AND             reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    CARET           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    LPAREN          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    LBRACKET        reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    QMARK           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    DOT             reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    IS              reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    ISNOT           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    IN              reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    NOTIN           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    RBRACKET        reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    NL              reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    SEMICOLON       reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    RPAREN          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    COMMA           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    RCURLY          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    DOTDOT          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    error           reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    COLONCOLON      reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    EQUALS          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    PLUSEQU         reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    MINUSEQU        reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    TIMESEQU        reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    DIVEQU          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    MODEQU          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    BITANDEQU       reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    BITOREQU        reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    BITXOREQU       reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    LSHIFTEQU       reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    RSHIFTEQU       reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    POWEQU          reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)
    INTDIVEQU       reduce using rule 123 (slicing -> expression LBRACKET expression COLON empty optslice RBRACKET .)


state 556

    (121) slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .

    COLON           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    PLUS            reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    MINUS           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    TIMES           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    DIVIDE          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    PERCENT         reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    INTDIV          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    POW             reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    BITOR           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    BITAND          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    LSHIFT          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    RSHIFT          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    EQUALTO         reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    NEQUALTO        reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    LT              reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    LE              reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    GT              reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    GE              reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    REQUALTO        reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    BOOLOR          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    BOOLAND         reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    OR              reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    AND             reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    CARET           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    LPAREN          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    LBRACKET        reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    QMARK           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    DOT             reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    IS              reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    ISNOT           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    IN              reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    NOTIN           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    RBRACKET        reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    NL              reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    SEMICOLON       reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    RPAREN          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    COMMA           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    RCURLY          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    DOTDOT          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    error           reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    COLONCOLON      reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    EQUALS          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    PLUSEQU         reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    MINUSEQU        reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    TIMESEQU        reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    DIVEQU          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    MODEQU          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    BITANDEQU       reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    BITOREQU        reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    BITXOREQU       reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    LSHIFTEQU       reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    RSHIFTEQU       reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    POWEQU          reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)
    INTDIVEQU       reduce using rule 121 (slicing -> expression LBRACKET expression COLON expression optslice RBRACKET .)


state 557

    (276) slicing -> expression LBRACKET expression COLON expression error RBRACKET .

    COLON           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    PLUS            reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    MINUS           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    TIMES           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    DIVIDE          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    PERCENT         reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    INTDIV          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    POW             reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    BITOR           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    BITAND          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    LSHIFT          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    RSHIFT          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    EQUALTO         reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    NEQUALTO        reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    LT              reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    LE              reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    GT              reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    GE              reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    REQUALTO        reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    BOOLOR          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    BOOLAND         reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    OR              reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    AND             reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    CARET           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    LPAREN          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    LBRACKET        reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    QMARK           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    DOT             reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    IS              reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    ISNOT           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    IN              reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    NOTIN           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    RBRACKET        reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    NL              reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    SEMICOLON       reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    RPAREN          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    COMMA           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    RCURLY          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    DOTDOT          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    error           reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    COLONCOLON      reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    EQUALS          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    PLUSEQU         reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    MINUSEQU        reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    TIMESEQU        reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    DIVEQU          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    MODEQU          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    BITANDEQU       reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    BITOREQU        reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    BITXOREQU       reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    LSHIFTEQU       reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    RSHIFTEQU       reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    POWEQU          reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)
    INTDIVEQU       reduce using rule 276 (slicing -> expression LBRACKET expression COLON expression error RBRACKET .)


state 558

    (290) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error . RPAREN

    RPAREN          shift and go to state 611


state 559

    (230) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON . LPAREN expression RPAREN
    (287) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON . LPAREN error RPAREN

    LPAREN          shift and go to state 612


state 560

    (286) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON . LPAREN expression RPAREN

    LPAREN          shift and go to state 613


state 561

    (289) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple . RPAREN

    RPAREN          shift and go to state 614


state 562

    (50) nonempty_defaultlist -> IDENTIFIER COLON type EQUALS expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COMMA           reduce using rule 50 (nonempty_defaultlist -> IDENTIFIER COLON type EQUALS expression .)
    RPAREN          reduce using rule 50 (nonempty_defaultlist -> IDENTIFIER COLON type EQUALS expression .)
    error           reduce using rule 50 (nonempty_defaultlist -> IDENTIFIER COLON type EQUALS expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 563

    (262) nonempty_defaultlist -> IDENTIFIER COLON error EQUALS expression .
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    COMMA           reduce using rule 262 (nonempty_defaultlist -> IDENTIFIER COLON error EQUALS expression .)
    RPAREN          reduce using rule 262 (nonempty_defaultlist -> IDENTIFIER COLON error EQUALS expression .)
    error           reduce using rule 262 (nonempty_defaultlist -> IDENTIFIER COLON error EQUALS expression .)
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 564

    (50) nonempty_defaultlist -> IDENTIFIER COLON type . EQUALS expression

    EQUALS          shift and go to state 502


state 565

    (288) procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple . RPAREN

    RPAREN          shift and go to state 615


state 566

    (285) function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON . LPAREN expression RPAREN

    LPAREN          shift and go to state 616


state 567

    (47) nonempty_argumentlist -> IDENTIFIER . COLON type

    COLON           shift and go to state 617


state 568

    (50) nonempty_defaultlist -> IDENTIFIER COLON type . EQUALS expression
    (47) nonempty_argumentlist -> IDENTIFIER COLON type .

    EQUALS          shift and go to state 502
    COMMA           reduce using rule 47 (nonempty_argumentlist -> IDENTIFIER COLON type .)
    RPAREN          reduce using rule 47 (nonempty_argumentlist -> IDENTIFIER COLON type .)
    error           reduce using rule 47 (nonempty_argumentlist -> IDENTIFIER COLON type .)


state 569

    (270) conditional_extension -> ELIF error COLON . suite conditional_extension
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 618
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    tuple_literal                  shift and go to state 31
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 570

    (84) conditional_extension -> ELIF expression COLON . suite conditional_extension
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 619
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    tuple_literal                  shift and go to state 31
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 571

    (85) conditional_extension -> ELSE COLON suite .

    IF              reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    TRY             reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    WHILE           reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    FOR             reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    CONTINUE        reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    BREAK           reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    PASS            reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    RETURN          reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    YIELD           reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    RAISE           reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    DEL             reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    IDENTIFIER      reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    MINUS           reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    PLUS            reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    TILDE           reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    EXMARK          reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    NOT             reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    ASSERT          reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    LPAREN          reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    INTLITERAL      reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    FLOATLITERAL    reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    BOOLLITERAL     reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    STRINGLITERAL   reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    DOCSTRING       reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    NONE            reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    LAMBDA          reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    LBRACKET        reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    LCURLY          reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    $end            reduce using rule 85 (conditional_extension -> ELSE COLON suite .)
    DEDENT          reduce using rule 85 (conditional_extension -> ELSE COLON suite .)


state 572

    (155) nonempty_typelist -> nonempty_typelist COMMA nonempty_typelist .
    (155) nonempty_typelist -> nonempty_typelist . COMMA nonempty_typelist

    COMMA           reduce using rule 155 (nonempty_typelist -> nonempty_typelist COMMA nonempty_typelist .)
    RPAREN          reduce using rule 155 (nonempty_typelist -> nonempty_typelist COMMA nonempty_typelist .)

  ! COMMA           [ shift and go to state 620 ]


state 573

    (156) nonempty_default_typelist -> QMARK . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 621

state 574

    (150) typelist -> nonempty_typelist COMMA nonempty_default_typelist .
    (157) nonempty_default_typelist -> nonempty_default_typelist . COMMA nonempty_default_typelist

    RPAREN          reduce using rule 150 (typelist -> nonempty_typelist COMMA nonempty_default_typelist .)
    COMMA           shift and go to state 622


state 575

    (151) typelist -> nonempty_typelist empty empty .

    RPAREN          reduce using rule 151 (typelist -> nonempty_typelist empty empty .)


state 576

    (152) typelist -> empty empty nonempty_default_typelist .
    (157) nonempty_default_typelist -> nonempty_default_typelist . COMMA nonempty_default_typelist

    RPAREN          reduce using rule 152 (typelist -> empty empty nonempty_default_typelist .)
    COMMA           shift and go to state 622


state 577

    (153) typelist -> empty empty empty .

    RPAREN          reduce using rule 153 (typelist -> empty empty empty .)


state 578

    (148) function_type -> FN LPAREN typelist RPAREN ARROW . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 623

state 579

    (278) function_type -> FN LPAREN error RPAREN ARROW . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 624

state 580

    (160) tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .

    RBRACKET        reduce using rule 160 (tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .)
    COLON           reduce using rule 160 (tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .)
    EQUALS          reduce using rule 160 (tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .)
    COLONCOLON      reduce using rule 160 (tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .)
    COMMA           reduce using rule 160 (tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .)
    TIMES           reduce using rule 160 (tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .)
    RPAREN          reduce using rule 160 (tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .)
    error           reduce using rule 160 (tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .)
    BITOR           reduce using rule 160 (tupleof -> TUPLE OF LPAREN tuple_typelist RPAREN .)


state 581

    (284) tuple_type -> TUPLE OF LPAREN error RPAREN .

    EQUALS          reduce using rule 284 (tuple_type -> TUPLE OF LPAREN error RPAREN .)
    RBRACKET        reduce using rule 284 (tuple_type -> TUPLE OF LPAREN error RPAREN .)
    COLON           reduce using rule 284 (tuple_type -> TUPLE OF LPAREN error RPAREN .)
    COLONCOLON      reduce using rule 284 (tuple_type -> TUPLE OF LPAREN error RPAREN .)
    COMMA           reduce using rule 284 (tuple_type -> TUPLE OF LPAREN error RPAREN .)
    error           reduce using rule 284 (tuple_type -> TUPLE OF LPAREN error RPAREN .)
    TIMES           reduce using rule 284 (tuple_type -> TUPLE OF LPAREN error RPAREN .)
    RPAREN          reduce using rule 284 (tuple_type -> TUPLE OF LPAREN error RPAREN .)
    BITOR           reduce using rule 284 (tuple_type -> TUPLE OF LPAREN error RPAREN .)


state 582

    (283) tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .

    EQUALS          reduce using rule 283 (tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .)
    RBRACKET        reduce using rule 283 (tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .)
    COLON           reduce using rule 283 (tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .)
    COLONCOLON      reduce using rule 283 (tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .)
    COMMA           reduce using rule 283 (tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .)
    error           reduce using rule 283 (tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .)
    TIMES           reduce using rule 283 (tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .)
    RPAREN          reduce using rule 283 (tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .)
    BITOR           reduce using rule 283 (tuple_type -> TUPLE error LPAREN tuple_typelist RPAREN .)


state 583

    (172) dictionary_type -> DICT OF LBRACKET type BITOR . type RBRACKET
    (282) dictionary_type -> DICT OF LBRACKET type BITOR . error RBRACKET
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    error           shift and go to state 626
    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 625

state 584

    (281) dictionary_type -> DICT OF LBRACKET error BITOR . type RBRACKET
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 627

state 585

    (280) dictionary_type -> DICT error LBRACKET type BITOR . type RBRACKET
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 628

state 586

    (259) procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .

    DEF             reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    IF              reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    TRY             reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    WHILE           reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    FOR             reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    CONTINUE        reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    BREAK           reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    PASS            reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    RETURN          reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    YIELD           reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    RAISE           reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    DEL             reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    IDENTIFIER      reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    MINUS           reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    PLUS            reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    TILDE           reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    EXMARK          reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    NOT             reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    ASSERT          reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    LPAREN          reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    INTLITERAL      reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    FLOATLITERAL    reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    BOOLLITERAL     reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    STRINGLITERAL   reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    DOCSTRING       reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    NONE            reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    LAMBDA          reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    LBRACKET        reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    LCURLY          reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    $end            reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)
    DEDENT          reduce using rule 259 (procedure_definition -> DEF error LPAREN argumentlist RPAREN COLON suite .)


state 587

    (256) function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type . COLON suite

    COLON           shift and go to state 629


state 588

    (42) procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .

    DEF             reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    IF              reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    TRY             reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    WHILE           reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    FOR             reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    CONTINUE        reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    BREAK           reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    PASS            reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    RETURN          reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    YIELD           reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    RAISE           reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    DEL             reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    IDENTIFIER      reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    MINUS           reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    PLUS            reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    TILDE           reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    EXMARK          reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    NOT             reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    ASSERT          reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    LPAREN          reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    INTLITERAL      reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    FLOATLITERAL    reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    BOOLLITERAL     reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    STRINGLITERAL   reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    DOCSTRING       reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    NONE            reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    LAMBDA          reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    LBRACKET        reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    LCURLY          reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    $end            reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)
    DEDENT          reduce using rule 42 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN COLON suite .)


state 589

    (41) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type . COLON suite

    COLON           shift and go to state 630


state 590

    (258) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error . COLON suite

    COLON           shift and go to state 631


state 591

    (260) procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .

    DEF             reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    IF              reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    TRY             reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    WHILE           reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    FOR             reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    CONTINUE        reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    BREAK           reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    PASS            reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    RETURN          reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    YIELD           reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    RAISE           reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    DEL             reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    IDENTIFIER      reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    MINUS           reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    PLUS            reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    TILDE           reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    EXMARK          reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    NOT             reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    ASSERT          reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    LPAREN          reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    INTLITERAL      reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    FLOATLITERAL    reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    BOOLLITERAL     reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    STRINGLITERAL   reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    DOCSTRING       reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    NONE            reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    LAMBDA          reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    LBRACKET        reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    LCURLY          reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    $end            reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)
    DEDENT          reduce using rule 260 (procedure_definition -> DEF IDENTIFIER LPAREN argumentlist error COLON suite .)


state 592

    (257) function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type . COLON suite

    COLON           shift and go to state 632


state 593

    (34) class_suite -> optdoc declaration_suite .

    DEDENT          reduce using rule 34 (class_suite -> optdoc declaration_suite .)


state 594

    (255) class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .

    CLASS           reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    DEF             reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    IF              reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    TRY             reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    WHILE           reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    FOR             reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    CONTINUE        reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    BREAK           reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    PASS            reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    RETURN          reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    YIELD           reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    RAISE           reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    DEL             reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    IDENTIFIER      reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    MINUS           reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    PLUS            reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    TILDE           reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    EXMARK          reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    NOT             reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    ASSERT          reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    LPAREN          reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    INTLITERAL      reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    FLOATLITERAL    reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    BOOLLITERAL     reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    STRINGLITERAL   reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    DOCSTRING       reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    NONE            reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    LAMBDA          reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    LBRACKET        reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    LCURLY          reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    $end            reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)
    DEDENT          reduce using rule 255 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT error DEDENT .)


state 595

    (33) class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .

    CLASS           reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    DEF             reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    IF              reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    TRY             reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    WHILE           reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    FOR             reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    CONTINUE        reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    BREAK           reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    PASS            reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    RETURN          reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    YIELD           reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    RAISE           reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    DEL             reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    IDENTIFIER      reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    MINUS           reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    PLUS            reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    TILDE           reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    EXMARK          reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    NOT             reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    ASSERT          reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    LPAREN          reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    INTLITERAL      reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    FLOATLITERAL    reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    BOOLLITERAL     reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    STRINGLITERAL   reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    DOCSTRING       reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    NONE            reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    LAMBDA          reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    LBRACKET        reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    LCURLY          reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    $end            reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)
    DEDENT          reduce using rule 33 (class_definition -> CLASS IDENTIFIER opt_extends COLON NL INDENT class_suite DEDENT .)


state 596

    (254) class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .

    CLASS           reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    DEF             reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    IF              reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    TRY             reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    WHILE           reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    FOR             reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    CONTINUE        reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    BREAK           reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    PASS            reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    RETURN          reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    YIELD           reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    RAISE           reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    DEL             reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    IDENTIFIER      reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    MINUS           reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    PLUS            reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    TILDE           reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    EXMARK          reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    NOT             reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    ASSERT          reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    LPAREN          reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    INTLITERAL      reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    FLOATLITERAL    reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    BOOLLITERAL     reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    STRINGLITERAL   reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    DOCSTRING       reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    NONE            reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    LAMBDA          reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    LBRACKET        reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    LCURLY          reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    $end            reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)
    DEDENT          reduce using rule 254 (class_definition -> CLASS IDENTIFIER opt_extends error NL INDENT class_suite DEDENT .)


state 597

    (266) for_loop -> FOR error IN expression DOTDOT expression COLON suite .

    IF              reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    TRY             reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    WHILE           reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    FOR             reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    CONTINUE        reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    BREAK           reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    PASS            reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    RETURN          reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    YIELD           reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    RAISE           reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    DEL             reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    IDENTIFIER      reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    MINUS           reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    PLUS            reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    TILDE           reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    EXMARK          reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    NOT             reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    ASSERT          reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    LPAREN          reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    INTLITERAL      reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    FLOATLITERAL    reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    BOOLLITERAL     reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    STRINGLITERAL   reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    DOCSTRING       reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    NONE            reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    LAMBDA          reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    LBRACKET        reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    LCURLY          reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    $end            reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)
    DEDENT          reduce using rule 266 (for_loop -> FOR error IN expression DOTDOT expression COLON suite .)


state 598

    (267) for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .

    IF              reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    TRY             reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    WHILE           reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    FOR             reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    CONTINUE        reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    BREAK           reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    PASS            reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    RETURN          reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    YIELD           reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    RAISE           reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    DEL             reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    IDENTIFIER      reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    MINUS           reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    PLUS            reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    TILDE           reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    EXMARK          reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    NOT             reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    ASSERT          reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    LPAREN          reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    INTLITERAL      reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    FLOATLITERAL    reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    BOOLLITERAL     reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    STRINGLITERAL   reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    DOCSTRING       reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    NONE            reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    LAMBDA          reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    LBRACKET        reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    LCURLY          reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    $end            reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)
    DEDENT          reduce using rule 267 (for_loop -> FOR IDENTIFIER IN error DOTDOT expression COLON suite .)


state 599

    (268) for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .

    IF              reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    TRY             reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    WHILE           reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    FOR             reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    CONTINUE        reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    BREAK           reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    PASS            reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    RETURN          reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    YIELD           reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    RAISE           reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    DEL             reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    IDENTIFIER      reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    MINUS           reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    PLUS            reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    TILDE           reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    EXMARK          reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    NOT             reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    ASSERT          reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    LPAREN          reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    INTLITERAL      reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    FLOATLITERAL    reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    BOOLLITERAL     reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    STRINGLITERAL   reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    DOCSTRING       reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    NONE            reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    LAMBDA          reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    LBRACKET        reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    LCURLY          reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    $end            reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)
    DEDENT          reduce using rule 268 (for_loop -> FOR IDENTIFIER IN expression DOTDOT error COLON suite .)


state 600

    (81) for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .

    IF              reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    TRY             reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    WHILE           reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    FOR             reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    CONTINUE        reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    BREAK           reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    PASS            reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    RETURN          reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    YIELD           reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    RAISE           reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    DEL             reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    IDENTIFIER      reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    MINUS           reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    PLUS            reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    TILDE           reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    EXMARK          reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    NOT             reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    ASSERT          reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    LPAREN          reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    INTLITERAL      reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    FLOATLITERAL    reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    BOOLLITERAL     reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    STRINGLITERAL   reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    DOCSTRING       reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    NONE            reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    LAMBDA          reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    LBRACKET        reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    LCURLY          reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    $end            reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)
    DEDENT          reduce using rule 81 (for_loop -> FOR IDENTIFIER IN expression DOTDOT expression COLON suite .)


state 601

    (95) except_finally -> FINALLY COLON suite .

    IF              reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    TRY             reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    WHILE           reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    FOR             reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    CONTINUE        reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    BREAK           reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    PASS            reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    RETURN          reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    YIELD           reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    RAISE           reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    DEL             reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    IDENTIFIER      reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    MINUS           reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    PLUS            reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    TILDE           reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    EXMARK          reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    NOT             reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    ASSERT          reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    LPAREN          reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    INTLITERAL      reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    FLOATLITERAL    reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    BOOLLITERAL     reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    STRINGLITERAL   reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    DOCSTRING       reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    NONE            reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    LAMBDA          reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    LBRACKET        reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    LCURLY          reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    $end            reduce using rule 95 (except_finally -> FINALLY COLON suite .)
    DEDENT          reduce using rule 95 (except_finally -> FINALLY COLON suite .)


state 602

    (271) except_alias -> EXCEPT error AS IDENTIFIER COLON . suite exceptlist
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 633
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 603

    (99) exceptlist -> except_simple .

    ELSE            reduce using rule 99 (exceptlist -> except_simple .)
    FINALLY         reduce using rule 99 (exceptlist -> except_simple .)
    IF              reduce using rule 99 (exceptlist -> except_simple .)
    TRY             reduce using rule 99 (exceptlist -> except_simple .)
    WHILE           reduce using rule 99 (exceptlist -> except_simple .)
    FOR             reduce using rule 99 (exceptlist -> except_simple .)
    CONTINUE        reduce using rule 99 (exceptlist -> except_simple .)
    BREAK           reduce using rule 99 (exceptlist -> except_simple .)
    PASS            reduce using rule 99 (exceptlist -> except_simple .)
    RETURN          reduce using rule 99 (exceptlist -> except_simple .)
    YIELD           reduce using rule 99 (exceptlist -> except_simple .)
    RAISE           reduce using rule 99 (exceptlist -> except_simple .)
    DEL             reduce using rule 99 (exceptlist -> except_simple .)
    IDENTIFIER      reduce using rule 99 (exceptlist -> except_simple .)
    MINUS           reduce using rule 99 (exceptlist -> except_simple .)
    PLUS            reduce using rule 99 (exceptlist -> except_simple .)
    TILDE           reduce using rule 99 (exceptlist -> except_simple .)
    EXMARK          reduce using rule 99 (exceptlist -> except_simple .)
    NOT             reduce using rule 99 (exceptlist -> except_simple .)
    ASSERT          reduce using rule 99 (exceptlist -> except_simple .)
    LPAREN          reduce using rule 99 (exceptlist -> except_simple .)
    INTLITERAL      reduce using rule 99 (exceptlist -> except_simple .)
    FLOATLITERAL    reduce using rule 99 (exceptlist -> except_simple .)
    BOOLLITERAL     reduce using rule 99 (exceptlist -> except_simple .)
    STRINGLITERAL   reduce using rule 99 (exceptlist -> except_simple .)
    DOCSTRING       reduce using rule 99 (exceptlist -> except_simple .)
    NONE            reduce using rule 99 (exceptlist -> except_simple .)
    LAMBDA          reduce using rule 99 (exceptlist -> except_simple .)
    LBRACKET        reduce using rule 99 (exceptlist -> except_simple .)
    LCURLY          reduce using rule 99 (exceptlist -> except_simple .)
    $end            reduce using rule 99 (exceptlist -> except_simple .)
    DEDENT          reduce using rule 99 (exceptlist -> except_simple .)


state 604

    (101) exceptlist -> except_specific .

    ELSE            reduce using rule 101 (exceptlist -> except_specific .)
    FINALLY         reduce using rule 101 (exceptlist -> except_specific .)
    IF              reduce using rule 101 (exceptlist -> except_specific .)
    TRY             reduce using rule 101 (exceptlist -> except_specific .)
    WHILE           reduce using rule 101 (exceptlist -> except_specific .)
    FOR             reduce using rule 101 (exceptlist -> except_specific .)
    CONTINUE        reduce using rule 101 (exceptlist -> except_specific .)
    BREAK           reduce using rule 101 (exceptlist -> except_specific .)
    PASS            reduce using rule 101 (exceptlist -> except_specific .)
    RETURN          reduce using rule 101 (exceptlist -> except_specific .)
    YIELD           reduce using rule 101 (exceptlist -> except_specific .)
    RAISE           reduce using rule 101 (exceptlist -> except_specific .)
    DEL             reduce using rule 101 (exceptlist -> except_specific .)
    IDENTIFIER      reduce using rule 101 (exceptlist -> except_specific .)
    MINUS           reduce using rule 101 (exceptlist -> except_specific .)
    PLUS            reduce using rule 101 (exceptlist -> except_specific .)
    TILDE           reduce using rule 101 (exceptlist -> except_specific .)
    EXMARK          reduce using rule 101 (exceptlist -> except_specific .)
    NOT             reduce using rule 101 (exceptlist -> except_specific .)
    ASSERT          reduce using rule 101 (exceptlist -> except_specific .)
    LPAREN          reduce using rule 101 (exceptlist -> except_specific .)
    INTLITERAL      reduce using rule 101 (exceptlist -> except_specific .)
    FLOATLITERAL    reduce using rule 101 (exceptlist -> except_specific .)
    BOOLLITERAL     reduce using rule 101 (exceptlist -> except_specific .)
    STRINGLITERAL   reduce using rule 101 (exceptlist -> except_specific .)
    DOCSTRING       reduce using rule 101 (exceptlist -> except_specific .)
    NONE            reduce using rule 101 (exceptlist -> except_specific .)
    LAMBDA          reduce using rule 101 (exceptlist -> except_specific .)
    LBRACKET        reduce using rule 101 (exceptlist -> except_specific .)
    LCURLY          reduce using rule 101 (exceptlist -> except_specific .)
    $end            reduce using rule 101 (exceptlist -> except_specific .)
    DEDENT          reduce using rule 101 (exceptlist -> except_specific .)


state 605

    (100) exceptlist -> except_alias .

    ELSE            reduce using rule 100 (exceptlist -> except_alias .)
    FINALLY         reduce using rule 100 (exceptlist -> except_alias .)
    IF              reduce using rule 100 (exceptlist -> except_alias .)
    TRY             reduce using rule 100 (exceptlist -> except_alias .)
    WHILE           reduce using rule 100 (exceptlist -> except_alias .)
    FOR             reduce using rule 100 (exceptlist -> except_alias .)
    CONTINUE        reduce using rule 100 (exceptlist -> except_alias .)
    BREAK           reduce using rule 100 (exceptlist -> except_alias .)
    PASS            reduce using rule 100 (exceptlist -> except_alias .)
    RETURN          reduce using rule 100 (exceptlist -> except_alias .)
    YIELD           reduce using rule 100 (exceptlist -> except_alias .)
    RAISE           reduce using rule 100 (exceptlist -> except_alias .)
    DEL             reduce using rule 100 (exceptlist -> except_alias .)
    IDENTIFIER      reduce using rule 100 (exceptlist -> except_alias .)
    MINUS           reduce using rule 100 (exceptlist -> except_alias .)
    PLUS            reduce using rule 100 (exceptlist -> except_alias .)
    TILDE           reduce using rule 100 (exceptlist -> except_alias .)
    EXMARK          reduce using rule 100 (exceptlist -> except_alias .)
    NOT             reduce using rule 100 (exceptlist -> except_alias .)
    ASSERT          reduce using rule 100 (exceptlist -> except_alias .)
    LPAREN          reduce using rule 100 (exceptlist -> except_alias .)
    INTLITERAL      reduce using rule 100 (exceptlist -> except_alias .)
    FLOATLITERAL    reduce using rule 100 (exceptlist -> except_alias .)
    BOOLLITERAL     reduce using rule 100 (exceptlist -> except_alias .)
    STRINGLITERAL   reduce using rule 100 (exceptlist -> except_alias .)
    DOCSTRING       reduce using rule 100 (exceptlist -> except_alias .)
    NONE            reduce using rule 100 (exceptlist -> except_alias .)
    LAMBDA          reduce using rule 100 (exceptlist -> except_alias .)
    LBRACKET        reduce using rule 100 (exceptlist -> except_alias .)
    LCURLY          reduce using rule 100 (exceptlist -> except_alias .)
    $end            reduce using rule 100 (exceptlist -> except_alias .)
    DEDENT          reduce using rule 100 (exceptlist -> except_alias .)


state 606

    (273) except_specific -> EXCEPT error COLON suite exceptlist .

    ELSE            reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    FINALLY         reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    IF              reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    TRY             reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    WHILE           reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    FOR             reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    CONTINUE        reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    BREAK           reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    PASS            reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    RETURN          reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    YIELD           reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    RAISE           reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    DEL             reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    IDENTIFIER      reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    MINUS           reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    PLUS            reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    TILDE           reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    EXMARK          reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    NOT             reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    ASSERT          reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    LPAREN          reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    INTLITERAL      reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    FLOATLITERAL    reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    BOOLLITERAL     reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    STRINGLITERAL   reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    DOCSTRING       reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    NONE            reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    LAMBDA          reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    LBRACKET        reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    LCURLY          reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    $end            reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)
    DEDENT          reduce using rule 273 (except_specific -> EXCEPT error COLON suite exceptlist .)


state 607

    (102) exceptlist -> empty .

    ELSE            reduce using rule 102 (exceptlist -> empty .)
    FINALLY         reduce using rule 102 (exceptlist -> empty .)
    IF              reduce using rule 102 (exceptlist -> empty .)
    TRY             reduce using rule 102 (exceptlist -> empty .)
    WHILE           reduce using rule 102 (exceptlist -> empty .)
    FOR             reduce using rule 102 (exceptlist -> empty .)
    CONTINUE        reduce using rule 102 (exceptlist -> empty .)
    BREAK           reduce using rule 102 (exceptlist -> empty .)
    PASS            reduce using rule 102 (exceptlist -> empty .)
    RETURN          reduce using rule 102 (exceptlist -> empty .)
    YIELD           reduce using rule 102 (exceptlist -> empty .)
    RAISE           reduce using rule 102 (exceptlist -> empty .)
    DEL             reduce using rule 102 (exceptlist -> empty .)
    IDENTIFIER      reduce using rule 102 (exceptlist -> empty .)
    MINUS           reduce using rule 102 (exceptlist -> empty .)
    PLUS            reduce using rule 102 (exceptlist -> empty .)
    TILDE           reduce using rule 102 (exceptlist -> empty .)
    EXMARK          reduce using rule 102 (exceptlist -> empty .)
    NOT             reduce using rule 102 (exceptlist -> empty .)
    ASSERT          reduce using rule 102 (exceptlist -> empty .)
    LPAREN          reduce using rule 102 (exceptlist -> empty .)
    INTLITERAL      reduce using rule 102 (exceptlist -> empty .)
    FLOATLITERAL    reduce using rule 102 (exceptlist -> empty .)
    BOOLLITERAL     reduce using rule 102 (exceptlist -> empty .)
    STRINGLITERAL   reduce using rule 102 (exceptlist -> empty .)
    DOCSTRING       reduce using rule 102 (exceptlist -> empty .)
    NONE            reduce using rule 102 (exceptlist -> empty .)
    LAMBDA          reduce using rule 102 (exceptlist -> empty .)
    LBRACKET        reduce using rule 102 (exceptlist -> empty .)
    LCURLY          reduce using rule 102 (exceptlist -> empty .)
    $end            reduce using rule 102 (exceptlist -> empty .)
    DEDENT          reduce using rule 102 (exceptlist -> empty .)


state 608

    (272) except_alias -> EXCEPT IDENTIFIER AS error COLON . suite exceptlist
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 634
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 609

    (92) except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON . suite exceptlist
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 635
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 610

    (93) except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .

    ELSE            reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    FINALLY         reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    IF              reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    TRY             reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    WHILE           reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    FOR             reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    CONTINUE        reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    BREAK           reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    PASS            reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    RETURN          reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    YIELD           reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    RAISE           reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    DEL             reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    IDENTIFIER      reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    MINUS           reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    PLUS            reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    TILDE           reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    EXMARK          reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    NOT             reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    ASSERT          reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    LPAREN          reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    INTLITERAL      reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    FLOATLITERAL    reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    BOOLLITERAL     reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    STRINGLITERAL   reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    DOCSTRING       reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    NONE            reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    LAMBDA          reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    LBRACKET        reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    LCURLY          reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    $end            reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)
    DEDENT          reduce using rule 93 (except_specific -> EXCEPT IDENTIFIER COLON suite exceptlist .)


state 611

    (290) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .

    COLON           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    PLUS            reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    MINUS           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    TIMES           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    DIVIDE          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    PERCENT         reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    INTDIV          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    POW             reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    BITOR           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    BITAND          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    LSHIFT          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    RSHIFT          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    EQUALTO         reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    NEQUALTO        reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    LT              reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    LE              reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    GT              reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    GE              reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    REQUALTO        reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    BOOLOR          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    BOOLAND         reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    OR              reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    AND             reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    CARET           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    LPAREN          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    LBRACKET        reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    QMARK           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    DOT             reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    IS              reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    ISNOT           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    IN              reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    NOTIN           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    RBRACKET        reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    COMMA           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    NL              reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    SEMICOLON       reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    RPAREN          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    RCURLY          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    DOTDOT          reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    error           reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)
    COLONCOLON      reduce using rule 290 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN .)


state 612

    (230) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN . expression RPAREN
    (287) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN . error RPAREN
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    error           shift and go to state 636
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 637
    grouping                       shift and go to state 42

state 613

    (286) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN . expression RPAREN
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 638
    grouping                       shift and go to state 42

state 614

    (289) procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .

    COLON           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    PLUS            reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    MINUS           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    TIMES           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    DIVIDE          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    PERCENT         reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    INTDIV          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    POW             reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    BITOR           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    BITAND          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    LSHIFT          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    RSHIFT          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    EQUALTO         reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    NEQUALTO        reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    LT              reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    LE              reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    GT              reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    GE              reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    REQUALTO        reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    BOOLOR          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    BOOLAND         reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    OR              reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    AND             reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    CARET           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    LPAREN          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    LBRACKET        reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    QMARK           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    DOT             reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    IS              reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    ISNOT           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    IN              reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    NOTIN           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    RBRACKET        reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    COMMA           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    NL              reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    SEMICOLON       reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    RPAREN          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    RCURLY          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    DOTDOT          reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    error           reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)
    COLONCOLON      reduce using rule 289 (procedure_literal -> LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN .)


state 615

    (288) procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .

    COLON           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    PLUS            reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    MINUS           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    TIMES           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    DIVIDE          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    PERCENT         reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    INTDIV          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    POW             reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    BITOR           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    BITAND          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    LSHIFT          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    RSHIFT          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    EQUALTO         reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    NEQUALTO        reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    LT              reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    LE              reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    GT              reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    GE              reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    REQUALTO        reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    BOOLOR          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    BOOLAND         reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    OR              reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    AND             reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    CARET           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    LPAREN          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    LBRACKET        reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    QMARK           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    DOT             reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    IS              reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    ISNOT           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    IN              reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    NOTIN           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    RBRACKET        reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    COMMA           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    NL              reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    SEMICOLON       reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    RPAREN          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    RCURLY          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    DOTDOT          reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    error           reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)
    COLONCOLON      reduce using rule 288 (procedure_literal -> LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN .)


state 616

    (285) function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN . expression RPAREN
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> . expression QMARK expression COLON expression
    (247) member -> . expression DOT IDENTIFIER
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (245) variable -> . IDENTIFIER
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    IDENTIFIER      shift and go to state 66
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    member                         shift and go to state 114
    literal                        shift and go to state 64
    procedure_literal              shift and go to state 79
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 116
    slicing                        shift and go to state 117
    membership                     shift and go to state 85
    variable                       shift and go to state 118
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    ternary                        shift and go to state 92
    expression                     shift and go to state 639
    grouping                       shift and go to state 42

state 617

    (47) nonempty_argumentlist -> IDENTIFIER COLON . type
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    tupleof                        shift and go to state 315
    tuple_type                     shift and go to state 316
    type                           shift and go to state 640

state 618

    (270) conditional_extension -> ELIF error COLON suite . conditional_extension
    (83) conditional_extension -> . empty
    (84) conditional_extension -> . ELIF expression COLON suite conditional_extension
    (85) conditional_extension -> . ELSE COLON suite
    (270) conditional_extension -> . ELIF error COLON suite conditional_extension
    (3) empty -> .

    ELIF            shift and go to state 438
    ELSE            shift and go to state 440
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    conditional_extension          shift and go to state 641
    empty                          shift and go to state 441

state 619

    (84) conditional_extension -> ELIF expression COLON suite . conditional_extension
    (83) conditional_extension -> . empty
    (84) conditional_extension -> . ELIF expression COLON suite conditional_extension
    (85) conditional_extension -> . ELSE COLON suite
    (270) conditional_extension -> . ELIF error COLON suite conditional_extension
    (3) empty -> .

    ELIF            shift and go to state 438
    ELSE            shift and go to state 440
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    conditional_extension          shift and go to state 642
    empty                          shift and go to state 441

state 620

    (155) nonempty_typelist -> nonempty_typelist COMMA . nonempty_typelist
    (154) nonempty_typelist -> . type
    (155) nonempty_typelist -> . nonempty_typelist COMMA nonempty_typelist
    (136) type -> . function_type
    (137) type -> . procedure_type
    (138) type -> . tuple_type
    (139) type -> . list_type
    (140) type -> . dictionary_type
    (141) type -> . set_type
    (142) type -> . frozenset_type
    (143) type -> . generator_type
    (144) type -> . member_type
    (145) type -> . IDENTIFIER
    (148) function_type -> . FN LPAREN typelist RPAREN ARROW type
    (278) function_type -> . FN LPAREN error RPAREN ARROW type
    (149) procedure_type -> . PROC LPAREN typelist RPAREN
    (279) procedure_type -> . PROC LPAREN error RPAREN
    (158) tuple_type -> . tupleof
    (159) tuple_type -> . tupleparens
    (283) tuple_type -> . TUPLE error LPAREN tuple_typelist RPAREN
    (284) tuple_type -> . TUPLE OF LPAREN error RPAREN
    (166) list_type -> . listof
    (167) list_type -> . listbracket
    (172) dictionary_type -> . DICT OF LBRACKET type BITOR type RBRACKET
    (280) dictionary_type -> . DICT error LBRACKET type BITOR type RBRACKET
    (281) dictionary_type -> . DICT OF LBRACKET error BITOR type RBRACKET
    (282) dictionary_type -> . DICT OF LBRACKET type BITOR error RBRACKET
    (170) set_type -> . SET OF type
    (171) frozenset_type -> . FROZENSET OF type
    (147) generator_type -> . GENERATOR OF type
    (146) member_type -> . IDENTIFIER DOT IDENTIFIER
    (160) tupleof -> . TUPLE OF LPAREN tuple_typelist RPAREN
    (161) tupleparens -> . LPAREN tuple_typelist RPAREN
    (168) listof -> . LIST OF type
    (169) listbracket -> . LBRACKET type RBRACKET

    IDENTIFIER      shift and go to state 309
    FN              shift and go to state 305
    PROC            shift and go to state 318
    TUPLE           shift and go to state 317
    DICT            shift and go to state 320
    SET             shift and go to state 306
    FROZENSET       shift and go to state 311
    GENERATOR       shift and go to state 297
    LPAREN          shift and go to state 314
    LIST            shift and go to state 319
    LBRACKET        shift and go to state 300

    listof                         shift and go to state 307
    dictionary_type                shift and go to state 304
    listbracket                    shift and go to state 308
    generator_type                 shift and go to state 298
    member_type                    shift and go to state 299
    set_type                       shift and go to state 313
    function_type                  shift and go to state 301
    frozenset_type                 shift and go to state 302
    procedure_type                 shift and go to state 303
    tupleparens                    shift and go to state 312
    list_type                      shift and go to state 321
    nonempty_typelist              shift and go to state 572
    tuple_type                     shift and go to state 316
    type                           shift and go to state 446
    tupleof                        shift and go to state 315

state 621

    (156) nonempty_default_typelist -> QMARK type .

    COMMA           reduce using rule 156 (nonempty_default_typelist -> QMARK type .)
    RPAREN          reduce using rule 156 (nonempty_default_typelist -> QMARK type .)


state 622

    (157) nonempty_default_typelist -> nonempty_default_typelist COMMA . nonempty_default_typelist
    (156) nonempty_default_typelist -> . QMARK type
    (157) nonempty_default_typelist -> . nonempty_default_typelist COMMA nonempty_default_typelist

    QMARK           shift and go to state 573

    nonempty_default_typelist      shift and go to state 643

state 623

    (148) function_type -> FN LPAREN typelist RPAREN ARROW type .

    EQUALS          reduce using rule 148 (function_type -> FN LPAREN typelist RPAREN ARROW type .)
    COLONCOLON      reduce using rule 148 (function_type -> FN LPAREN typelist RPAREN ARROW type .)
    COMMA           reduce using rule 148 (function_type -> FN LPAREN typelist RPAREN ARROW type .)
    RPAREN          reduce using rule 148 (function_type -> FN LPAREN typelist RPAREN ARROW type .)
    error           reduce using rule 148 (function_type -> FN LPAREN typelist RPAREN ARROW type .)
    COLON           reduce using rule 148 (function_type -> FN LPAREN typelist RPAREN ARROW type .)
    TIMES           reduce using rule 148 (function_type -> FN LPAREN typelist RPAREN ARROW type .)
    RBRACKET        reduce using rule 148 (function_type -> FN LPAREN typelist RPAREN ARROW type .)
    BITOR           reduce using rule 148 (function_type -> FN LPAREN typelist RPAREN ARROW type .)


state 624

    (278) function_type -> FN LPAREN error RPAREN ARROW type .

    EQUALS          reduce using rule 278 (function_type -> FN LPAREN error RPAREN ARROW type .)
    COLONCOLON      reduce using rule 278 (function_type -> FN LPAREN error RPAREN ARROW type .)
    COMMA           reduce using rule 278 (function_type -> FN LPAREN error RPAREN ARROW type .)
    RPAREN          reduce using rule 278 (function_type -> FN LPAREN error RPAREN ARROW type .)
    error           reduce using rule 278 (function_type -> FN LPAREN error RPAREN ARROW type .)
    COLON           reduce using rule 278 (function_type -> FN LPAREN error RPAREN ARROW type .)
    TIMES           reduce using rule 278 (function_type -> FN LPAREN error RPAREN ARROW type .)
    RBRACKET        reduce using rule 278 (function_type -> FN LPAREN error RPAREN ARROW type .)
    BITOR           reduce using rule 278 (function_type -> FN LPAREN error RPAREN ARROW type .)


state 625

    (172) dictionary_type -> DICT OF LBRACKET type BITOR type . RBRACKET

    RBRACKET        shift and go to state 644


state 626

    (282) dictionary_type -> DICT OF LBRACKET type BITOR error . RBRACKET

    RBRACKET        shift and go to state 645


state 627

    (281) dictionary_type -> DICT OF LBRACKET error BITOR type . RBRACKET

    RBRACKET        shift and go to state 646


state 628

    (280) dictionary_type -> DICT error LBRACKET type BITOR type . RBRACKET

    RBRACKET        shift and go to state 647


state 629

    (256) function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 648
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 630

    (41) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 649
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 631

    (258) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 650
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 632

    (257) function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON . suite
    (51) suite -> . NL INDENT optdoc block DEDENT
    (52) suite -> . statement_simple NL
    (63) statement_simple -> . assignment
    (64) statement_simple -> . procedure_call
    (65) statement_simple -> . return
    (66) statement_simple -> . assert
    (67) statement_simple -> . yield
    (68) statement_simple -> . CONTINUE
    (69) statement_simple -> . BREAK
    (70) statement_simple -> . PASS
    (71) statement_simple -> . raise
    (72) statement_simple -> . delete
    (103) assignment -> . indexing assignment_operator expression
    (104) assignment -> . slicing assignment_operator expression
    (105) assignment -> . variable assignment_operator expression
    (106) assignment -> . member assignment_operator expression
    (128) procedure_call -> . expression LPAREN expressionlist RPAREN
    (277) procedure_call -> . expression LPAREN error RPAREN
    (129) return -> . RETURN empty
    (130) return -> . RETURN expression
    (131) assert -> . assertnomessage
    (132) assert -> . assertmessage
    (135) yield -> . YIELD expression
    (73) raise -> . RAISE IDENTIFIER
    (74) raise -> . RAISE function_call
    (75) raise -> . RAISE empty
    (76) delete -> . DEL expression
    (120) indexing -> . expression LBRACKET expression RBRACKET
    (274) indexing -> . expression LBRACKET error RBRACKET
    (121) slicing -> . expression LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> . expression LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> . expression LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> . expression LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> . expression LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> . expression LBRACKET expression COLON expression error RBRACKET
    (245) variable -> . IDENTIFIER
    (247) member -> . expression DOT IDENTIFIER
    (173) expression -> . calculation
    (174) expression -> . function_call
    (175) expression -> . grouping
    (176) expression -> . literal
    (177) expression -> . indexing
    (178) expression -> . slicing
    (179) expression -> . ternary
    (180) expression -> . member
    (181) expression -> . identity
    (182) expression -> . membership
    (183) expression -> . variable
    (207) expression -> . MINUS expression
    (208) expression -> . PLUS expression
    (209) expression -> . TILDE expression
    (210) expression -> . EXMARK expression
    (211) expression -> . NOT expression
    (133) assertnomessage -> . ASSERT expression
    (134) assertmessage -> . ASSERT expression COMMA literal
    (184) calculation -> . expression PLUS expression
    (185) calculation -> . expression MINUS expression
    (186) calculation -> . expression TIMES expression
    (187) calculation -> . expression DIVIDE expression
    (188) calculation -> . expression PERCENT expression
    (189) calculation -> . expression INTDIV expression
    (190) calculation -> . expression POW expression
    (191) calculation -> . expression BITOR expression
    (192) calculation -> . expression BITAND expression
    (193) calculation -> . expression LSHIFT expression
    (194) calculation -> . expression RSHIFT expression
    (195) calculation -> . expression EQUALTO expression
    (196) calculation -> . expression NEQUALTO expression
    (197) calculation -> . expression LT expression
    (198) calculation -> . expression LE expression
    (199) calculation -> . expression GT expression
    (200) calculation -> . expression GE expression
    (201) calculation -> . expression REQUALTO expression
    (202) calculation -> . expression BOOLOR expression
    (203) calculation -> . expression BOOLAND expression
    (204) calculation -> . expression OR expression
    (205) calculation -> . expression AND expression
    (206) calculation -> . expression CARET expression
    (212) function_call -> . expression LPAREN expressionlist RPAREN
    (217) grouping -> . LPAREN expression RPAREN
    (218) literal -> . INTLITERAL
    (219) literal -> . FLOATLITERAL
    (220) literal -> . BOOLLITERAL
    (221) literal -> . STRINGLITERAL
    (222) literal -> . DOCSTRING
    (223) literal -> . NONE
    (224) literal -> . function_literal
    (225) literal -> . procedure_literal
    (226) literal -> . tuple_literal
    (227) literal -> . list_literal
    (228) literal -> . dictionary_literal
    (229) literal -> . set_literal
    (246) ternary -> . expression QMARK expression COLON expression
    (248) identity -> . expression IS expression
    (249) identity -> . expression ISNOT expression
    (250) membership -> . expression IN expression
    (251) membership -> . expression NOTIN expression
    (230) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN
    (285) function_literal -> . LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN
    (286) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN
    (287) function_literal -> . LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN
    (288) procedure_literal -> . LAMBDA LPAREN error RPAREN COLON LPAREN statement_simple RPAREN
    (289) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN error LPAREN statement_simple RPAREN
    (290) procedure_literal -> . LAMBDA LPAREN argumentlist RPAREN COLON LPAREN error RPAREN
    (231) tuple_literal -> . LPAREN tuplelist RPAREN
    (238) list_literal -> . LBRACKET expressionlist RBRACKET
    (291) list_literal -> . LBRACKET error RBRACKET
    (239) dictionary_literal -> . LCURLY dictionarylist RCURLY
    (292) dictionary_literal -> . LCURLY error RCURLY
    (244) set_literal -> . LCURLY nonempty_expressionlist RCURLY

    NL              shift and go to state 235
    CONTINUE        shift and go to state 56
    BREAK           shift and go to state 73
    PASS            shift and go to state 39
    RETURN          shift and go to state 43
    YIELD           shift and go to state 84
    RAISE           shift and go to state 60
    DEL             shift and go to state 47
    IDENTIFIER      shift and go to state 66
    MINUS           shift and go to state 30
    PLUS            shift and go to state 34
    TILDE           shift and go to state 70
    EXMARK          shift and go to state 82
    NOT             shift and go to state 57
    ASSERT          shift and go to state 77
    LPAREN          shift and go to state 86
    INTLITERAL      shift and go to state 28
    FLOATLITERAL    shift and go to state 55
    BOOLLITERAL     shift and go to state 32
    STRINGLITERAL   shift and go to state 45
    DOCSTRING       shift and go to state 80
    NONE            shift and go to state 50
    LAMBDA          shift and go to state 59
    LBRACKET        shift and go to state 29
    LCURLY          shift and go to state 78

    calculation                    shift and go to state 76
    function_call                  shift and go to state 46
    set_literal                    shift and go to state 61
    procedure_call                 shift and go to state 48
    function_literal               shift and go to state 49
    tuple_literal                  shift and go to state 31
    raise                          shift and go to state 63
    member                         shift and go to state 81
    literal                        shift and go to state 64
    assertnomessage                shift and go to state 65
    suite                          shift and go to state 651
    return                         shift and go to state 36
    procedure_literal              shift and go to state 79
    assignment                     shift and go to state 83
    dictionary_literal             shift and go to state 69
    indexing                       shift and go to state 37
    assertmessage                  shift and go to state 52
    assert                         shift and go to state 71
    membership                     shift and go to state 85
    variable                       shift and go to state 87
    identity                       shift and go to state 88
    list_literal                   shift and go to state 90
    slicing                        shift and go to state 38
    statement_simple               shift and go to state 236
    yield                          shift and go to state 41
    ternary                        shift and go to state 92
    grouping                       shift and go to state 42
    expression                     shift and go to state 58
    delete                         shift and go to state 75

state 633

    (271) except_alias -> EXCEPT error AS IDENTIFIER COLON suite . exceptlist
    (99) exceptlist -> . except_simple
    (100) exceptlist -> . except_alias
    (101) exceptlist -> . except_specific
    (102) exceptlist -> . empty
    (91) except_simple -> . EXCEPT COLON suite
    (92) except_alias -> . EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist
    (271) except_alias -> . EXCEPT error AS IDENTIFIER COLON suite exceptlist
    (272) except_alias -> . EXCEPT IDENTIFIER AS error COLON suite exceptlist
    (93) except_specific -> . EXCEPT IDENTIFIER COLON suite exceptlist
    (273) except_specific -> . EXCEPT error COLON suite exceptlist
    (3) empty -> .

    EXCEPT          shift and go to state 345
    ELSE            reduce using rule 3 (empty -> .)
    FINALLY         reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    except_simple                  shift and go to state 603
    except_specific                shift and go to state 604
    except_alias                   shift and go to state 605
    exceptlist                     shift and go to state 652
    empty                          shift and go to state 607

state 634

    (272) except_alias -> EXCEPT IDENTIFIER AS error COLON suite . exceptlist
    (99) exceptlist -> . except_simple
    (100) exceptlist -> . except_alias
    (101) exceptlist -> . except_specific
    (102) exceptlist -> . empty
    (91) except_simple -> . EXCEPT COLON suite
    (92) except_alias -> . EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist
    (271) except_alias -> . EXCEPT error AS IDENTIFIER COLON suite exceptlist
    (272) except_alias -> . EXCEPT IDENTIFIER AS error COLON suite exceptlist
    (93) except_specific -> . EXCEPT IDENTIFIER COLON suite exceptlist
    (273) except_specific -> . EXCEPT error COLON suite exceptlist
    (3) empty -> .

    EXCEPT          shift and go to state 345
    ELSE            reduce using rule 3 (empty -> .)
    FINALLY         reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    except_simple                  shift and go to state 603
    except_specific                shift and go to state 604
    except_alias                   shift and go to state 605
    exceptlist                     shift and go to state 653
    empty                          shift and go to state 607

state 635

    (92) except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite . exceptlist
    (99) exceptlist -> . except_simple
    (100) exceptlist -> . except_alias
    (101) exceptlist -> . except_specific
    (102) exceptlist -> . empty
    (91) except_simple -> . EXCEPT COLON suite
    (92) except_alias -> . EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist
    (271) except_alias -> . EXCEPT error AS IDENTIFIER COLON suite exceptlist
    (272) except_alias -> . EXCEPT IDENTIFIER AS error COLON suite exceptlist
    (93) except_specific -> . EXCEPT IDENTIFIER COLON suite exceptlist
    (273) except_specific -> . EXCEPT error COLON suite exceptlist
    (3) empty -> .

    EXCEPT          shift and go to state 345
    ELSE            reduce using rule 3 (empty -> .)
    FINALLY         reduce using rule 3 (empty -> .)
    IF              reduce using rule 3 (empty -> .)
    TRY             reduce using rule 3 (empty -> .)
    WHILE           reduce using rule 3 (empty -> .)
    FOR             reduce using rule 3 (empty -> .)
    CONTINUE        reduce using rule 3 (empty -> .)
    BREAK           reduce using rule 3 (empty -> .)
    PASS            reduce using rule 3 (empty -> .)
    RETURN          reduce using rule 3 (empty -> .)
    YIELD           reduce using rule 3 (empty -> .)
    RAISE           reduce using rule 3 (empty -> .)
    DEL             reduce using rule 3 (empty -> .)
    IDENTIFIER      reduce using rule 3 (empty -> .)
    MINUS           reduce using rule 3 (empty -> .)
    PLUS            reduce using rule 3 (empty -> .)
    TILDE           reduce using rule 3 (empty -> .)
    EXMARK          reduce using rule 3 (empty -> .)
    NOT             reduce using rule 3 (empty -> .)
    ASSERT          reduce using rule 3 (empty -> .)
    LPAREN          reduce using rule 3 (empty -> .)
    INTLITERAL      reduce using rule 3 (empty -> .)
    FLOATLITERAL    reduce using rule 3 (empty -> .)
    BOOLLITERAL     reduce using rule 3 (empty -> .)
    STRINGLITERAL   reduce using rule 3 (empty -> .)
    DOCSTRING       reduce using rule 3 (empty -> .)
    NONE            reduce using rule 3 (empty -> .)
    LAMBDA          reduce using rule 3 (empty -> .)
    LBRACKET        reduce using rule 3 (empty -> .)
    LCURLY          reduce using rule 3 (empty -> .)
    $end            reduce using rule 3 (empty -> .)
    DEDENT          reduce using rule 3 (empty -> .)

    except_simple                  shift and go to state 603
    except_specific                shift and go to state 604
    except_alias                   shift and go to state 605
    exceptlist                     shift and go to state 654
    empty                          shift and go to state 607

state 636

    (287) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error . RPAREN

    RPAREN          shift and go to state 655


state 637

    (230) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression . RPAREN
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    RPAREN          shift and go to state 656
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 638

    (286) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression . RPAREN
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    RPAREN          shift and go to state 657
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 639

    (285) function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression . RPAREN
    (184) calculation -> expression . PLUS expression
    (185) calculation -> expression . MINUS expression
    (186) calculation -> expression . TIMES expression
    (187) calculation -> expression . DIVIDE expression
    (188) calculation -> expression . PERCENT expression
    (189) calculation -> expression . INTDIV expression
    (190) calculation -> expression . POW expression
    (191) calculation -> expression . BITOR expression
    (192) calculation -> expression . BITAND expression
    (193) calculation -> expression . LSHIFT expression
    (194) calculation -> expression . RSHIFT expression
    (195) calculation -> expression . EQUALTO expression
    (196) calculation -> expression . NEQUALTO expression
    (197) calculation -> expression . LT expression
    (198) calculation -> expression . LE expression
    (199) calculation -> expression . GT expression
    (200) calculation -> expression . GE expression
    (201) calculation -> expression . REQUALTO expression
    (202) calculation -> expression . BOOLOR expression
    (203) calculation -> expression . BOOLAND expression
    (204) calculation -> expression . OR expression
    (205) calculation -> expression . AND expression
    (206) calculation -> expression . CARET expression
    (212) function_call -> expression . LPAREN expressionlist RPAREN
    (120) indexing -> expression . LBRACKET expression RBRACKET
    (274) indexing -> expression . LBRACKET error RBRACKET
    (121) slicing -> expression . LBRACKET expression COLON expression optslice RBRACKET
    (122) slicing -> expression . LBRACKET empty COLON expression optslice RBRACKET
    (123) slicing -> expression . LBRACKET expression COLON empty optslice RBRACKET
    (124) slicing -> expression . LBRACKET empty COLON empty optslice RBRACKET
    (275) slicing -> expression . LBRACKET error COLON expression optslice RBRACKET
    (276) slicing -> expression . LBRACKET expression COLON expression error RBRACKET
    (246) ternary -> expression . QMARK expression COLON expression
    (247) member -> expression . DOT IDENTIFIER
    (248) identity -> expression . IS expression
    (249) identity -> expression . ISNOT expression
    (250) membership -> expression . IN expression
    (251) membership -> expression . NOTIN expression

    RPAREN          shift and go to state 658
    PLUS            shift and go to state 162
    MINUS           shift and go to state 156
    TIMES           shift and go to state 171
    DIVIDE          shift and go to state 166
    PERCENT         shift and go to state 169
    INTDIV          shift and go to state 151
    POW             shift and go to state 159
    BITOR           shift and go to state 164
    BITAND          shift and go to state 172
    LSHIFT          shift and go to state 155
    RSHIFT          shift and go to state 152
    EQUALTO         shift and go to state 160
    NEQUALTO        shift and go to state 176
    LT              shift and go to state 161
    LE              shift and go to state 158
    GT              shift and go to state 165
    GE              shift and go to state 179
    REQUALTO        shift and go to state 170
    BOOLOR          shift and go to state 167
    BOOLAND         shift and go to state 153
    OR              shift and go to state 180
    AND             shift and go to state 177
    CARET           shift and go to state 150
    LPAREN          shift and go to state 229
    LBRACKET        shift and go to state 154
    QMARK           shift and go to state 178
    DOT             shift and go to state 157
    IS              shift and go to state 168
    ISNOT           shift and go to state 163
    IN              shift and go to state 175
    NOTIN           shift and go to state 173


state 640

    (47) nonempty_argumentlist -> IDENTIFIER COLON type .

    COMMA           reduce using rule 47 (nonempty_argumentlist -> IDENTIFIER COLON type .)
    RPAREN          reduce using rule 47 (nonempty_argumentlist -> IDENTIFIER COLON type .)
    error           reduce using rule 47 (nonempty_argumentlist -> IDENTIFIER COLON type .)


state 641

    (270) conditional_extension -> ELIF error COLON suite conditional_extension .

    IF              reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    TRY             reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    WHILE           reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    FOR             reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    CONTINUE        reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    BREAK           reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    PASS            reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    RETURN          reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    YIELD           reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    RAISE           reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    DEL             reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    IDENTIFIER      reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    MINUS           reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    PLUS            reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    TILDE           reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    EXMARK          reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    NOT             reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    ASSERT          reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    LPAREN          reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    INTLITERAL      reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    FLOATLITERAL    reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    BOOLLITERAL     reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    STRINGLITERAL   reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    DOCSTRING       reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    NONE            reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    LAMBDA          reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    LBRACKET        reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    LCURLY          reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    $end            reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)
    DEDENT          reduce using rule 270 (conditional_extension -> ELIF error COLON suite conditional_extension .)


state 642

    (84) conditional_extension -> ELIF expression COLON suite conditional_extension .

    IF              reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    TRY             reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    WHILE           reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    FOR             reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    CONTINUE        reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    BREAK           reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    PASS            reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    RETURN          reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    YIELD           reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    RAISE           reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    DEL             reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    IDENTIFIER      reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    MINUS           reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    PLUS            reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    TILDE           reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    EXMARK          reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    NOT             reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    ASSERT          reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    LPAREN          reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    INTLITERAL      reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    FLOATLITERAL    reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    BOOLLITERAL     reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    STRINGLITERAL   reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    DOCSTRING       reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    NONE            reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    LAMBDA          reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    LBRACKET        reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    LCURLY          reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    $end            reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)
    DEDENT          reduce using rule 84 (conditional_extension -> ELIF expression COLON suite conditional_extension .)


state 643

    (157) nonempty_default_typelist -> nonempty_default_typelist COMMA nonempty_default_typelist .
    (157) nonempty_default_typelist -> nonempty_default_typelist . COMMA nonempty_default_typelist

    COMMA           reduce using rule 157 (nonempty_default_typelist -> nonempty_default_typelist COMMA nonempty_default_typelist .)
    RPAREN          reduce using rule 157 (nonempty_default_typelist -> nonempty_default_typelist COMMA nonempty_default_typelist .)

  ! COMMA           [ shift and go to state 622 ]


state 644

    (172) dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .

    COMMA           reduce using rule 172 (dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .)
    RPAREN          reduce using rule 172 (dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .)
    error           reduce using rule 172 (dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .)
    COLON           reduce using rule 172 (dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .)
    RBRACKET        reduce using rule 172 (dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .)
    EQUALS          reduce using rule 172 (dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .)
    TIMES           reduce using rule 172 (dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .)
    BITOR           reduce using rule 172 (dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .)
    COLONCOLON      reduce using rule 172 (dictionary_type -> DICT OF LBRACKET type BITOR type RBRACKET .)


state 645

    (282) dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .

    COMMA           reduce using rule 282 (dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .)
    RPAREN          reduce using rule 282 (dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .)
    error           reduce using rule 282 (dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .)
    COLON           reduce using rule 282 (dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .)
    RBRACKET        reduce using rule 282 (dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .)
    EQUALS          reduce using rule 282 (dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .)
    TIMES           reduce using rule 282 (dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .)
    BITOR           reduce using rule 282 (dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .)
    COLONCOLON      reduce using rule 282 (dictionary_type -> DICT OF LBRACKET type BITOR error RBRACKET .)


state 646

    (281) dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .

    COMMA           reduce using rule 281 (dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .)
    RPAREN          reduce using rule 281 (dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .)
    error           reduce using rule 281 (dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .)
    COLON           reduce using rule 281 (dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .)
    RBRACKET        reduce using rule 281 (dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .)
    EQUALS          reduce using rule 281 (dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .)
    TIMES           reduce using rule 281 (dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .)
    BITOR           reduce using rule 281 (dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .)
    COLONCOLON      reduce using rule 281 (dictionary_type -> DICT OF LBRACKET error BITOR type RBRACKET .)


state 647

    (280) dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .

    COMMA           reduce using rule 280 (dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .)
    RPAREN          reduce using rule 280 (dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .)
    error           reduce using rule 280 (dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .)
    COLON           reduce using rule 280 (dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .)
    RBRACKET        reduce using rule 280 (dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .)
    EQUALS          reduce using rule 280 (dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .)
    TIMES           reduce using rule 280 (dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .)
    BITOR           reduce using rule 280 (dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .)
    COLONCOLON      reduce using rule 280 (dictionary_type -> DICT error LBRACKET type BITOR type RBRACKET .)


state 648

    (256) function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .

    DEF             reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    IF              reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    TRY             reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    WHILE           reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    FOR             reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    CONTINUE        reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    BREAK           reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    PASS            reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    RETURN          reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    YIELD           reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    RAISE           reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    DEL             reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    IDENTIFIER      reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    MINUS           reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    PLUS            reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    TILDE           reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    EXMARK          reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    NOT             reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    ASSERT          reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    LPAREN          reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    INTLITERAL      reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    FLOATLITERAL    reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    BOOLLITERAL     reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    STRINGLITERAL   reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    DOCSTRING       reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    NONE            reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    LAMBDA          reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    LBRACKET        reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    LCURLY          reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    $end            reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)
    DEDENT          reduce using rule 256 (function_definition -> DEF error LPAREN argumentlist RPAREN ARROW type COLON suite .)


state 649

    (41) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .

    DEF             reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    IF              reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    TRY             reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    WHILE           reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    FOR             reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    CONTINUE        reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    BREAK           reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    PASS            reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    RETURN          reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    YIELD           reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    RAISE           reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    DEL             reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    IDENTIFIER      reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    MINUS           reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    PLUS            reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    TILDE           reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    EXMARK          reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    NOT             reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    ASSERT          reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    LPAREN          reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    INTLITERAL      reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    FLOATLITERAL    reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    BOOLLITERAL     reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    STRINGLITERAL   reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    DOCSTRING       reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    NONE            reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    LAMBDA          reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    LBRACKET        reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    LCURLY          reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    $end            reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)
    DEDENT          reduce using rule 41 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW type COLON suite .)


state 650

    (258) function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .

    DEF             reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    IF              reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    TRY             reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    WHILE           reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    FOR             reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    CONTINUE        reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    BREAK           reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    PASS            reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    RETURN          reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    YIELD           reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    RAISE           reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    DEL             reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    IDENTIFIER      reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    MINUS           reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    PLUS            reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    TILDE           reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    EXMARK          reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    NOT             reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    ASSERT          reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    LPAREN          reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    INTLITERAL      reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    FLOATLITERAL    reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    BOOLLITERAL     reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    STRINGLITERAL   reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    DOCSTRING       reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    NONE            reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    LAMBDA          reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    LBRACKET        reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    LCURLY          reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    $end            reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)
    DEDENT          reduce using rule 258 (function_definition -> DEF IDENTIFIER LPAREN argumentlist RPAREN ARROW error COLON suite .)


state 651

    (257) function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .

    DEF             reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    IF              reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    TRY             reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    WHILE           reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    FOR             reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    CONTINUE        reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    BREAK           reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    PASS            reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    RETURN          reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    YIELD           reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    RAISE           reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    DEL             reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    IDENTIFIER      reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    MINUS           reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    PLUS            reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    TILDE           reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    EXMARK          reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    NOT             reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    ASSERT          reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    LPAREN          reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    INTLITERAL      reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    FLOATLITERAL    reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    BOOLLITERAL     reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    STRINGLITERAL   reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    DOCSTRING       reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    NONE            reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    LAMBDA          reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    LBRACKET        reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    LCURLY          reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    $end            reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)
    DEDENT          reduce using rule 257 (function_definition -> DEF IDENTIFIER LPAREN argumentlist error ARROW type COLON suite .)


state 652

    (271) except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .

    ELSE            reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    FINALLY         reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    IF              reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    TRY             reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    WHILE           reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    FOR             reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    CONTINUE        reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    BREAK           reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    PASS            reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    RETURN          reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    YIELD           reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    RAISE           reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    DEL             reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    IDENTIFIER      reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    MINUS           reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    PLUS            reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    TILDE           reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    EXMARK          reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    NOT             reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    ASSERT          reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    LPAREN          reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    INTLITERAL      reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    FLOATLITERAL    reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    BOOLLITERAL     reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    STRINGLITERAL   reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    DOCSTRING       reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    NONE            reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    LAMBDA          reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    LBRACKET        reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    LCURLY          reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    $end            reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)
    DEDENT          reduce using rule 271 (except_alias -> EXCEPT error AS IDENTIFIER COLON suite exceptlist .)


state 653

    (272) except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .

    ELSE            reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    FINALLY         reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    IF              reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    TRY             reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    WHILE           reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    FOR             reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    CONTINUE        reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    BREAK           reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    PASS            reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    RETURN          reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    YIELD           reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    RAISE           reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    DEL             reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    IDENTIFIER      reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    MINUS           reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    PLUS            reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    TILDE           reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    EXMARK          reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    NOT             reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    ASSERT          reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    LPAREN          reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    INTLITERAL      reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    FLOATLITERAL    reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    BOOLLITERAL     reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    STRINGLITERAL   reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    DOCSTRING       reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    NONE            reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    LAMBDA          reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    LBRACKET        reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    LCURLY          reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    $end            reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)
    DEDENT          reduce using rule 272 (except_alias -> EXCEPT IDENTIFIER AS error COLON suite exceptlist .)


state 654

    (92) except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .

    ELSE            reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    FINALLY         reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    IF              reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    TRY             reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    WHILE           reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    FOR             reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    CONTINUE        reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    BREAK           reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    PASS            reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    RETURN          reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    YIELD           reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    RAISE           reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    DEL             reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    IDENTIFIER      reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    MINUS           reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    PLUS            reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    TILDE           reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    EXMARK          reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    NOT             reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    ASSERT          reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    LPAREN          reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    INTLITERAL      reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    FLOATLITERAL    reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    BOOLLITERAL     reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    STRINGLITERAL   reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    DOCSTRING       reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    NONE            reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    LAMBDA          reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    LBRACKET        reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    LCURLY          reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    $end            reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)
    DEDENT          reduce using rule 92 (except_alias -> EXCEPT IDENTIFIER AS IDENTIFIER COLON suite exceptlist .)


state 655

    (287) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .

    LPAREN          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    LBRACKET        reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    DOT             reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    PLUS            reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    MINUS           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    TIMES           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    DIVIDE          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    PERCENT         reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    INTDIV          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    POW             reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    BITOR           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    BITAND          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    LSHIFT          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    RSHIFT          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    EQUALTO         reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    NEQUALTO        reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    LT              reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    LE              reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    GT              reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    GE              reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    REQUALTO        reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    BOOLOR          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    BOOLAND         reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    OR              reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    AND             reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    CARET           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    QMARK           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    IS              reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    ISNOT           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    IN              reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    NOTIN           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    COMMA           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    NL              reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    SEMICOLON       reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    RPAREN          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    COLON           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    RBRACKET        reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    RCURLY          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    DOTDOT          reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    error           reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)
    COLONCOLON      reduce using rule 287 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN error RPAREN .)


state 656

    (230) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .

    LPAREN          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    DOT             reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    PLUS            reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    MINUS           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    TIMES           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    PERCENT         reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    INTDIV          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    POW             reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    BITOR           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    BITAND          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    NEQUALTO        reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    LT              reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    LE              reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    GT              reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    GE              reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    REQUALTO        reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    BOOLOR          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    BOOLAND         reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    OR              reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    AND             reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    CARET           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    QMARK           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    IS              reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    ISNOT           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    IN              reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    NOTIN           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    COMMA           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    NL              reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    RPAREN          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    COLON           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    RCURLY          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    error           reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)
    COLONCOLON      reduce using rule 230 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW type COLON LPAREN expression RPAREN .)


state 657

    (286) function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .

    LPAREN          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    DOT             reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    PLUS            reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    MINUS           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    TIMES           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    PERCENT         reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    INTDIV          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    POW             reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    BITOR           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    BITAND          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    NEQUALTO        reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    LT              reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    LE              reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    GT              reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    GE              reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    REQUALTO        reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    BOOLOR          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    BOOLAND         reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    OR              reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    AND             reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    CARET           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    QMARK           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    IS              reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    ISNOT           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    IN              reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    NOTIN           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    COMMA           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    NL              reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    RPAREN          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    COLON           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    RCURLY          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    error           reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)
    COLONCOLON      reduce using rule 286 (function_literal -> LAMBDA LPAREN argumentlist RPAREN ARROW error COLON LPAREN expression RPAREN .)


state 658

    (285) function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .

    LPAREN          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    DOT             reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    PLUS            reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    MINUS           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    TIMES           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    PERCENT         reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    INTDIV          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    POW             reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    BITOR           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    BITAND          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    NEQUALTO        reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    LT              reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    LE              reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    GT              reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    GE              reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    REQUALTO        reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    BOOLOR          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    BOOLAND         reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    OR              reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    AND             reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    CARET           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    QMARK           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    IS              reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    ISNOT           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    IN              reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    NOTIN           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    COMMA           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    NL              reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    RPAREN          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    COLON           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    RCURLY          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    DOTDOT          reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    error           reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)
    COLONCOLON      reduce using rule 285 (function_literal -> LAMBDA LPAREN error RPAREN ARROW type COLON LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOCSTRING in state 0 resolved as shift
WARNING: shift/reduce conflict for PASS in state 6 resolved as shift
WARNING: shift/reduce conflict for DOCSTRING in state 348 resolved as shift
